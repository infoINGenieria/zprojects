/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDReportes.java
 *
 * Created on 02/12/2011, 13:52:57
 */
package zilleprojects.form;

import DAO.EquiposDAO;
import DAO.EstacionServicioDAO;
import DAO.InformesHorasDAO;
import DAO.ObrasDAO;
import DAO.OperarioDAO;
import DAO.ParteDiarioDAO;
import DAO.ReportesDAO;
import Modelo.Equipos;
import Modelo.EstacionServicio;
import Modelo.InformesHoras;
import ViewModel.ItemObra;
import Utils.Mes;
import Modelo.Obras;
import Modelo.tablemodel.ObrasTablaInforme;
import Modelo.Operario;
import Modelo.Periodo;
import Utils.FechaUtil;
import Utils.FileManager;
import Utils.UtilReport;
import Vista.JDialogCustom;
import Vista.OpcionPanel;
import Vista.PanelAzul;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;
import net.sf.jasperreports.export.SimpleXlsReportConfiguration;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import zilleprojects.ZilleProjectsApp;

/**
 *
 * @author matuu
 */
public class JDReportes extends JDialogCustom {
    java.awt.Frame parent;
    /** Creates new form JDReportes */
    public JDReportes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        desdeFechaFiltro.setDate(FechaUtil.inicioPeriodo());
        hastaFechaFiltro.setDate(FechaUtil.finPeriodo());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        informeHorasDialog = new javax.swing.JDialog();
        jPanel2 = new PanelAzul();
        operariosCombo = new javax.swing.JComboBox();
        botonBuscarEmpleado = new javax.swing.JButton();
        desdeFecha = new com.toedter.calendar.JDateChooser();
        hastaFecha = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        mesPeriodo = new com.toedter.calendar.JMonthChooser();
        añoPeriodo = new com.toedter.calendar.JYearChooser();
        empleadoCheck = new javax.swing.JCheckBox();
        quincena = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        buscarEmpleado = new javax.swing.JDialog();
        jPanel28 = new PanelAzul();
        query1 = new javax.swing.JTextField();
        botonQuery = new javax.swing.JButton();
        selectRow = new javax.swing.JButton();
        exitDialog = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaEmpleados = new javax.swing.JList();
        informeDetalleHora = new javax.swing.JDialog();
        jPanel4 = new PanelAzul();
        operariosCombo1 = new javax.swing.JComboBox();
        botonBuscarEmpleado1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listReportes = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        selectObraDialog = new javax.swing.JDialog();
        jPanel12 = new PanelAzul();
        cerrarBusquedaObras = new javax.swing.JButton();
        selectObrasButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        listaDeObras = new javax.swing.JList();
        seleccionarPeriodosDialog = new javax.swing.JDialog();
        jPanel23 = new PanelAzul();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaDePeriodos = new javax.swing.JList();
        jButton10 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        seleccionarEquipo = new javax.swing.JDialog();
        jPanel18 = new PanelAzul();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListEquipos = new javax.swing.JList();
        queryEquipos = new javax.swing.JTextField();
        buscarEquiposBoton = new javax.swing.JButton();
        salirBuscarEquipos = new javax.swing.JButton();
        seleccionarEquiposBoton = new javax.swing.JButton();
        selectPlataformaDialog = new javax.swing.JDialog();
        jPanel24 = new PanelAzul();
        cerrarBusquedaPlataformas = new javax.swing.JButton();
        selectPlataformasButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        listaDePlataformas = new javax.swing.JList();
        jPanel26 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new PanelAzul();
        jPanel1 = new javax.swing.JPanel();
        generarDetalleRegistroButton = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jPanel3 = new javax.swing.JPanel();
        generarInformesHorasButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel16 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jPanel25 = new javax.swing.JPanel();
        generarExportacion = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        lblPeriodo = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jButton18 = new javax.swing.JButton();
        jPanel5 = new PanelAzul();
        jPanel10 = new javax.swing.JPanel();
        generarReportePersEqXObra = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        generarEqMatXObra = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        lblObraReportPersEqXObra = new javax.swing.JLabel();
        seleccionarObraReportPersEq = new javax.swing.JButton();
        jPanel7 = new PanelAzul();
        jPanel14 = new javax.swing.JPanel();
        lblEquiposSelect = new javax.swing.JLabel();
        selectEquiposBoton = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        genReporteEquipo = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        exportTodosEquipos = new javax.swing.JButton();
        txtProcessing = new javax.swing.JLabel();
        jPanel17 = new PanelAzul();
        jPanel20 = new javax.swing.JPanel();
        obraSeleccionadaConsumo = new javax.swing.JLabel();
        selectConsumoObraBoton = new javax.swing.JButton();
        btnInformeCombustibleObra = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        lblEquiposCombustible = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        btnInformeCombustibleEquipo = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        btnSeleccionPlataforma = new javax.swing.JButton();
        lblPlataformaCombustible = new javax.swing.JLabel();
        btnInformeCombustiblePlataforma = new javax.swing.JButton();
        jPanel27 = new PanelAzul();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        isOperarioSelectedCustomInforme = new javax.swing.JCheckBox();
        lblOperarioSelected = new javax.swing.JLabel();
        btnBuscarEmpleado = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jPanel8 = new PanelAzul();
        jPanel30 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jPanel31 = new PanelAzul();
        jPanel32 = new javax.swing.JPanel();
        dateFechaLimiteAlarma = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        genInformeAlarmasPróximas = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        desdeFechaFiltro = new com.toedter.calendar.JDateChooser();
        hastaFechaFiltro = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();

        informeHorasDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(JDReportes.class);
        informeHorasDialog.setTitle(resourceMap.getString("informeHorasDialog.title")); // NOI18N
        informeHorasDialog.setMinimumSize(new java.awt.Dimension(518, 242));
        informeHorasDialog.setModal(true);
        informeHorasDialog.setName("informeHorasDialog"); // NOI18N
        informeHorasDialog.setResizable(false);
        informeHorasDialog.setUndecorated(true);

        jPanel2.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel2.border.lineColor"), 1, true)); // NOI18N
        jPanel2.setMinimumSize(new java.awt.Dimension(516, 222));
        jPanel2.setName("jPanel2"); // NOI18N

        operariosCombo.setModel(operarios);
        operariosCombo.setName("operariosCombo"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getActionMap(JDReportes.class, this);
        botonBuscarEmpleado.setAction(actionMap.get("mostrarBusquedaEmpleado")); // NOI18N
        botonBuscarEmpleado.setIcon(resourceMap.getIcon("botonBuscarEmpleado.icon")); // NOI18N
        botonBuscarEmpleado.setText(resourceMap.getString("botonBuscarEmpleado.text")); // NOI18N
        botonBuscarEmpleado.setToolTipText(resourceMap.getString("botonBuscarEmpleado.toolTipText")); // NOI18N
        botonBuscarEmpleado.setName("botonBuscarEmpleado"); // NOI18N

        desdeFecha.setName("desdeFecha"); // NOI18N
        desdeFecha.setOpaque(false);

        hastaFecha.setName("hastaFecha"); // NOI18N
        hastaFecha.setOpaque(false);

        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setName("jLabel6"); // NOI18N

        jButton5.setAction(actionMap.get("mostrarInformesAnteriores")); // NOI18N
        jButton5.setIcon(resourceMap.getIcon("jButton5.icon")); // NOI18N
        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N

        jButton4.setAction(actionMap.get("CrearInforme")); // NOI18N
        jButton4.setIcon(resourceMap.getIcon("jButton4.icon")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N

        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        mesPeriodo.setName("mesPeriodo"); // NOI18N
        mesPeriodo.setPreferredSize(new java.awt.Dimension(145, 19));

        añoPeriodo.setName("añoPeriodo"); // NOI18N

        empleadoCheck.setBackground(resourceMap.getColor("empleadoCheck.background")); // NOI18N
        empleadoCheck.setSelected(true);
        empleadoCheck.setText(resourceMap.getString("empleadoCheck.text")); // NOI18N
        empleadoCheck.setName("empleadoCheck"); // NOI18N
        empleadoCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                empleadoCheckItemStateChanged(evt);
            }
        });

        quincena.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"0", "1", "2" }));
        quincena.setName("quincena"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(empleadoCheck))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(operariosCombo, 0, 416, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonBuscarEmpleado))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(desdeFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hastaFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(mesPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(quincena, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(añoPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jLabel7))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(operariosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscarEmpleado)
                    .addComponent(empleadoCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(hastaFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(desdeFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(mesPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quincena, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(añoPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {añoPeriodo, botonBuscarEmpleado, desdeFecha, hastaFecha, mesPeriodo, operariosCombo, quincena});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton3, jButton4, jButton5});

        javax.swing.GroupLayout informeHorasDialogLayout = new javax.swing.GroupLayout(informeHorasDialog.getContentPane());
        informeHorasDialog.getContentPane().setLayout(informeHorasDialogLayout);
        informeHorasDialogLayout.setHorizontalGroup(
            informeHorasDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        informeHorasDialogLayout.setVerticalGroup(
            informeHorasDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buscarEmpleado.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        buscarEmpleado.setTitle(resourceMap.getString("buscarEmpleado.title")); // NOI18N
        buscarEmpleado.setAlwaysOnTop(true);
        buscarEmpleado.setMinimumSize(new java.awt.Dimension(520, 300));
        buscarEmpleado.setModal(true);
        buscarEmpleado.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        buscarEmpleado.setName("buscarEmpleado"); // NOI18N
        buscarEmpleado.setResizable(false);
        buscarEmpleado.setUndecorated(true);

        jPanel28.setName("jPanel28"); // NOI18N

        query1.setMinimumSize(new java.awt.Dimension(200, 30));
        query1.setName("query1"); // NOI18N
        query1.setPreferredSize(new java.awt.Dimension(200, 30));
        query1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                query1FocusGained(evt);
            }
        });

        botonQuery.setAction(actionMap.get("buscarEmpleado")); // NOI18N
        botonQuery.setIcon(resourceMap.getIcon("botonQuery.icon")); // NOI18N
        botonQuery.setToolTipText(resourceMap.getString("botonQuery.toolTipText")); // NOI18N
        botonQuery.setName("botonQuery"); // NOI18N

        selectRow.setIcon(resourceMap.getIcon("selectRow.icon")); // NOI18N
        selectRow.setText(resourceMap.getString("selectRow.text")); // NOI18N
        selectRow.setName("selectRow"); // NOI18N
        selectRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectRowActionPerformed(evt);
            }
        });

        exitDialog.setIcon(resourceMap.getIcon("exitDialog.icon")); // NOI18N
        exitDialog.setText(resourceMap.getString("exitDialog.text")); // NOI18N
        exitDialog.setName("exitDialog"); // NOI18N
        exitDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitDialogActionPerformed(evt);
            }
        });

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        listaEmpleados.setModel(listEmpl);
        listaEmpleados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaEmpleados.setName("listaEmpleados"); // NOI18N
        jScrollPane5.setViewportView(listaEmpleados);

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(query1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonQuery, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(selectRow, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(exitDialog, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(query1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonQuery))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(selectRow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitDialog))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout buscarEmpleadoLayout = new javax.swing.GroupLayout(buscarEmpleado.getContentPane());
        buscarEmpleado.getContentPane().setLayout(buscarEmpleadoLayout);
        buscarEmpleadoLayout.setHorizontalGroup(
            buscarEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        buscarEmpleadoLayout.setVerticalGroup(
            buscarEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        informeDetalleHora.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        informeDetalleHora.setTitle(resourceMap.getString("informeDetalleHora.title")); // NOI18N
        informeDetalleHora.setMinimumSize(new java.awt.Dimension(528, 278));
        informeDetalleHora.setModal(true);
        informeDetalleHora.setName("informeDetalleHora"); // NOI18N
        informeDetalleHora.setResizable(false);
        informeDetalleHora.setUndecorated(true);

        jPanel4.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel4.border.lineColor"), 1, true)); // NOI18N
        jPanel4.setMinimumSize(new java.awt.Dimension(516, 222));
        jPanel4.setName("jPanel4"); // NOI18N

        operariosCombo1.setModel(operarios);
        operariosCombo1.setName("operariosCombo1"); // NOI18N

        botonBuscarEmpleado1.setAction(actionMap.get("mostrarBusquedaEmpleado")); // NOI18N
        botonBuscarEmpleado1.setIcon(resourceMap.getIcon("botonBuscarEmpleado1.icon")); // NOI18N
        botonBuscarEmpleado1.setToolTipText(resourceMap.getString("botonBuscarEmpleado1.toolTipText")); // NOI18N
        botonBuscarEmpleado1.setName("botonBuscarEmpleado1"); // NOI18N

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        jButton7.setAction(actionMap.get("CrearInformeDetalleHora")); // NOI18N
        jButton7.setIcon(resourceMap.getIcon("jButton7.icon")); // NOI18N
        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setName("jButton7"); // NOI18N

        jButton8.setIcon(resourceMap.getIcon("jButton8.icon")); // NOI18N
        jButton8.setText(resourceMap.getString("jButton8.text")); // NOI18N
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listReportes.setModel(listReport);
        listReportes.setName("listReportes"); // NOI18N
        jScrollPane1.setViewportView(listReportes);

        jButton1.setAction(actionMap.get("cargarReportes")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(operariosCombo1, 0, 417, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonBuscarEmpleado1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton7, jButton8});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12)
                    .addComponent(operariosCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscarEmpleado1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addGap(70, 70, 70))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonBuscarEmpleado1, operariosCombo1});

        javax.swing.GroupLayout informeDetalleHoraLayout = new javax.swing.GroupLayout(informeDetalleHora.getContentPane());
        informeDetalleHora.getContentPane().setLayout(informeDetalleHoraLayout);
        informeDetalleHoraLayout.setHorizontalGroup(
            informeDetalleHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        informeDetalleHoraLayout.setVerticalGroup(
            informeDetalleHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        selectObraDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        selectObraDialog.setTitle(resourceMap.getString("selectObraDialog.title")); // NOI18N
        selectObraDialog.setAlwaysOnTop(true);
        selectObraDialog.setMinimumSize(new java.awt.Dimension(291, 306));
        selectObraDialog.setModal(true);
        selectObraDialog.setName("selectObraDialog"); // NOI18N
        selectObraDialog.setResizable(false);
        selectObraDialog.setUndecorated(true);

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jPanel12.border.lineColor"))); // NOI18N
        jPanel12.setMinimumSize(new java.awt.Dimension(291, 206));
        jPanel12.setName("jPanel12"); // NOI18N

        cerrarBusquedaObras.setIcon(resourceMap.getIcon("cerrarBusquedaObras.icon")); // NOI18N
        cerrarBusquedaObras.setText(resourceMap.getString("cerrarBusquedaObras.text")); // NOI18N
        cerrarBusquedaObras.setName("cerrarBusquedaObras"); // NOI18N
        cerrarBusquedaObras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarBusquedaObrasActionPerformed(evt);
            }
        });

        selectObrasButton.setAction(actionMap.get("seleccionarObra")); // NOI18N
        selectObrasButton.setIcon(resourceMap.getIcon("selectObrasButton.icon")); // NOI18N
        selectObrasButton.setText(resourceMap.getString("selectObrasButton.text")); // NOI18N
        selectObrasButton.setName("selectObrasButton"); // NOI18N

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        listaDeObras.setModel(listObras);
        listaDeObras.setName("listaDeObras"); // NOI18N
        jScrollPane7.setViewportView(listaDeObras);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(selectObrasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cerrarBusquedaObras, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectObrasButton)
                    .addComponent(cerrarBusquedaObras)))
        );

        javax.swing.GroupLayout selectObraDialogLayout = new javax.swing.GroupLayout(selectObraDialog.getContentPane());
        selectObraDialog.getContentPane().setLayout(selectObraDialogLayout);
        selectObraDialogLayout.setHorizontalGroup(
            selectObraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        selectObraDialogLayout.setVerticalGroup(
            selectObraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );

        seleccionarPeriodosDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        seleccionarPeriodosDialog.setAlwaysOnTop(true);
        seleccionarPeriodosDialog.setLocationByPlatform(true);
        seleccionarPeriodosDialog.setMinimumSize(new java.awt.Dimension(208, 282));
        seleccionarPeriodosDialog.setModal(true);
        seleccionarPeriodosDialog.setName("seleccionarPeriodosDialog"); // NOI18N
        seleccionarPeriodosDialog.setUndecorated(true);

        jPanel23.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jPanel23.border.lineColor"))); // NOI18N
        jPanel23.setMinimumSize(new java.awt.Dimension(208, 239));
        jPanel23.setName("jPanel23"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N
        jScrollPane2.setPreferredSize(new java.awt.Dimension(168, 260));

        listaDePeriodos.setModel(periodos);
        listaDePeriodos.setName("listaDePeriodos"); // NOI18N
        jScrollPane2.setViewportView(listaDePeriodos);

        jButton10.setIcon(resourceMap.getIcon("jButton10.icon")); // NOI18N
        jButton10.setText(resourceMap.getString("jButton10.text")); // NOI18N
        jButton10.setName("jButton10"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton9.setAction(actionMap.get("seleccionarPeriodoAction")); // NOI18N
        jButton9.setIcon(resourceMap.getIcon("jButton9.icon")); // NOI18N
        jButton9.setText(resourceMap.getString("jButton9.text")); // NOI18N
        jButton9.setName("jButton9"); // NOI18N

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
        );

        jPanel23Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton10, jButton9});

        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9)
                    .addComponent(jButton10)))
        );

        javax.swing.GroupLayout seleccionarPeriodosDialogLayout = new javax.swing.GroupLayout(seleccionarPeriodosDialog.getContentPane());
        seleccionarPeriodosDialog.getContentPane().setLayout(seleccionarPeriodosDialogLayout);
        seleccionarPeriodosDialogLayout.setHorizontalGroup(
            seleccionarPeriodosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        seleccionarPeriodosDialogLayout.setVerticalGroup(
            seleccionarPeriodosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        seleccionarEquipo.setTitle(resourceMap.getString("seleccionarEquipo.title")); // NOI18N
        seleccionarEquipo.setAlwaysOnTop(true);
        seleccionarEquipo.setMinimumSize(new java.awt.Dimension(461, 330));
        seleccionarEquipo.setModal(true);
        seleccionarEquipo.setName("seleccionarEquipo"); // NOI18N
        seleccionarEquipo.setUndecorated(true);

        jPanel18.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jPanel18.border.lineColor"))); // NOI18N
        jPanel18.setMinimumSize(new java.awt.Dimension(461, 300));
        jPanel18.setName("jPanel18"); // NOI18N
        jPanel18.setPreferredSize(new java.awt.Dimension(461, 300));

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jListEquipos.setModel(listEquipos);
        jListEquipos.setName("jListEquipos"); // NOI18N
        jListEquipos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jListEquiposFocusGained(evt);
            }
        });
        jScrollPane3.setViewportView(jListEquipos);

        queryEquipos.setText(resourceMap.getString("queryEquipos.text")); // NOI18N
        queryEquipos.setName("queryEquipos"); // NOI18N
        queryEquipos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                queryEquiposFocusGained(evt);
            }
        });

        buscarEquiposBoton.setAction(actionMap.get("buscarEquipo")); // NOI18N
        buscarEquiposBoton.setIcon(resourceMap.getIcon("buscarEquiposBoton.icon")); // NOI18N
        buscarEquiposBoton.setText(resourceMap.getString("buscarEquiposBoton.text")); // NOI18N
        buscarEquiposBoton.setToolTipText(resourceMap.getString("buscarEquiposBoton.toolTipText")); // NOI18N
        buscarEquiposBoton.setName("buscarEquiposBoton"); // NOI18N

        salirBuscarEquipos.setIcon(resourceMap.getIcon("salirBuscarEquipos.icon")); // NOI18N
        salirBuscarEquipos.setText(resourceMap.getString("salirBuscarEquipos.text")); // NOI18N
        salirBuscarEquipos.setName("salirBuscarEquipos"); // NOI18N
        salirBuscarEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBuscarEquiposActionPerformed(evt);
            }
        });

        seleccionarEquiposBoton.setIcon(resourceMap.getIcon("seleccionarEquiposBoton.icon")); // NOI18N
        seleccionarEquiposBoton.setText(resourceMap.getString("seleccionarEquiposBoton.text")); // NOI18N
        seleccionarEquiposBoton.setName("seleccionarEquiposBoton"); // NOI18N
        seleccionarEquiposBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarEquiposBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                        .addComponent(queryEquipos, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarEquiposBoton))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                        .addComponent(seleccionarEquiposBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salirBuscarEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(queryEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarEquiposBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salirBuscarEquipos)
                    .addComponent(seleccionarEquiposBoton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel18Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {buscarEquiposBoton, queryEquipos});

        javax.swing.GroupLayout seleccionarEquipoLayout = new javax.swing.GroupLayout(seleccionarEquipo.getContentPane());
        seleccionarEquipo.getContentPane().setLayout(seleccionarEquipoLayout);
        seleccionarEquipoLayout.setHorizontalGroup(
            seleccionarEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        seleccionarEquipoLayout.setVerticalGroup(
            seleccionarEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 295, Short.MAX_VALUE)
        );

        selectPlataformaDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        selectPlataformaDialog.setTitle(resourceMap.getString("selectPlataformaDialog.title")); // NOI18N
        selectPlataformaDialog.setAlwaysOnTop(true);
        selectPlataformaDialog.setMinimumSize(new java.awt.Dimension(291, 306));
        selectPlataformaDialog.setModal(true);
        selectPlataformaDialog.setName("selectPlataformaDialog"); // NOI18N
        selectPlataformaDialog.setResizable(false);
        selectPlataformaDialog.setUndecorated(true);

        jPanel24.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jPanel24.border.lineColor"))); // NOI18N
        jPanel24.setMinimumSize(new java.awt.Dimension(291, 206));
        jPanel24.setName("jPanel24"); // NOI18N

        cerrarBusquedaPlataformas.setIcon(resourceMap.getIcon("cerrarBusquedaPlataformas.icon")); // NOI18N
        cerrarBusquedaPlataformas.setText(resourceMap.getString("cerrarBusquedaPlataformas.text")); // NOI18N
        cerrarBusquedaPlataformas.setName("cerrarBusquedaPlataformas"); // NOI18N
        cerrarBusquedaPlataformas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarBusquedaPlataformasActionPerformed(evt);
            }
        });

        selectPlataformasButton.setAction(actionMap.get("seleccionarPlataforma")); // NOI18N
        selectPlataformasButton.setIcon(resourceMap.getIcon("selectPlataformasButton.icon")); // NOI18N
        selectPlataformasButton.setText(resourceMap.getString("selectPlataformasButton.text")); // NOI18N
        selectPlataformasButton.setName("selectPlataformasButton"); // NOI18N

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        listaDePlataformas.setModel(listPlataformas);
        listaDePlataformas.setName("listaDePlataformas"); // NOI18N
        jScrollPane8.setViewportView(listaDePlataformas);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(selectPlataformasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cerrarBusquedaPlataformas, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectPlataformasButton)
                    .addComponent(cerrarBusquedaPlataformas)))
        );

        javax.swing.GroupLayout selectPlataformaDialogLayout = new javax.swing.GroupLayout(selectPlataformaDialog.getContentPane());
        selectPlataformaDialog.getContentPane().setLayout(selectPlataformaDialogLayout);
        selectPlataformaDialogLayout.setHorizontalGroup(
            selectPlataformaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        selectPlataformaDialogLayout.setVerticalGroup(
            selectPlataformaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(421, 312));
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel26.setBackground(resourceMap.getColor("jPanel26.background")); // NOI18N
        jPanel26.setName("jPanel26"); // NOI18N

        jTabbedPane1.setBackground(resourceMap.getColor("jTabbedPane1.background")); // NOI18N
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(jTabbedPane1.getFont().deriveFont(jTabbedPane1.getFont().getStyle() | java.awt.Font.BOLD, jTabbedPane1.getFont().getSize()+1));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setOpaque(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);

        generarDetalleRegistroButton.setAction(actionMap.get("generarInformeDetalleHora")); // NOI18N
        generarDetalleRegistroButton.setText(resourceMap.getString("generarDetalleRegistroButton.text")); // NOI18N
        generarDetalleRegistroButton.setName("generarDetalleRegistroButton"); // NOI18N

        jScrollPane9.setName("jScrollPane9"); // NOI18N

        jTextPane2.setEditable(false);
        jTextPane2.setText(resourceMap.getString("jTextPane2.text")); // NOI18N
        jTextPane2.setName("jTextPane2"); // NOI18N
        jTextPane2.setOpaque(false);
        jScrollPane9.setViewportView(jTextPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(generarDetalleRegistroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(generarDetalleRegistroButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setOpaque(false);

        generarInformesHorasButton.setAction(actionMap.get("generarInformeHorasMes")); // NOI18N
        generarInformesHorasButton.setText(resourceMap.getString("generarInformesHorasButton.text")); // NOI18N
        generarInformesHorasButton.setName("generarInformesHorasButton"); // NOI18N
        generarInformesHorasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarInformesHorasButtonActionPerformed(evt);
            }
        });

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        jTextPane1.setEditable(false);
        jTextPane1.setText(resourceMap.getString("jTextPane1.text")); // NOI18N
        jTextPane1.setName("jTextPane1"); // NOI18N
        jTextPane1.setOpaque(false);
        jScrollPane6.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(generarInformesHorasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(generarInformesHorasButton)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel16.border.title"))); // NOI18N
        jPanel16.setName("jPanel16"); // NOI18N
        jPanel16.setOpaque(false);

        jButton2.setAction(actionMap.get("generarResumenRegistroPersonas")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jScrollPane10.setName("jScrollPane10"); // NOI18N

        jTextPane3.setEditable(false);
        jTextPane3.setText(resourceMap.getString("jTextPane3.text")); // NOI18N
        jTextPane3.setName("jTextPane3"); // NOI18N
        jTextPane3.setOpaque(false);
        jScrollPane10.setViewportView(jTextPane3);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel25.border.title"))); // NOI18N
        jPanel25.setName("jPanel25"); // NOI18N
        jPanel25.setOpaque(false);

        generarExportacion.setAction(actionMap.get("generarExportacionAction")); // NOI18N
        generarExportacion.setText(resourceMap.getString("generarExportacion.text")); // NOI18N
        generarExportacion.setName("generarExportacion"); // NOI18N

        jScrollPane11.setName("jScrollPane11"); // NOI18N

        jTextPane4.setEditable(false);
        jTextPane4.setText(resourceMap.getString("jTextPane4.text")); // NOI18N
        jTextPane4.setName("jTextPane4"); // NOI18N
        jTextPane4.setOpaque(false);
        jScrollPane11.setViewportView(jTextPane4);

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generarExportacion, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generarExportacion)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        lblPeriodo.setFont(resourceMap.getFont("lblPeriodo.font")); // NOI18N
        lblPeriodo.setText(resourceMap.getString("lblPeriodo.text")); // NOI18N
        lblPeriodo.setName("lblPeriodo"); // NOI18N

        jButton6.setAction(actionMap.get("seleccionarPeriodo")); // NOI18N
        jButton6.setIcon(resourceMap.getIcon("jButton6.icon")); // NOI18N
        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jSeparator2.setName("jSeparator2"); // NOI18N

        jSeparator3.setName("jSeparator3"); // NOI18N

        jButton18.setAction(actionMap.get("GenerarInformeVencimientosFechasOperario")); // NOI18N
        jButton18.setText(resourceMap.getString("jButton18.text")); // NOI18N
        jButton18.setName("jButton18"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6))
                            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblPeriodo)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton6, lblPeriodo});

        jTabbedPane1.addTab(resourceMap.getString("jPanel6.TabConstraints.tabTitle"), jPanel6); // NOI18N

        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setOpaque(false);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel10.border.title"))); // NOI18N
        jPanel10.setName("jPanel10"); // NOI18N
        jPanel10.setOpaque(false);

        generarReportePersEqXObra.setAction(actionMap.get("generarReportPersEqXObra")); // NOI18N
        generarReportePersEqXObra.setText(resourceMap.getString("generarReportePersEqXObra.text")); // NOI18N
        generarReportePersEqXObra.setName("generarReportePersEqXObra"); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generarReportePersEqXObra, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generarReportePersEqXObra)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel11.border.title"))); // NOI18N
        jPanel11.setName("jPanel11"); // NOI18N
        jPanel11.setOpaque(false);

        generarEqMatXObra.setAction(actionMap.get("generarEqMatXObraAccion")); // NOI18N
        generarEqMatXObra.setText(resourceMap.getString("generarEqMatXObra.text")); // NOI18N
        generarEqMatXObra.setName("generarEqMatXObra"); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generarEqMatXObra, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generarEqMatXObra)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setName("jPanel13"); // NOI18N
        jPanel13.setOpaque(false);
        jPanel13.setPreferredSize(new java.awt.Dimension(563, 60));

        lblObraReportPersEqXObra.setFont(lblObraReportPersEqXObra.getFont().deriveFont(lblObraReportPersEqXObra.getFont().getStyle() | java.awt.Font.BOLD, lblObraReportPersEqXObra.getFont().getSize()+2));
        lblObraReportPersEqXObra.setText(resourceMap.getString("lblObraReportPersEqXObra.text")); // NOI18N
        lblObraReportPersEqXObra.setName("lblObraReportPersEqXObra"); // NOI18N

        seleccionarObraReportPersEq.setAction(actionMap.get("seleccionarObraDialog")); // NOI18N
        seleccionarObraReportPersEq.setText(resourceMap.getString("seleccionarObraReportPersEq.text")); // NOI18N
        seleccionarObraReportPersEq.setName("seleccionarObraReportPersEq"); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seleccionarObraReportPersEq, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblObraReportPersEqXObra, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addComponent(seleccionarObraReportPersEq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblObraReportPersEqXObra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(209, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel10, jPanel11});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(349, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel10, jPanel11});

        jTabbedPane1.addTab(resourceMap.getString("jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        jPanel7.setName("jPanel7"); // NOI18N
        jPanel7.setOpaque(false);

        jPanel14.setName("jPanel14"); // NOI18N
        jPanel14.setOpaque(false);
        jPanel14.setPreferredSize(new java.awt.Dimension(564, 60));

        lblEquiposSelect.setFont(lblEquiposSelect.getFont().deriveFont(lblEquiposSelect.getFont().getStyle() | java.awt.Font.BOLD, lblEquiposSelect.getFont().getSize()+2));
        lblEquiposSelect.setText(resourceMap.getString("lblEquiposSelect.text")); // NOI18N
        lblEquiposSelect.setName("lblEquiposSelect"); // NOI18N

        selectEquiposBoton.setAction(actionMap.get("mostrarSeleccionarEquipos")); // NOI18N
        selectEquiposBoton.setText(resourceMap.getString("selectEquiposBoton.text")); // NOI18N
        selectEquiposBoton.setName("selectEquiposBoton"); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(selectEquiposBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(lblEquiposSelect, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
                        .addGap(24, 24, 24))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(selectEquiposBoton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEquiposSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel15.border.title"))); // NOI18N
        jPanel15.setName("jPanel15"); // NOI18N
        jPanel15.setOpaque(false);

        genReporteEquipo.setAction(actionMap.get("generarInformeEquipo")); // NOI18N
        genReporteEquipo.setText(resourceMap.getString("genReporteEquipo.text")); // NOI18N
        genReporteEquipo.setName("genReporteEquipo"); // NOI18N

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(genReporteEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(genReporteEquipo)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel9.border.title"))); // NOI18N
        jPanel9.setName("jPanel9"); // NOI18N
        jPanel9.setOpaque(false);

        exportTodosEquipos.setAction(actionMap.get("exportarTodosEquipos2Excel")); // NOI18N
        exportTodosEquipos.setText(resourceMap.getString("exportTodosEquipos.text")); // NOI18N
        exportTodosEquipos.setName("exportTodosEquipos"); // NOI18N

        txtProcessing.setText(resourceMap.getString("txtProcessing.text")); // NOI18N
        txtProcessing.setName("txtProcessing"); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exportTodosEquipos, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                    .addComponent(txtProcessing, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportTodosEquipos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProcessing, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(311, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel7.TabConstraints.tabTitle"), jPanel7); // NOI18N

        jPanel17.setName("jPanel17"); // NOI18N
        jPanel17.setOpaque(false);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel20.border.title"))); // NOI18N
        jPanel20.setToolTipText(resourceMap.getString("jPanel20.toolTipText")); // NOI18N
        jPanel20.setName("jPanel20"); // NOI18N
        jPanel20.setOpaque(false);

        obraSeleccionadaConsumo.setFont(obraSeleccionadaConsumo.getFont().deriveFont(obraSeleccionadaConsumo.getFont().getStyle() | java.awt.Font.BOLD, obraSeleccionadaConsumo.getFont().getSize()+1));
        obraSeleccionadaConsumo.setText(resourceMap.getString("obraSeleccionadaConsumo.text")); // NOI18N
        obraSeleccionadaConsumo.setName("obraSeleccionadaConsumo"); // NOI18N

        selectConsumoObraBoton.setAction(actionMap.get("seleccionarObraDialog")); // NOI18N
        selectConsumoObraBoton.setText(resourceMap.getString("selectConsumoObraBoton.text")); // NOI18N
        selectConsumoObraBoton.setName("selectConsumoObraBoton"); // NOI18N

        btnInformeCombustibleObra.setAction(actionMap.get("generarInformeCombustibleObra")); // NOI18N
        btnInformeCombustibleObra.setText(resourceMap.getString("btnInformeCombustibleObra.text")); // NOI18N
        btnInformeCombustibleObra.setName("btnInformeCombustibleObra"); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(obraSeleccionadaConsumo, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel20Layout.createSequentialGroup()
                        .addComponent(selectConsumoObraBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInformeCombustibleObra, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(obraSeleccionadaConsumo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectConsumoObraBoton)
                    .addComponent(btnInformeCombustibleObra))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel21.border.title"))); // NOI18N
        jPanel21.setName("jPanel21"); // NOI18N
        jPanel21.setOpaque(false);

        lblEquiposCombustible.setFont(lblEquiposCombustible.getFont().deriveFont(lblEquiposCombustible.getFont().getStyle() | java.awt.Font.BOLD, lblEquiposCombustible.getFont().getSize()+1));
        lblEquiposCombustible.setText(resourceMap.getString("lblEquiposCombustible.text")); // NOI18N
        lblEquiposCombustible.setName("lblEquiposCombustible"); // NOI18N

        jButton13.setAction(actionMap.get("mostrarSeleccionarEquipos")); // NOI18N
        jButton13.setText(resourceMap.getString("jButton13.text")); // NOI18N
        jButton13.setName("jButton13"); // NOI18N

        btnInformeCombustibleEquipo.setAction(actionMap.get("generarInformeCombustibleEquipo")); // NOI18N
        btnInformeCombustibleEquipo.setText(resourceMap.getString("btnInformeCombustibleEquipo.text")); // NOI18N
        btnInformeCombustibleEquipo.setName("btnInformeCombustibleEquipo"); // NOI18N

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInformeCombustibleEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblEquiposCombustible, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(lblEquiposCombustible)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(btnInformeCombustibleEquipo))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel22.border.title"))); // NOI18N
        jPanel22.setName("jPanel22"); // NOI18N
        jPanel22.setOpaque(false);

        jButton11.setAction(actionMap.get("generarInformeCombustibleResumen")); // NOI18N
        jButton11.setText(resourceMap.getString("jButton11.text")); // NOI18N
        jButton11.setName("jButton11"); // NOI18N

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(313, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton11)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel19.border.title"))); // NOI18N
        jPanel19.setName("jPanel19"); // NOI18N
        jPanel19.setOpaque(false);

        btnSeleccionPlataforma.setAction(actionMap.get("seleccionarPlataformasDialog")); // NOI18N
        btnSeleccionPlataforma.setText(resourceMap.getString("btnSeleccionPlataforma.text")); // NOI18N
        btnSeleccionPlataforma.setName("btnSeleccionPlataforma"); // NOI18N

        lblPlataformaCombustible.setFont(lblPlataformaCombustible.getFont().deriveFont(lblPlataformaCombustible.getFont().getStyle() | java.awt.Font.BOLD, lblPlataformaCombustible.getFont().getSize()+1));
        lblPlataformaCombustible.setText(resourceMap.getString("lblPlataformaCombustible.text")); // NOI18N
        lblPlataformaCombustible.setName("lblPlataformaCombustible"); // NOI18N

        btnInformeCombustiblePlataforma.setAction(actionMap.get("generarInformeCombustiblePlataforma")); // NOI18N
        btnInformeCombustiblePlataforma.setText(resourceMap.getString("btnInformeCombustiblePlataforma.text")); // NOI18N
        btnInformeCombustiblePlataforma.setName("btnInformeCombustiblePlataforma"); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPlataformaCombustible, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addComponent(btnSeleccionPlataforma, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInformeCombustiblePlataforma, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(lblPlataformaCombustible)
                .addGap(13, 13, 13)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeleccionPlataforma)
                    .addComponent(btnInformeCombustiblePlataforma))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(253, Short.MAX_VALUE))
        );

        jPanel17Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel19, jPanel20, jPanel21, jPanel22});

        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel17.TabConstraints.tabTitle"), jPanel17); // NOI18N

        jPanel27.setName("jPanel27"); // NOI18N
        jPanel27.setOpaque(false);
        jPanel27.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel27ComponentShown(evt);
            }
        });

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        jTable1.setModel(modelObraSelected);
        modelObraSelected.addFila(new ItemObra());
        jTable1.setName("jTable1"); // NOI18N
        jTable1.setOpaque(false);
        jScrollPane4.setViewportView(jTable1);

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        isOperarioSelectedCustomInforme.setBackground(resourceMap.getColor("isOperarioSelectedCustomInforme.background")); // NOI18N
        isOperarioSelectedCustomInforme.setText(resourceMap.getString("isOperarioSelectedCustomInforme.text")); // NOI18N
        isOperarioSelectedCustomInforme.setName("isOperarioSelectedCustomInforme"); // NOI18N
        isOperarioSelectedCustomInforme.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                isOperarioSelectedCustomInformeItemStateChanged(evt);
            }
        });

        lblOperarioSelected.setFont(lblOperarioSelected.getFont().deriveFont(lblOperarioSelected.getFont().getStyle() | java.awt.Font.BOLD, lblOperarioSelected.getFont().getSize()+2));
        lblOperarioSelected.setForeground(resourceMap.getColor("lblOperarioSelected.foreground")); // NOI18N
        lblOperarioSelected.setText(resourceMap.getString("lblOperarioSelected.text")); // NOI18N
        lblOperarioSelected.setName("lblOperarioSelected"); // NOI18N

        btnBuscarEmpleado.setAction(actionMap.get("mostrarBusquedaEmpleado")); // NOI18N
        btnBuscarEmpleado.setIcon(resourceMap.getIcon("btnBuscarEmpleado.icon")); // NOI18N
        btnBuscarEmpleado.setText(resourceMap.getString("btnBuscarEmpleado.text")); // NOI18N
        btnBuscarEmpleado.setName("btnBuscarEmpleado"); // NOI18N

        jButton12.setAction(actionMap.get("generarInformeCustom")); // NOI18N
        jButton12.setText(resourceMap.getString("jButton12.text")); // NOI18N
        jButton12.setName("jButton12"); // NOI18N

        jButton14.setText(resourceMap.getString("jButton14.text")); // NOI18N
        jButton14.setName("jButton14"); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton16.setText(resourceMap.getString("jButton16.text")); // NOI18N
        jButton16.setName("jButton16"); // NOI18N
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addComponent(isOperarioSelectedCustomInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarEmpleado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblOperarioSelected, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE))
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 347, Short.MAX_VALUE)
                                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                        .addGap(495, 495, 495))))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblOperarioSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(isOperarioSelectedCustomInforme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBuscarEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton12)
                .addGap(19, 19, 19)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton14)
                        .addComponent(jButton16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel27.TabConstraints.tabTitle"), jPanel27); // NOI18N

        jPanel8.setName("jPanel8"); // NOI18N
        jPanel8.setOpaque(false);

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel30.border.title"))); // NOI18N
        jPanel30.setName("jPanel30"); // NOI18N
        jPanel30.setOpaque(false);

        jButton17.setAction(actionMap.get("generarPlanillaSeguimiento")); // NOI18N
        jButton17.setText(resourceMap.getString("jButton17.text")); // NOI18N
        jButton17.setName("jButton17"); // NOI18N

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(504, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(420, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel8.TabConstraints.tabTitle"), jPanel8); // NOI18N

        jPanel31.setName("jPanel31"); // NOI18N
        jPanel31.setOpaque(false);

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel32.border.title"))); // NOI18N
        jPanel32.setName("jPanel32"); // NOI18N
        jPanel32.setOpaque(false);

        dateFechaLimiteAlarma.setName("dateFechaLimiteAlarma"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        genInformeAlarmasPróximas.setAction(actionMap.get("btnGenInformeAlarmasProximas")); // NOI18N
        genInformeAlarmasPróximas.setText(resourceMap.getString("genInformeAlarmasPróximas.text")); // NOI18N
        genInformeAlarmasPróximas.setName("genInformeAlarmasPróximas"); // NOI18N

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateFechaLimiteAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(genInformeAlarmasPróximas)
                .addContainerGap(309, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dateFechaLimiteAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genInformeAlarmasPróximas)
                    .addComponent(jLabel1))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel32Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dateFechaLimiteAlarma, genInformeAlarmasPróximas});

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(411, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel31.TabConstraints.tabTitle"), jPanel31); // NOI18N

        jButton15.setIcon(resourceMap.getIcon("jButton15.icon")); // NOI18N
        jButton15.setText(resourceMap.getString("jButton15.text")); // NOI18N
        jButton15.setName("jButton15"); // NOI18N
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel29.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel29.border.titleFont"))); // NOI18N
        jPanel29.setName("jPanel29"); // NOI18N
        jPanel29.setOpaque(false);

        desdeFechaFiltro.setName("desdeFechaFiltro"); // NOI18N

        hastaFechaFiltro.setName("hastaFechaFiltro"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desdeFechaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hastaFechaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(243, Short.MAX_VALUE))
        );

        jPanel29Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {desdeFechaFiltro, hastaFechaFiltro});

        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(hastaFechaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(desdeFechaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel29Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {desdeFechaFiltro, hastaFechaFiltro});

        jSeparator4.setName("jSeparator4"); // NOI18N

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap(826, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 945, Short.MAX_VALUE)
            .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton15)
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel26Layout.createSequentialGroup()
                    .addGap(72, 72, 72)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(581, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        informeHorasDialog.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void query1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_query1FocusGained
        buscarEmpleado.getRootPane().setDefaultButton(botonQuery);
    }//GEN-LAST:event_query1FocusGained

    private void exitDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitDialogActionPerformed

        buscarEmpleado.dispose();         
        query1.setText("");         
        listEmpl.removeAllElements();     
}//GEN-LAST:event_exitDialogActionPerformed

    private void selectRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectRowActionPerformed
    if (listEmpl.isEmpty() || listaEmpleados.isSelectionEmpty()) {
        //nothing
    } else {
        operarioSelect = (Operario) listaEmpleados.getSelectedValue();
        operariosCombo.setSelectedItem(operarioSelect);
        operariosCombo1.setSelectedItem(operarioSelect);
        lblOperarioSelected.setText(operarioSelect.toString());
        buscarEmpleado.dispose();
        query1.setText("");
        listEmpl.removeAllElements();
    }
    }//GEN-LAST:event_selectRowActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       informeDetalleHora.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void cerrarBusquedaObrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarBusquedaObrasActionPerformed

        selectObraDialog.dispose();     }//GEN-LAST:event_cerrarBusquedaObrasActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       seleccionarPeriodosDialog.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void salirBuscarEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBuscarEquiposActionPerformed
        seleccionarEquipo.dispose();
    }//GEN-LAST:event_salirBuscarEquiposActionPerformed

    private void seleccionarEquiposBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarEquiposBotonActionPerformed
        if (listEquipos.isEmpty() || jListEquipos.isSelectionEmpty()) {
        
        } else {
        equipoSelect = (Equipos) jListEquipos.getSelectedValue();
        lblEquiposSelect.setText(equipoSelect.toString());
        lblEquiposCombustible.setText(equipoSelect.toString());
        seleccionarEquipo.dispose();
        queryEquipos.setText("");
        jListEquipos.removeAll();
    }
    }//GEN-LAST:event_seleccionarEquiposBotonActionPerformed

    private void queryEquiposFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_queryEquiposFocusGained
        seleccionarEquipo.getRootPane().setDefaultButton(buscarEquiposBoton); 
    }//GEN-LAST:event_queryEquiposFocusGained

    private void jListEquiposFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jListEquiposFocusGained
        seleccionarEquipo.getRootPane().setDefaultButton(seleccionarEquiposBoton); 
    }//GEN-LAST:event_jListEquiposFocusGained

    private void generarInformesHorasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarInformesHorasButtonActionPerformed

    }//GEN-LAST:event_generarInformesHorasButtonActionPerformed

    private void cerrarBusquedaPlataformasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarBusquedaPlataformasActionPerformed
       selectPlataformaDialog.dispose();
    }//GEN-LAST:event_cerrarBusquedaPlataformasActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void isOperarioSelectedCustomInformeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_isOperarioSelectedCustomInformeItemStateChanged
        btnBuscarEmpleado.setEnabled(isOperarioSelectedCustomInforme.isSelected());
        if(isOperarioSelectedCustomInforme.isSelected()==false){
            operarioSelect = null;
            lblOperarioSelected.setText("Seleccione un operario...");
        }
    }//GEN-LAST:event_isOperarioSelectedCustomInformeItemStateChanged

    private void jPanel27ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel27ComponentShown
        //lblOperarioSelected.setText(new Date().toString());
        Task t = ObrasListadoSeleccionInforme();
        t.execute();
    }//GEN-LAST:event_jPanel27ComponentShown

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        autoSeleccionarObras(true);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        autoSeleccionarObras(false);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void empleadoCheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_empleadoCheckItemStateChanged
        if(empleadoCheck.isSelected()){
            operariosCombo.setEnabled(true);
            botonBuscarEmpleado.setEnabled(true);
            
        }else{
            operariosCombo.setEnabled(false);
            botonBuscarEmpleado.setEnabled(false);
            operarioSelect = null;
        }
    }//GEN-LAST:event_empleadoCheckItemStateChanged

    private void autoSeleccionarObras (boolean op){
        for(int i = 0; i < modelObraSelected.getRowCount(); i++){
            modelObraSelected.setValueAt(op, i, 0);
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                JDReportes dialog = new JDReportes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    @Action
    public void seleccionarObra() {
        if (listObras.isEmpty() || listaDeObras.isSelectionEmpty()) {
            //nothing
        } else {
            obraSelect = (Obras) listaDeObras.getSelectedValue();
            lblObraReportPersEqXObra.setText(obraSelect.toString());
            obraSeleccionadaConsumo.setText((obraSelect.toString()));
            selectObraDialog.dispose();

        }

    }
    
     @Action
    public void seleccionarPlataforma() {
        if (listPlataformas.isEmpty() || listaDePlataformas.isSelectionEmpty()) {
            //nothing
        } else {
            estacionSelect = (EstacionServicio) listaDePlataformas.getSelectedValue();
            lblPlataformaCombustible.setText((estacionSelect.toString()));
            selectPlataformaDialog.dispose();

        }

    }
    @Action
    public void seleccionarPeriodoAction(){
        if(periodos.isEmpty() || listaDePeriodos.isSelectionEmpty()){
            //
        }else{
            periodo = listaDePeriodos.getSelectedValue().toString();
            lblPeriodo.setText(periodo);
            seleccionarPeriodosDialog.dispose();
        }
    }

    @Action
    public Task generarInformeHorasMes() {
        return new GenerarInformeHorasMesTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private int countObrasSelected() {
        int count = 0;
        for(int i =0; i<modelObraSelected.getRowCount(); i++){
            if(((ItemObra)modelObraSelected.getFila(i)).isSelected()){
                count++;
            }
        }
        return count;
    }

    private class GenerarInformeHorasMesTask extends org.jdesktop.application.Task<Object, Void> {
        ArrayList<Operario> opArr = new ArrayList<Operario>();
        GenerarInformeHorasMesTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarInformeHorasMesTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            OperarioDAO odao= new OperarioDAO();
            odao.conectar();
            opArr=odao.cargarTodos();
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            for(int i=0;i<opArr.size();i++){
                operarios.addElement((Operario)opArr.get(i));
            }
           
           if(desdeFechaFiltro.getDate()!=null){
               desdeFecha.setDate(desdeFechaFiltro.getDate());
           }else{
               desdeFecha.setDate(FechaUtil.inicioPeriodo());
           }
           if(hastaFechaFiltro.getDate()!=null){
               hastaFecha.setDate(hastaFechaFiltro.getDate());
           }else{
               hastaFecha.setDate(FechaUtil.finPeriodo());
           }
           informeHorasDialog.setLocationRelativeTo(null);
           informeHorasDialog.setVisible(true);
        }
    }
    
    @Action
    public Task generarInformeDetalleHora() {
        return new GenerarInformeDetalleHoraTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarInformeDetalleHoraTask extends org.jdesktop.application.Task<Object, Void> {
        ArrayList<Operario> opArr = new ArrayList<Operario>();
        GenerarInformeDetalleHoraTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarInformeHorasMesTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            OperarioDAO odao= new OperarioDAO();
            odao.conectar();
            opArr=odao.cargarTodos();
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            for(int i=0;i<opArr.size();i++){
                operarios.addElement((Operario)opArr.get(i));
            }
            informeDetalleHora.setLocationRelativeTo(null);
            informeDetalleHora.setVisible(true);
           
        }
    }
    
    @Action
    public Task CrearInforme() {
        if(desdeFecha.getDate()==null || hastaFecha.getDate()==null){
            OpcionPanel.showMessageDialog(null, "Seleccione un rango de fechas", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        if(!empleadoCheck.isSelected()){
            if(OpcionPanel.YES_OPTION != OpcionPanel.showConfirmDialog(null, "Se generará el reporte para todos los empleados. \n¿Continuar?", "Aviso",OpcionPanel.YES_NO_OPTION)){
            return null;
            }
        }
        return new CrearInformeTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class CrearInformeTask extends org.jdesktop.application.Task<Object, Void> {
        
        String nombre = "";
        String periodo ="";
        Date desdeF= new Date();
        Date hastaF = new Date();
        int operarioId = 0;
        CrearInformeTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to CrearInformeTask fields, here.
            super(app);
            if(empleadoCheck.isSelected()){
                operarioId = ((Operario)operarios.getSelectedItem()).getId();
            }
            periodo= Mes.getMes(mesPeriodo.getMonth());
            if(quincena.getSelectedItem().toString().equals("0")){
                periodo+="-"+añoPeriodo.getYear();
            }else{
                periodo+=quincena.getSelectedItem().toString()+"-"+añoPeriodo.getYear();
            }
            desdeF = desdeFecha.getDate();
            hastaF = hastaFecha.getDate();
        }
        @Override protected Object doInBackground() {
            InformesHorasDAO ihDAO = new InformesHorasDAO();  
            ParteDiarioDAO pd = new ParteDiarioDAO();
            OperarioDAO odao = new OperarioDAO();
            odao.conectar();
            pd.conectar();
            ihDAO.conectar();
            ArrayList<Operario> operarios = new ArrayList<Operario>(); 
            boolean mostrarInforme = false;
            if(operarioId == 0){
                mostrarInforme = false;
                for(Operario aux: odao.cargarTodos()){
                    operarios.add(aux); 
                }
            }else{
                mostrarInforme = true;
                operarios.add(odao.buscar(operarioId)); 
            }
            
            for(int i=0;i< operarios.size(); i++){
                int cant = 0;
                Operario oper = operarios.get(i);
                cant = calcularIH(pd, ihDAO, oper, periodo, desdeF, hastaF,  mostrarInforme);
                if(cant == 0){
                    nombre += operarios.get(i).getNombre()+";";
                }
                
            }
            
            
            
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            /*if(!nombre.isEmpty()){
                String msg = "Los siguiente empleados no tenian registros, no se generó su informe:\n";
                for(String emp: nombre.split(";")){
                    msg += "- "+emp;
                }
                OpcionPanel.showMessageDialog(null, msg, "Información", OpcionPanel.INFORMATION_MESSAGE);
            }
            */
        }
    }
    
    private int calcularIH(ParteDiarioDAO pd, InformesHorasDAO ihDAO, Operario operario, String periodo, Date desdeF, Date hastaF, boolean mostrarInforme){
        Servicios.Reportes servicio = new Servicios.Reportes();
        JasperPrint jp = servicio.GenerarInformeHorasByOperarioRango(pd, ihDAO, operario.getId(), periodo, desdeF, hastaF);
        if(mostrarInforme && jp != null) {
            JExportarReporte exp = new JExportarReporte(this.parent, true, jp);
            exp.setLocationRelativeTo(null);
            exp.setVisible(true);
        }
        return jp == null ? -1 : 1;
            
    }
    
    @Action
    public void mostrarInformesAnteriores() {
        
            JFrame mainFrame = ZilleProjectsApp.getApplication().getMainFrame();
            informesAnteriores = new JDReportesAnteriores(mainFrame, true);
            informesAnteriores.setLocationRelativeTo(null);
            ZilleProjectsApp.getApplication().show(informesAnteriores);
        
    }
    
    @Action
    public void mostrarBusquedaEmpleado() {

        buscarEmpleado.setLocationRelativeTo(null);
        buscarEmpleado.setVisible(true);
        
    }

     @Action
    public Task buscarEmpleado() {
        if (query1.getText().isEmpty()) {
            return null;
        }
        return new BuscarEmpleadoTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class BuscarEmpleadoTask extends org.jdesktop.application.Task<Object, Void> {

        ArrayList<Operario> opList = new ArrayList<Operario>();
        String query = query1.getText();

        BuscarEmpleadoTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to BuscarEmpleadoTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            OperarioDAO odao = new OperarioDAO();
            odao.conectar();
            opList = odao.buscar(query);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            listEmpl.removeAllElements();
            if (opList.isEmpty()) {
                listEmpl.addElement("Sin resultados");
                listaEmpleados.setEnabled(false);
            } else {
                for (int i = 0; i < opList.size(); i++) {
                    listEmpl.addElement((Operario) opList.get(i));
                }
                listaEmpleados.setEnabled(true);
            }
        }
    }

    @Action
    public Task cargarReportes() {
        return new CargarReportesTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class CargarReportesTask extends org.jdesktop.application.Task<Object, Void> {
        ArrayList<InformesHoras> arrayInfor = new ArrayList<InformesHoras>();
        int re, id;
        Operario op = (Operario) operariosCombo1.getSelectedItem();
        CargarReportesTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to CargarReportesTask fields, here.
            super(app);
            re=0;
            id=op.getId();
        }
        @Override protected Object doInBackground() {
            InformesHorasDAO idao=new InformesHorasDAO();
           idao.conectar();
           arrayInfor=idao.findByIdOperario(id);
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            listReport.removeAllElements();
            for(int i=0;i<arrayInfor.size();i++){
                listReport.addElement((InformesHoras)arrayInfor.get(i));
            }
        }
    }

    @Action
    public Task CrearInformeDetalleHora() {
        if(listReportes.getSelectedValue()==null){
            return null;
        }
        return new CrearInformeDetalleHoraTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class CrearInformeDetalleHoraTask extends org.jdesktop.application.Task<Object, Void> {
        
        InformesHoras ih= new InformesHoras();
        CrearInformeDetalleHoraTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to CrearInformeDetalleHoraTask fields, here.
            super(app);
            ih = (InformesHoras) listReportes.getSelectedValue();
        }
        @Override protected Object doInBackground() {
           InformesHorasDAO ihDAO = new InformesHorasDAO();
           ihDAO.conectar();
           return ihDAO.registrosDetalleHora(ih);
           
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                if(jp != null) {
                    UtilReport.MostrarDialogSeleccion(parent, jp);
                }
            }catch(Exception ex){
                Error(ex.getMessage());
            }
        }
    }
/*
    @Action
    public Task generarReportePersEqTodos() {
        if(desdeFechaPersEqtodos.getDate()==null ||  hastaFechaPersEqtodos.getDate() == null){
            return null;
        }
        return new GenerarReportePersEqTodosTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarReportePersEqTodosTask extends org.jdesktop.application.Task<Object, Void> {
        Date desde=desdeFechaPersEqtodos.getDate();
        Date hasta = hastaFechaPersEqtodos.getDate();
        GenerarReportePersEqTodosTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerrReporteXObraPersonaTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            ReportesDAO rdao= new ReportesDAO();
            rdao.conectar();
            rdao.reportPersEqTodos(desde, hasta);
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            System.out.println("Terminando reporte Personal/Equipo diario (Todos)...");
        }
    }
    
    */

    @Action
    public Task seleccionarObraDialog() {
        return new SeleccionarObraDialogTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class SeleccionarObraDialogTask extends org.jdesktop.application.Task<Object, Void> {
        ArrayList<Obras> obras = new ArrayList<Obras>();
        SeleccionarObraDialogTask(org.jdesktop.application.Application app) {
            
            super(app);
        }
        @Override protected Object doInBackground() {
            ObrasDAO odao = new ObrasDAO();
            odao.conectar();
            obras = odao.cargarTodos();
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
             listObras.clear();
            for (int i = 0; i < obras.size(); i++) {
                listObras.addElement((Obras) obras.get(i));
            }
            selectObraDialog.setLocationRelativeTo(lblObraReportPersEqXObra);
            selectObraDialog.setVisible(true);
        }
    }
    
    @Action
    public Task seleccionarPlataformasDialog() {
        return new SeleccionarPlataformasDialogTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class SeleccionarPlataformasDialogTask extends org.jdesktop.application.Task<Object, Void> {
        ArrayList<EstacionServicio> estaciones = new ArrayList<EstacionServicio>();
        SeleccionarPlataformasDialogTask(org.jdesktop.application.Application app) {
            
            super(app);
        }
        @Override protected Object doInBackground() {
            EstacionServicioDAO odao = new EstacionServicioDAO();
            odao.conectar();
            estaciones = odao.cargarTodo();
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
             listPlataformas.clear();
            for (int i = 0; i < estaciones.size(); i++) {
                listPlataformas.addElement((EstacionServicio) estaciones.get(i));
            }
            selectPlataformaDialog.setLocationRelativeTo(lblPlataformaCombustible);
            selectPlataformaDialog.setVisible(true);
        }
    }

    @Action
    public Task generarReportPersEqXObra() {
        if(obraSelect==null||obraSelect.getId()==0){
             OpcionPanel.showMessageDialog(null, "Seleccione un obra", "Ninguna obra seleccionada", OpcionPanel.ERROR_MESSAGE);
            return null;
        }
        if(desdeFechaFiltro.getDate() == null|| hastaFechaFiltro.getDate() == null){
            return null;
        }
        return new GenerarReportPersEqXObraTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarReportPersEqXObraTask extends org.jdesktop.application.Task<Object, Void> {
        Date desde=desdeFechaFiltro.getDate();
        Date hasta = hastaFechaFiltro.getDate();
        GenerarReportPersEqXObraTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarReportPersEqXObraTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            ReportesDAO rdao= new ReportesDAO();
            rdao.conectar();
            return rdao.reportPersEqXObra(desde, hasta, obraSelect.getId());
        }
        @Override protected void succeeded(Object result) {
            
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
            
            
        }
    }

    @Action
    public Task generarEqMatXObraAccion() {
        if(obraSelect==null||obraSelect.getId()==0){
             OpcionPanel.showMessageDialog(null, "Seleccione un obra", "Ninguna obra seleccionada", OpcionPanel.ERROR_MESSAGE);
            return null;
        }
        if(desdeFechaFiltro.getDate() == null|| hastaFechaFiltro.getDate() == null){
            return null;
        }
        return new GenerarEqMatXObraAccionTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarEqMatXObraAccionTask extends org.jdesktop.application.Task<Object, Void> {
        Date desde = desdeFechaFiltro.getDate();
        Date hasta = hastaFechaFiltro.getDate();
        GenerarEqMatXObraAccionTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarEqMatXObraAccionTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
           ReportesDAO rdao= new ReportesDAO();
            rdao.conectar();
            return rdao.reportEqMatXObra(desde, hasta, obraSelect.getId());
            
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
        }
    }

    @Action
    public Task generarResumenRegistroPersonas() {
        if(periodo.isEmpty()){
            OpcionPanel.showMessageDialog(null, "Seleccione un periodo", "Ninguna periodo seleccionado", OpcionPanel.ERROR_MESSAGE);
            return null;
        }
        return new GenerarResumenRegistroPersonasTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarResumenRegistroPersonasTask extends org.jdesktop.application.Task<Object, Void> {
        
        GenerarResumenRegistroPersonasTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarResumenRegistroPersonasTask fields, here.
            super(app);
            Info("Aguarde mientras se generar el informe...");
        }
        @Override protected Object doInBackground() {
           ReportesDAO rdao=new ReportesDAO();
           rdao.conectar();
           InformesHorasDAO ihDao = new InformesHorasDAO();
           ihDao.conectar();
           ParteDiarioDAO pd = new ParteDiarioDAO();
           pd.conectar();
           OperarioDAO odao = new OperarioDAO();
           odao.conectar();
           ArrayList<InformesHoras> informes = ihDao.findByPeriodoDistinct(periodo);
           for(InformesHoras inform : informes){
               // Actualizo los reportes
               calcularIH(pd, ihDao, odao.buscar(inform.getId_operario()), periodo, inform.getDesdeF(), inform.getHastaF(), false);
           }
           return rdao.reportRegistrosResumen(periodo);
        }
        @Override protected void succeeded(Object result) {
            
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
        }
    }

    @Action
    public Task seleccionarPeriodo() {
        return new SeleccionarPeriodoTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class SeleccionarPeriodoTask extends org.jdesktop.application.Task<Object, Void> {
        ArrayList<Periodo> periods = new ArrayList<Periodo>();
        SeleccionarPeriodoTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to SeleccionarPeriodoTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            InformesHorasDAO ih= new InformesHorasDAO();
            ih.conectar();
            periods = ih.findPeriodoDistinct();
            
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            periodos.clear();
            for (int i = 0; i < periods.size(); i++) {
                periodos.addElement( periods.get(i));
            }
            seleccionarPeriodosDialog.setLocationRelativeTo(null);
            seleccionarPeriodosDialog.setVisible(true);
        }
    }

    @Action
    public Task generarInformeEquipo() {
        if(desdeFechaFiltro.getDate() == null || hastaFechaFiltro.getDate() == null){
            OpcionPanel.showMessageDialog(null, "Seleccione un rango de fechas", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        if(equipoSelect == null || equipoSelect.getId() == 0){
            OpcionPanel.showMessageDialog(null, "Seleccione un equipo específico", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        return new GenerarInformeEquipoTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarInformeEquipoTask extends org.jdesktop.application.Task<Object, Void> {
        int id;
        Date desde, hasta;
        GenerarInformeEquipoTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarInformeEquipoTask fields, here.
            super(app);
            id = equipoSelect.getId();
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
        }
        @Override protected Object doInBackground() {
           ReportesDAO rdao=new ReportesDAO();
           rdao.conectar();
           return rdao.reportEquipo(desde, hasta, id);
           
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
        }
    }

    @Action
    public Task buscarEquipo() {
        if(queryEquipos.getText().isEmpty()){
            return null;
            
        }
        return new BuscarEquipoTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class BuscarEquipoTask extends org.jdesktop.application.Task<Object, Void> {
        String q = queryEquipos.getText();
        ArrayList<Equipos> equipos = new ArrayList<Equipos>();
        BuscarEquipoTask(org.jdesktop.application.Application app) {
            super(app);
        }
        @Override protected Object doInBackground() {
            EquiposDAO dao=new EquiposDAO();
            dao.conectar();
            equipos = dao.buscarDIMA(q);
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            if(!equipos.isEmpty()){
                listEquipos.clear();
                for(Equipos i : equipos){
                    listEquipos.addElement(i);
                }
            }
        }
    }

    @Action
    public void mostrarSeleccionarEquipos() {
        seleccionarEquipo.setLocationRelativeTo(seleccionarEquiposBoton);
        seleccionarEquipo.setVisible(true);
        
        
    }

    @Action
    public Task generarInformeCombustibleObra() {
        if(desdeFechaFiltro.getDate() == null || hastaFechaFiltro.getDate() == null){
            OpcionPanel.showMessageDialog(null, "Seleccione un rango de fechas", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        if(obraSelect == null || obraSelect.getId() == 0){
            OpcionPanel.showMessageDialog(null, "Seleccione un obra específica", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        return new GenerarInformeCombustibleObraTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarInformeCombustibleObraTask extends org.jdesktop.application.Task<Object, Void> {
        int idObra;
        Date desde, hasta;
        GenerarInformeCombustibleObraTask(org.jdesktop.application.Application app) {
            
            super(app);
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
            idObra = obraSelect.getId();
            
        }
        @Override protected Object doInBackground() {
            ReportesDAO dao = new ReportesDAO();
            dao.conectar();
            return dao.reportCombustibleObra(desde, hasta, idObra);
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
        }
    }

    @Action
    public Task generarInformeCombustibleResumen() {
        if(desdeFechaFiltro.getDate() == null || hastaFechaFiltro.getDate() == null){
            OpcionPanel.showMessageDialog(null, "Seleccione un rango de fechas", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        return new GenerarInformeCombustibleResumenTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarInformeCombustibleResumenTask extends org.jdesktop.application.Task<Object, Void> {
        Date desde, hasta;
        GenerarInformeCombustibleResumenTask(org.jdesktop.application.Application app) {
            super(app);
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
        }
        @Override protected Object doInBackground() {
            ReportesDAO dao = new ReportesDAO();
            dao.conectar();
            return dao.reportCombustibleResumen(desde, hasta);
            
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
        }
    }

    @Action
    public Task generarInformeCombustibleEquipo() {
        if(desdeFechaFiltro.getDate() == null || hastaFechaFiltro.getDate() == null){
            OpcionPanel.showMessageDialog(null, "Seleccione un rango de fechas", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        if(equipoSelect == null || equipoSelect.getId() == 0){
            OpcionPanel.showMessageDialog(null, "Seleccione un equipo específico", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        return new GenerarInformeCombustibleEquipoTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarInformeCombustibleEquipoTask extends org.jdesktop.application.Task<Object, Void> {
        int idEquipo;
        Date desde, hasta;
        GenerarInformeCombustibleEquipoTask(org.jdesktop.application.Application app) {
            super(app);
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
            idEquipo = equipoSelect.getId();
        }
        @Override protected Object doInBackground() {
            ReportesDAO dao = new ReportesDAO();
            dao.conectar();
            return dao.reportCombustibleEquipo(desde, hasta, idEquipo);
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
        }
    }

    @Action
    public Task generarInformeCombustiblePlataforma() {
        if(desdeFechaFiltro.getDate() == null || hastaFechaFiltro.getDate() == null){
            OpcionPanel.showMessageDialog(null, "Seleccione un rango de fechas", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        if(estacionSelect == null || estacionSelect.getEstacionServicioID() == 0){
            OpcionPanel.showMessageDialog(null, "Seleccione una plataforma específica", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        return new GenerarInformeCombustiblePlataformaTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarInformeCombustiblePlataformaTask extends org.jdesktop.application.Task<Object, Void> {
        int idEstacion;
        Date desde, hasta;
        GenerarInformeCombustiblePlataformaTask(org.jdesktop.application.Application app) {
            super(app);
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
            idEstacion = estacionSelect.getEstacionServicioID();
        }
        @Override protected Object doInBackground() {
            ReportesDAO dao = new ReportesDAO();
            dao.conectar();
            return dao.reportCombustibleEestacion(desde, hasta, idEstacion);
            
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
        }
    }

    @Action
    public Task generarExportacionAction() {
        if(periodo.isEmpty()){
            OpcionPanel.showMessageDialog(null, "Seleccione un periodo", "Ningún periodo seleccionado", OpcionPanel.ERROR_MESSAGE);
            return null;
        }        
        return new GenerarExportacionActionTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    

    private class GenerarExportacionActionTask extends org.jdesktop.application.Task<Object, Void> {
        boolean r= false;
        String ruta="";
        GenerarExportacionActionTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to NerarExportacionActionTask fields, here.
            super(app);
            Info("Aguarde mientras se generar los informes...");
        }
        @Override protected Object doInBackground() {
            InformesHorasDAO ihDao= new InformesHorasDAO();
            OperarioDAO pDao = new OperarioDAO();
            pDao.conectar();
            ihDao.conectar();
            ArrayList<InformesHoras> list= ihDao.findByPeriodo(periodo);
            
            File folder = FileManager.getPath(new String[] {"Informes", "Informes("+periodo+")"});
            if(!folder.exists()){
                folder.mkdirs();
            }
            ruta = folder.getAbsolutePath();
            for(InformesHoras ih: list){
                
                try {
                    JRXlsExporter exporter = new JRXlsExporter();
                    exporter.setExporterInput(new SimpleExporterInput(ihDao.registrosDetalleHora2Excel(ih)));
                    String operName = pDao.buscar(ih.getId_operario()).getNombre();
                    operName=operName.replaceAll(",","").trim();
                    String archivo=operName+".xls";
                    File export = new File(folder, archivo);
                    
                    exporter.setExporterOutput(new SimpleOutputStreamExporterOutput(export));
                    SimpleXlsReportConfiguration configuration = new SimpleXlsReportConfiguration();
                    configuration.setOnePagePerSheet(true);
                    configuration.setDetectCellType(false);
                    configuration.setCollapseRowSpan(false);
                    exporter.setConfiguration(configuration);
                    exporter.exportReport();
                    System.out.println("Se ha exportado correctamente:\n"
                    + "Archivo: "+export);
                } catch (JRException ex) {
                    Logger.getLogger(JDReportes.class.getName()).log(Level.SEVERE, null, ex);
                    r= false;
                }
                
            } //End for
            try {
                Desktop.getDesktop().browse((folder.toURI()));
            } catch (IOException ex) {
                Logger.getLogger(JDReportes.class.getName()).log(Level.SEVERE, null, ex);
            }
         return r=true;   
        }
        @Override protected void succeeded(Object result) {
            if(r){
                OpcionPanel.showMessageDialog(null, "Sus reportes se encuentran en:\n"+ruta, "Exportación correcta", OpcionPanel.INFORMATION_MESSAGE);
            }else{
                OpcionPanel.showMessageDialog(null, "Error exportado los reportes. Revise el directorio:\n"+ruta, "ERROR", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }






    @Action
    public Task ObrasListadoSeleccionInforme() {
        
        return new ObrasListadoSeleccionInformeTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class ObrasListadoSeleccionInformeTask extends org.jdesktop.application.Task<Object, Void> {
        
       
        ObrasListadoSeleccionInformeTask(org.jdesktop.application.Application app) {
            super(app);
                       
        }
        @Override protected Object doInBackground() {
            ObrasDAO dao = new ObrasDAO();
            dao.conectar();
            obrasListado = dao.cargarTodos();
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            modelObraSelected.clean();
            for(Obras o : obrasListado){
                ItemObra io = new ItemObra();
                io.cast(o);
                modelObraSelected.addFila(io);
            }
            jTable1.getColumnModel().getColumn(0).setWidth(26);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(35);
        }
    }

    
    /*
     @Action
    public Task ObrasListadoSeleccionInforme() {
        
        return new ObrasListadoSeleccionInformeTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class ObrasListadoSeleccionInformeTask extends org.jdesktop.application.Task<Object, Void> {
        
        Date desde, hasta;
        ObrasListadoSeleccionInformeTask(org.jdesktop.application.Application app) {
            super(app);
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
            
        }
        @Override protected Object doInBackground() {
            ObrasDAO dao = new ObrasDAO();
            dao.conectar();
            obrasListado = dao.cargarTodos();
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            modelObraSelected.clean();
            for(Obras o : obrasListado){
                ItemObra io = (ItemObra) o;
                modelObraSelected.addRegistro(io);
            }
        }
    }
     
     
     
     */

    @Action
    public Task generarInformeCustom() {
        if(countObrasSelected() > 50){
            OpcionPanel.showMessageDialog(null, "El límite máximo de obras seleccionadas es 50.", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        if(desdeFechaFiltro.getDate() == null || hastaFechaFiltro.getDate() == null){
            OpcionPanel.showMessageDialog(null, "Seleccione un rango de fechas", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        if(isOperarioSelectedCustomInforme.isSelected() && ( operarioSelect == null || operarioSelect.getId() == 0)){
            OpcionPanel.showMessageDialog(null, "Seleccione un operario o desactive la opción", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        if(countObrasSelected()== 0){
                        
            
            OpcionPanel.showMessageDialog(null, "No ha seleccionado ninguna obra", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        return new GenerarInformeCustomTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarInformeCustomTask extends org.jdesktop.application.Task<Object, Void> {
        Date desde, hasta;
        boolean monoEmpleado = isOperarioSelectedCustomInforme.isSelected();
        ArrayList<Obras> obrasIDlist = new ArrayList<Obras>();
        GenerarInformeCustomTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarInformeCustomTask fields, here.
            super(app);
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
            obrasIDlist = generarArrayIdObras();
        }
        @Override protected Object doInBackground() {
            ReportesDAO rDao = new ReportesDAO();
            rDao.conectar();
            if(monoEmpleado && operarioSelect != null && operarioSelect.getId() != 0){
                rDao.reportCustom(operarioSelect.getId(), obrasIDlist, desde, hasta);
                
            }
            else{
                rDao.reportCustom(0, obrasIDlist, desde, hasta);
            }
            
            
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            
        }

        private ArrayList<Obras> generarArrayIdObras() {
            ArrayList<Obras> aux = new ArrayList<Obras>();
            for(int i =0; i<modelObraSelected.getRowCount(); i++){
                if(((ItemObra)modelObraSelected.getFila(i)).isSelected()){
                    aux.add((Obras)modelObraSelected.getFila(i));
                }
            }
            return aux;
        }
    }

    @Action
    public Task exportarTodosEquipos2Excel() {
        exportTodosEquipos.setEnabled(false);
        txtProcessing.setText("Procesando...");
        Info("Se están generando los reportes. Por favor, espere.");
        return new ExportarTodosEquipos2ExcelTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class ExportarTodosEquipos2ExcelTask extends org.jdesktop.application.Task<Object, Void> {
        boolean r= false;
        String ruta="";
        String strDesde;
        String strHasta;
        Date desde;
        Date hasta;
        ExportarTodosEquipos2ExcelTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to ExportarTodosEquipos2ExcelTask fields, here.
            super(app);
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
            strDesde = sdf.format(desde);
            strHasta = sdf.format(hasta);
        }
        @Override protected Object doInBackground() {
            ReportesDAO rDao= new ReportesDAO();
            EquiposDAO eqDao = new EquiposDAO();
            eqDao.conectar();
            rDao.conectar();
            ArrayList<Equipos> list= eqDao.cargarTodosMenos1();
            String soName = System.getProperty("os.name").toUpperCase();
            File folder = new File("Equipos("+strDesde+"-"+strHasta+")\\");
                if (soName.equals("LINUX")) { //Si se ejecuta en Linux  
                        folder = new File("Equipos("+strDesde+"-"+strHasta+")/");
                        if(!folder.exists()){
                            folder.mkdirs();
                        }
                }else  {  //si se ejecuta en Windows u otro
                        if(!folder.exists()){
                            folder.mkdirs();
                        }                       
                }
                r=true;
                ruta = folder.getAbsolutePath();
            for(Equipos eq: list){
                
                try {
                    JRXlsExporter exporter = new JRXlsExporter();
                    exporter.setExporterInput(new SimpleExporterInput( rDao.equiposTodos2Excel(desde, hasta, eq.getId())));               
                    String equipoName = eq.getN_interno() +"-"+eq.getEquipos();
                    equipoName=equipoName.replaceAll(",","").replaceAll(" ","_").replaceAll("/", "-").trim();
                    String archivo=equipoName+".xls";
                    if (soName.equals("LINUX")) { //Si se ejecuta en Linux                    
                            archivo=folder.getAbsoluteFile()+"/"+archivo;
                    }else  {  //si se ejecuta en Windows)                       
                            archivo=folder.getAbsoluteFile()+"\\"+archivo;
                    }
                    exporter.setExporterOutput(new SimpleOutputStreamExporterOutput(archivo));
                    SimpleXlsReportConfiguration configuration = new SimpleXlsReportConfiguration();
                    configuration.setOnePagePerSheet(true);
                    configuration.setDetectCellType(false);
                    configuration.setCollapseRowSpan(false);
                    configuration.setRemoveEmptySpaceBetweenRows(true);
                    exporter.setConfiguration(configuration);
                    exporter.exportReport();
                    System.out.println("Se ha exportado correctamente:\n"
                    + "Archivo: "+ archivo);
                } catch (JRException ex) {
                    Logger.getLogger(JDReportes.class.getName()).log(Level.SEVERE, null, ex);
                    r= false;
                }
                
            } //End for
            try {
                Desktop.getDesktop().browse((folder.toURI()));
            } catch (IOException ex) {
                Logger.getLogger(JDReportes.class.getName()).log(Level.SEVERE, null, ex);
            }
         return null; 
        }
        @Override protected void succeeded(Object result) {
           if(r){
                OpcionPanel.showMessageDialog(null, "Sus reportes se encuentran en:\n"+ruta, "Exportación correcta", OpcionPanel.INFORMATION_MESSAGE);
            }else{
                OpcionPanel.showMessageDialog(null, "Error exportado los reportes. Revise el directorio:\n"+ruta, "ERROR", OpcionPanel.ERROR_MESSAGE);
            }
           exportTodosEquipos.setEnabled(true);
           txtProcessing.setText("");
        }
    }

    @Action
    public Task generarPlanillaSeguimiento() {
        if(desdeFechaFiltro.getDate() == null || hastaFechaFiltro.getDate() == null){
            OpcionPanel.showMessageDialog(null, "Seleccione un rango de fechas", "Aviso",OpcionPanel.INFORMATION_MESSAGE);
            return null;
        }
        return new GenerarPlanillaSeguimientoTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarPlanillaSeguimientoTask extends org.jdesktop.application.Task<Object, Void> {
        Date desde;
        Date hasta;
        GenerarPlanillaSeguimientoTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarPlanillaSeguimientoTask fields, here.
            super(app);
            desde = desdeFechaFiltro.getDate();
            hasta = hastaFechaFiltro.getDate();
        }
        @Override protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            ReportesDAO rDao = new ReportesDAO();
            rDao.conectar();
            return rDao.reportRISeguimiento(desde, hasta);
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            boolean r = (Boolean) result;
            if(r) Success("Se generó correctamente la planilla.");
            else  Error("No se pudo generar el informe. Intente nuevamente.");
            
        }
    }

    @Action
    public Task GenerarInformeVencimientosFechasOperario() {
        Info("Generando informe...");
        return new GenerarInformeVencimientosFechasOperarioTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GenerarInformeVencimientosFechasOperarioTask extends org.jdesktop.application.Task<Object, Void> {
        
        GenerarInformeVencimientosFechasOperarioTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GenerarInformeVencimientosFechasOperarioTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            ReportesDAO rDao = new ReportesDAO();
            rDao.conectar();
            return rDao.InformeVencimientosOperario();
            
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
        }
    }

    @Action
    public Task btnGenInformeAlarmasProximas() {
        Info("Generando informe...");
        return new BtnGenInformeAlarmasProximasTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class BtnGenInformeAlarmasProximasTask extends org.jdesktop.application.Task<Object, Void> {
        boolean r = false;
        Date fechaLimite;
        BtnGenInformeAlarmasProximasTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to BtnGenInformeAlarmasProximasTask fields, here.
            super(app);
            fechaLimite = dateFechaLimiteAlarma.getDate();
        }
        @Override protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            ReportesDAO rDao = new ReportesDAO();
            rDao.conectar();
            return rDao.InformeAlarmasProximas(fechaLimite);
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
            try{
                JasperPrint jp = (JasperPrint) result;
                UtilReport.MostrarDialogSeleccion(parent, jp);
            }catch(Exception ex){
                Error("No se pudo generar el informe.");
            }
           
        }
    }












    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JYearChooser añoPeriodo;
    private javax.swing.JButton botonBuscarEmpleado;
    private javax.swing.JButton botonBuscarEmpleado1;
    private javax.swing.JButton botonQuery;
    private javax.swing.JButton btnBuscarEmpleado;
    private javax.swing.JButton btnInformeCombustibleEquipo;
    private javax.swing.JButton btnInformeCombustibleObra;
    private javax.swing.JButton btnInformeCombustiblePlataforma;
    private javax.swing.JButton btnSeleccionPlataforma;
    private javax.swing.JDialog buscarEmpleado;
    private javax.swing.JButton buscarEquiposBoton;
    private javax.swing.JButton cerrarBusquedaObras;
    private javax.swing.JButton cerrarBusquedaPlataformas;
    private com.toedter.calendar.JDateChooser dateFechaLimiteAlarma;
    private com.toedter.calendar.JDateChooser desdeFecha;
    private com.toedter.calendar.JDateChooser desdeFechaFiltro;
    private javax.swing.JCheckBox empleadoCheck;
    private javax.swing.JButton exitDialog;
    private javax.swing.JButton exportTodosEquipos;
    private javax.swing.JButton genInformeAlarmasPróximas;
    private javax.swing.JButton genReporteEquipo;
    private javax.swing.JButton generarDetalleRegistroButton;
    private javax.swing.JButton generarEqMatXObra;
    private javax.swing.JButton generarExportacion;
    private javax.swing.JButton generarInformesHorasButton;
    private javax.swing.JButton generarReportePersEqXObra;
    private com.toedter.calendar.JDateChooser hastaFecha;
    private com.toedter.calendar.JDateChooser hastaFechaFiltro;
    private javax.swing.JDialog informeDetalleHora;
    private javax.swing.JDialog informeHorasDialog;
    private javax.swing.JCheckBox isOperarioSelectedCustomInforme;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList jListEquipos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JLabel lblEquiposCombustible;
    private javax.swing.JLabel lblEquiposSelect;
    private javax.swing.JLabel lblObraReportPersEqXObra;
    private javax.swing.JLabel lblOperarioSelected;
    private javax.swing.JLabel lblPeriodo;
    private javax.swing.JLabel lblPlataformaCombustible;
    private javax.swing.JList listReportes;
    private javax.swing.JList listaDeObras;
    private javax.swing.JList listaDePeriodos;
    private javax.swing.JList listaDePlataformas;
    private javax.swing.JList listaEmpleados;
    private com.toedter.calendar.JMonthChooser mesPeriodo;
    private javax.swing.JLabel obraSeleccionadaConsumo;
    private javax.swing.JComboBox operariosCombo;
    private javax.swing.JComboBox operariosCombo1;
    private javax.swing.JTextField query1;
    private javax.swing.JTextField queryEquipos;
    private javax.swing.JComboBox quincena;
    private javax.swing.JButton salirBuscarEquipos;
    private javax.swing.JDialog seleccionarEquipo;
    private javax.swing.JButton seleccionarEquiposBoton;
    private javax.swing.JButton seleccionarObraReportPersEq;
    private javax.swing.JDialog seleccionarPeriodosDialog;
    private javax.swing.JButton selectConsumoObraBoton;
    private javax.swing.JButton selectEquiposBoton;
    private javax.swing.JDialog selectObraDialog;
    private javax.swing.JButton selectObrasButton;
    private javax.swing.JDialog selectPlataformaDialog;
    private javax.swing.JButton selectPlataformasButton;
    private javax.swing.JButton selectRow;
    private javax.swing.JLabel txtProcessing;
    // End of variables declaration//GEN-END:variables
    public static DefaultComboBoxModel operarios = new DefaultComboBoxModel();
    DefaultListModel periodos = new DefaultListModel();
    DefaultListModel listEmpl = new DefaultListModel();
    DefaultListModel listObras = new DefaultListModel();
    DefaultListModel listPlataformas = new DefaultListModel();
    DefaultListModel listEquipos = new DefaultListModel();
    private JDialog informesAnteriores;
    //int opcion;
    DefaultListModel listReport = new DefaultListModel();
    Obras obraSelect= new Obras();
    Equipos equipoSelect = new Equipos();
    Operario operarioSelect = new Operario();
    EstacionServicio estacionSelect = new EstacionServicio();
    String periodo = "";
    ObrasTablaInforme modelObraSelected = new ObrasTablaInforme();
    ArrayList<Obras> obrasListado = new ArrayList<Obras>();
}
