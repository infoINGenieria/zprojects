/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MensajeDialogo.java
 *
 * Created on 14/12/2013, 11:08:00
 */
package Vista;

import java.awt.Color;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;

/**
 *
 * @author matuu
 */
public class MensajeDialogo extends javax.swing.JDialog {


    MensajeDialogo dialog;
    Color color_error ;
    Color color_success;
    Color color_info;
    String mensaje;
    int tipo;
    String titulo;

    /** Creates new form MensajeDialogo */
    public MensajeDialogo(java.awt.Frame parent, boolean modal, String titulo, String mensaje, int tipoMensaje) {
        super(parent, modal);
        initComponents();
        color_error = Color.decode("#c72b2b");
        color_success = Color.decode("#418e3d");
        color_info = Color.decode("#20444b");
        this.mensaje = mensaje;
        this.tipo = tipoMensaje;
        this.titulo = titulo;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMensaje = new javax.swing.JTextArea();
        btnCerrar = new javax.swing.JButton();
        txtTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("Form"); // NOI18N
        setResizable(false);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(MensajeDialogo.class);
        backgroundPanel.setBackground(resourceMap.getColor("backgroundPanel.background")); // NOI18N
        backgroundPanel.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("backgroundPanel.border.lineColor"), 1, true)); // NOI18N
        backgroundPanel.setName("backgroundPanel"); // NOI18N
        backgroundPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backgroundPanelMouseClicked(evt);
            }
        });

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setEnabled(false);
        jScrollPane1.setName("txtMensaje"); // NOI18N
        jScrollPane1.setOpaque(false);
        jScrollPane1.setWheelScrollingEnabled(false);

        txtMensaje.setBackground(resourceMap.getColor("txtMensaje.background")); // NOI18N
        txtMensaje.setColumns(20);
        txtMensaje.setEditable(false);
        txtMensaje.setFont(txtMensaje.getFont().deriveFont(txtMensaje.getFont().getStyle() | java.awt.Font.BOLD, txtMensaje.getFont().getSize()+2));
        txtMensaje.setLineWrap(true);
        txtMensaje.setRows(3);
        txtMensaje.setWrapStyleWord(true);
        txtMensaje.setBorder(null);
        txtMensaje.setDoubleBuffered(true);
        txtMensaje.setEnabled(false);
        txtMensaje.setFocusable(false);
        txtMensaje.setName("txtMensaje"); // NOI18N
        txtMensaje.setRequestFocusEnabled(false);
        txtMensaje.setVerifyInputWhenFocusTarget(false);
        txtMensaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMensajeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(txtMensaje);

        btnCerrar.setBorder(null);
        btnCerrar.setName("btnCerrar"); // NOI18N
        btnCerrar.setOpaque(false);
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        txtTitulo.setFont(txtTitulo.getFont().deriveFont(txtTitulo.getFont().getStyle() | java.awt.Font.BOLD, txtTitulo.getFont().getSize()+1));
        txtTitulo.setFocusable(false);
        txtTitulo.setName("txtTitulo"); // NOI18N
        txtTitulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTituloMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(txtTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCerrar)
                    .addComponent(txtTitulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void txtMensajeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMensajeMouseClicked
        dispose();
    }//GEN-LAST:event_txtMensajeMouseClicked

    private void txtTituloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTituloMouseClicked
        dispose();
    }//GEN-LAST:event_txtTituloMouseClicked

    private void backgroundPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundPanelMouseClicked
        dispose();
    }//GEN-LAST:event_backgroundPanelMouseClicked

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        dispose();
    }//GEN-LAST:event_formComponentHidden

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MensajeDialogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MensajeDialogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MensajeDialogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MensajeDialogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            @Override
//            public void run() {
//                MensajeDialogo dialog = new MensajeDialogo(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    public String getMensaje() {
        return mensaje;
    }

    public void setMensaje(String mensaje) {
        this.mensaje = mensaje;
    }

    public int getTipo() {
        return tipo;
    }

    public void setTipo(int tipo) {
        this.tipo = tipo;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final MensajeDialogo other = (MensajeDialogo) obj;
        if ((this.mensaje == null) ? (other.mensaje != null) : !this.mensaje.equals(other.mensaje)) {
            return false;
        }
        if (this.mensaje == null && other.mensaje == null){ return false; }
        if (this.tipo != other.tipo) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 11 * hash + (this.mensaje != null ? this.mensaje.hashCode() : 0);
        hash = 11 * hash + this.tipo;
        return hash;
    }

    public synchronized void MostrarMensaje(){
        dialog = this;

        txtTitulo.setText(this.titulo);
        txtMensaje.setText(this.mensaje);

        switch(this.tipo){
            case Mensajes.ERROR:
                //backgroundPanel.setBackground(color_error);
               // txtMensaje.setBackground(color_error);
                txtMensaje.setForeground(color_error);
                txtTitulo.setForeground(color_error);
                break;
            case Mensajes.SUCCESS:
                //backgroundPanel.setBackground(color_success);
               // txtMensaje.setBackground(color_success);
                txtMensaje.setForeground(color_success);
                txtTitulo.setForeground(color_success);
                break;
            case Mensajes.INFO:
            default:
                //backgroundPanel.setBackground(color_info);
                //txtMensaje.setBackground(color_info);
                txtMensaje.setForeground(color_info);
                txtTitulo.setForeground(color_info);
        }

        //Esquina inferior izquierda
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice defaultScreen = ge.getDefaultScreenDevice();
        Rectangle rect = defaultScreen.getDefaultConfiguration().getBounds();
        int x = (int)rect.getMaxX()-dialog.getWidth()- 20;
        int y = (int)rect.getMaxY()-dialog.getHeight() -40 - (Mensajes.contador * (dialog.getHeight() + 5)) ;
        dialog.setLocation(x,y);

        dialog.setVisible(true);

       // dialog.setAlwaysOnTop(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtMensaje;
    private javax.swing.JLabel txtTitulo;
    // End of variables declaration//GEN-END:variables
}
