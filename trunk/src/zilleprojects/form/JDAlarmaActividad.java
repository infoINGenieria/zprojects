/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDAlarmaActividad.java
 *
 * Created on Jul 15, 2012, 12:19:56 PM
 */
package zilleprojects.form;

import DAO.AlarmasDAO;
import DAO.RIDAO;
import Modelo.Alarma;
import Modelo.RI;
import Vista.OpcionPanel;
import Vista.PanelAzul;
import java.awt.Image;
import java.awt.Toolkit;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author matuuar
 */
public class JDAlarmaActividad extends javax.swing.JDialog {
    private Alarma alarma = new Alarma();
    Image icono = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/zilleprojects/resources/icono.png"));

    /** Creates new form JDAlarmaActividad */
    public JDAlarmaActividad(java.awt.Frame parent, boolean modal, Alarma alarm) {
        super(parent, modal);
        initComponents();
        alarma = alarm;
        setAlarmaInfo(alarma);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new PanelAzul();
        nombreAlarma = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcionAlarma = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        RIID = new javax.swing.JLabel();
        btnAceptarAlarma = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        isReprogramar = new javax.swing.JCheckBox();
        fechaReprogramada = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        descripcionReprogramada = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(300, 200));
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);
        setUndecorated(true);

        jPanel1.setMaximumSize(new java.awt.Dimension(300, 200));
        jPanel1.setMinimumSize(new java.awt.Dimension(300, 200));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 200));

        nombreAlarma.setFont(nombreAlarma.getFont().deriveFont(nombreAlarma.getFont().getStyle() | java.awt.Font.BOLD, nombreAlarma.getFont().getSize()+2));
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(JDAlarmaActividad.class);
        nombreAlarma.setText(resourceMap.getString("nombreAlarma.text")); // NOI18N
        nombreAlarma.setName("nombreAlarma"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        descripcionAlarma.setColumns(20);
        descripcionAlarma.setEditable(false);
        descripcionAlarma.setLineWrap(true);
        descripcionAlarma.setRows(3);
        descripcionAlarma.setWrapStyleWord(true);
        descripcionAlarma.setDisabledTextColor(resourceMap.getColor("descripcionAlarma.disabledTextColor")); // NOI18N
        descripcionAlarma.setName("descripcionAlarma"); // NOI18N
        jScrollPane1.setViewportView(descripcionAlarma);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        RIID.setText(resourceMap.getString("RIID.text")); // NOI18N
        RIID.setName("RIID"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getActionMap(JDAlarmaActividad.class, this);
        btnAceptarAlarma.setAction(actionMap.get("reprogramarAlarma")); // NOI18N
        btnAceptarAlarma.setIcon(resourceMap.getIcon("btnAceptarAlarma.icon")); // NOI18N
        btnAceptarAlarma.setText(resourceMap.getString("btnAceptarAlarma.text")); // NOI18N
        btnAceptarAlarma.setName("btnAceptarAlarma"); // NOI18N
        btnAceptarAlarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarAlarmaActionPerformed(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel2.border.lineColor"), 1, true)); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);

        isReprogramar.setBackground(resourceMap.getColor("isReprogramar.background")); // NOI18N
        isReprogramar.setText(resourceMap.getString("isReprogramar.text")); // NOI18N
        isReprogramar.setName("isReprogramar"); // NOI18N
        isReprogramar.setOpaque(true);
        isReprogramar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                isReprogramarItemStateChanged(evt);
            }
        });

        fechaReprogramada.setEnabled(false);
        fechaReprogramada.setName("fechaReprogramada"); // NOI18N
        fechaReprogramada.setOpaque(false);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        descripcionReprogramada.setColumns(20);
        descripcionReprogramada.setLineWrap(true);
        descripcionReprogramada.setRows(3);
        descripcionReprogramada.setWrapStyleWord(true);
        descripcionReprogramada.setDisabledTextColor(resourceMap.getColor("descripcionReprogramada.disabledTextColor")); // NOI18N
        descripcionReprogramada.setEnabled(false);
        descripcionReprogramada.setName("descripcionReprogramada"); // NOI18N
        jScrollPane2.setViewportView(descripcionReprogramada);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(fechaReprogramada, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(isReprogramar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(isReprogramar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fechaReprogramada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAceptarAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreAlarma, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RIID, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel2, jScrollPane1});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nombreAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(RIID, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAceptarAlarma, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {RIID, jLabel2});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void isReprogramarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_isReprogramarItemStateChanged
    boolean op =isReprogramar.isSelected();
    fechaReprogramada.setEnabled(op);
    descripcionReprogramada.setEnabled(op);
}//GEN-LAST:event_isReprogramarItemStateChanged

    private void btnAceptarAlarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarAlarmaActionPerformed
    dispose();
    }//GEN-LAST:event_btnAceptarAlarmaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDAlarmaActividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDAlarmaActividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDAlarmaActividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDAlarmaActividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDAlarmaActividad dialog = new JDAlarmaActividad(new javax.swing.JFrame(), true, new Alarma());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RIID;
    private javax.swing.JButton btnAceptarAlarma;
    private javax.swing.JTextArea descripcionAlarma;
    private javax.swing.JTextArea descripcionReprogramada;
    private com.toedter.calendar.JDateChooser fechaReprogramada;
    private javax.swing.JCheckBox isReprogramar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nombreAlarma;
    // End of variables declaration//GEN-END:variables

    private void setAlarmaInfo(Alarma alarma) {
        nombreAlarma.setText(alarma.getNombre());
        descripcionAlarma.setText(alarma.getComentario());
        if( alarma.getRiID() == 0){
            RIID.setText("Sin RI asociado");
            RIID.setEnabled(false);
            
        }
        else{
            
            RIDAO riDao = new RIDAO();
            riDao.conectar();
            RI ri = riDao.findById(alarma.getRiID());
            //RIID.setText(ri.toString().substring(0, 45) + "...");
            RIID.setText(ri.getRI_num());
            RIID.setEnabled(true);
            
        }
    }

    @Action
    public Task reprogramarAlarma() {
        if(!isReprogramar.isSelected()){
            dispose();
            return null;
            
        }else{
            if(fechaReprogramada.getDate()==null){
                OpcionPanel.showMessageDialog(null, "La fecha no puede ser nula", "ERROR", OpcionPanel.ERROR_MESSAGE);
                return null;
            }
            if(descripcionReprogramada.getText().isEmpty()){
                OpcionPanel.showMessageDialog(null, "Debe agregar una descripción", "ERROR", OpcionPanel.ERROR_MESSAGE);
                return null;
            }
        }
        return new ReprogramarAlarmaTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class ReprogramarAlarmaTask extends org.jdesktop.application.Task<Object, Void> {
        Alarma a = new Alarma();
        int r = 0;
        ReprogramarAlarmaTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to ReprogramarAlarmaTask fields, here.
            super(app);
            a.setNombre(alarma.getNombre());
            a.setComentario(descripcionReprogramada.getText());
            a.setFecha(fechaReprogramada.getDate());
            if(alarma.getRiID()!=0){
                a.setRiID(alarma.getRiID());
            }
                    
        }
        @Override protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            AlarmasDAO adao= new AlarmasDAO();
            adao.conectar();
            r=adao.guardar(a);
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            if(r>0){
                dispose();
                
            }else{
                OpcionPanel.showMessageDialog(null, "Ocurrió un error al procesar la solicitud.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }

}
