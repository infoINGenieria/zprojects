/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDEntregaIndumentaria.java
 *
 * Created on 04/10/2014, 12:26:18
 */
package zilleprojects.form;

import DAO.AbstractHibernateDAO;
import DAO.EppEntregaDAO;
import DAO.IAbstractDAO;
import Modelo.EPP;
import Modelo.EPPOperario;
import Modelo.EntidadAbstracta;
import Modelo.EppEntrega;
import Modelo.EppEntregaItem;
import Modelo.Operario;
import Modelo.ParametrosSistema;
import Modelo.tablemodel.TablaDetalleEntregaIndumentariaModel;
import Modelo.tablemodel.TablaEntregaIndumentariaModel;
import Modelo.tablemodel.ZilleAbstractTableModel;
import Vista.OpcionPanel;
import Vista.PanelEsquinaAzul;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author m4tuu
 */
public class JDEntregaIndumentaria extends ZilleDialog {

    /** Creates new form JDEntregaIndumentaria */
    public JDEntregaIndumentaria(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        epps = (ArrayList<EPP>) AbstractHibernateDAO.getListaEntidades(EPP.class);
        SetButtonExtra(btnExportar);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        editarEntrega = new javax.swing.JDialog();
        jPanel1 = new PanelEsquinaAzul();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbOperarios = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        chooseFecha = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDetalle = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnCancelarEntrega = new javax.swing.JButton();
        btnGuardarEntrega = new javax.swing.JButton();
        btnAñadirDetalle = new javax.swing.JButton();
        btnEditarDetalle = new javax.swing.JButton();
        btnQuitarDetalle = new javax.swing.JButton();
        editarDetalle = new javax.swing.JDialog();
        jPanel4 = new PanelEsquinaAzul();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        cmbEpp = new javax.swing.JComboBox();
        txtMedida = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPredeterminado = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        cmbTalles = new javax.swing.JComboBox();
        btnExportar = new javax.swing.JButton();

        editarEntrega.setModal(true);
        editarEntrega.setName("editarEntrega"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(JDEntregaIndumentaria.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel2, gridBagConstraints);

        cmbOperarios.setModel(comboOperarioModel);
        cmbOperarios.setMinimumSize(new java.awt.Dimension(320, 24));
        cmbOperarios.setName("cmbOperarios"); // NOI18N
        cmbOperarios.setPreferredSize(new java.awt.Dimension(280, 34));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(cmbOperarios, gridBagConstraints);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jLabel3, gridBagConstraints);

        chooseFecha.setName("chooseFecha"); // NOI18N
        chooseFecha.setPreferredSize(new java.awt.Dimension(120, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(chooseFecha, gridBagConstraints);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        txtObservaciones.setName("txtObservaciones"); // NOI18N
        jScrollPane1.setViewportView(txtObservaciones);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTableDetalle.setName("jTableDetalle"); // NOI18N
        jScrollPane2.setViewportView(jTableDetalle);

        jPanel3.setName("jPanel3"); // NOI18N

        btnCancelarEntrega.setIcon(resourceMap.getIcon("btnCancelarEntrega.icon")); // NOI18N
        btnCancelarEntrega.setText(resourceMap.getString("btnCancelarEntrega.text")); // NOI18N
        btnCancelarEntrega.setName("btnCancelarEntrega"); // NOI18N
        btnCancelarEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarEntregaActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getActionMap(JDEntregaIndumentaria.class, this);
        btnGuardarEntrega.setAction(actionMap.get("GuardarEntidad")); // NOI18N
        btnGuardarEntrega.setIcon(resourceMap.getIcon("btnGuardarEntrega.icon")); // NOI18N
        btnGuardarEntrega.setText(resourceMap.getString("btnGuardarEntrega.text")); // NOI18N
        btnGuardarEntrega.setName("btnGuardarEntrega"); // NOI18N

        btnAñadirDetalle.setAction(actionMap.get("showDialogoAñadirDetalle")); // NOI18N
        btnAñadirDetalle.setIcon(resourceMap.getIcon("btnAñadirDetalle.icon")); // NOI18N
        btnAñadirDetalle.setText(resourceMap.getString("btnAñadirDetalle.text")); // NOI18N
        btnAñadirDetalle.setName("btnAñadirDetalle"); // NOI18N

        btnEditarDetalle.setAction(actionMap.get("showDialogoEditarDetalle")); // NOI18N
        btnEditarDetalle.setIcon(resourceMap.getIcon("btnEditarDetalle.icon")); // NOI18N
        btnEditarDetalle.setText(resourceMap.getString("btnEditarDetalle.text")); // NOI18N
        btnEditarDetalle.setName("btnEditarDetalle"); // NOI18N

        btnQuitarDetalle.setAction(actionMap.get("quitarDetalle")); // NOI18N
        btnQuitarDetalle.setIcon(resourceMap.getIcon("btnQuitarDetalle.icon")); // NOI18N
        btnQuitarDetalle.setText(resourceMap.getString("btnQuitarDetalle.text")); // NOI18N
        btnQuitarDetalle.setName("btnQuitarDetalle"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardarEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(btnCancelarEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(btnAñadirDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(btnEditarDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(btnQuitarDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAñadirDetalle)
                .addGap(18, 18, 18)
                .addComponent(btnEditarDetalle)
                .addGap(18, 18, 18)
                .addComponent(btnQuitarDetalle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(btnGuardarEntrega)
                .addGap(18, 18, 18)
                .addComponent(btnCancelarEntrega)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout editarEntregaLayout = new javax.swing.GroupLayout(editarEntrega.getContentPane());
        editarEntrega.getContentPane().setLayout(editarEntregaLayout);
        editarEntregaLayout.setHorizontalGroup(
            editarEntregaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        editarEntregaLayout.setVerticalGroup(
            editarEntregaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        editarDetalle.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        editarDetalle.setTitle(resourceMap.getString("editarDetalle.title")); // NOI18N
        editarDetalle.setAlwaysOnTop(true);
        editarDetalle.setMinimumSize(new java.awt.Dimension(404, 214));
        editarDetalle.setModal(true);
        editarDetalle.setName("editarDetalle"); // NOI18N
        editarDetalle.setUndecorated(true);
        editarDetalle.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                editarDetalleComponentShown(evt);
            }
        });

        jPanel4.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel4.border.lineColor"), 1, true)); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(jLabel4, gridBagConstraints);

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(jLabel5, gridBagConstraints);

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(jLabel6, gridBagConstraints);

        txtValor.setText(resourceMap.getString("txtValor.text")); // NOI18N
        txtValor.setName("txtValor"); // NOI18N
        txtValor.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(txtValor, gridBagConstraints);

        cmbEpp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbEpp.setName("cmbEpp"); // NOI18N
        cmbEpp.setPreferredSize(new java.awt.Dimension(150, 25));
        cmbEpp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbEppItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(cmbEpp, gridBagConstraints);

        txtMedida.setText(resourceMap.getString("txtMedida.text")); // NOI18N
        txtMedida.setName("txtMedida"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(txtMedida, gridBagConstraints);

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(jLabel8, gridBagConstraints);

        txtPredeterminado.setText(resourceMap.getString("txtPredeterminado.text")); // NOI18N
        txtPredeterminado.setName("txtPredeterminado"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(txtPredeterminado, gridBagConstraints);

        btnGuardar.setAction(actionMap.get("AddEditDetalle")); // NOI18N
        btnGuardar.setIcon(resourceMap.getIcon("btnGuardar.icon")); // NOI18N
        btnGuardar.setText(resourceMap.getString("btnGuardar.text")); // NOI18N
        btnGuardar.setMaximumSize(new java.awt.Dimension(100, 34));
        btnGuardar.setMinimumSize(new java.awt.Dimension(100, 34));
        btnGuardar.setName("btnGuardar"); // NOI18N
        btnGuardar.setPreferredSize(new java.awt.Dimension(100, 34));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(btnGuardar, gridBagConstraints);

        btnCancelar.setIcon(resourceMap.getIcon("btnCancelar.icon")); // NOI18N
        btnCancelar.setText(resourceMap.getString("btnCancelar.text")); // NOI18N
        btnCancelar.setMinimumSize(new java.awt.Dimension(100, 34));
        btnCancelar.setName("btnCancelar"); // NOI18N
        btnCancelar.setPreferredSize(new java.awt.Dimension(100, 34));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(btnCancelar, gridBagConstraints);

        cmbTalles.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTalles.setName("cmbTalles"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel4.add(cmbTalles, gridBagConstraints);

        javax.swing.GroupLayout editarDetalleLayout = new javax.swing.GroupLayout(editarDetalle.getContentPane());
        editarDetalle.getContentPane().setLayout(editarDetalleLayout);
        editarDetalleLayout.setHorizontalGroup(
            editarDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );
        editarDetalleLayout.setVerticalGroup(
            editarDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );

        btnExportar.setAction(actionMap.get("xlsExport")); // NOI18N
        btnExportar.setIcon(resourceMap.getIcon("btnExportar.icon")); // NOI18N
        btnExportar.setText(resourceMap.getString("btnExportar.text")); // NOI18N
        btnExportar.setName("btnExportar"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 71, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarEntregaActionPerformed
        editarEntrega.dispose();
    }//GEN-LAST:event_btnCancelarEntregaActionPerformed

    private void cmbEppItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbEppItemStateChanged
        EPP epp = (EPP) cmbEpp.getSelectedItem();
        
        txtMedida.setText(epp.getMedida());
        EPPOperario eop = ((EPPOperario) AbstractHibernateDAO.getEntidad(EPPOperario.class, 
                        "FROM EPPOperario eo where eo.operario.id = " + entrega.getOperarioId() +
                        " and eo.epp.id = " + epp.getId()));
        txtPredeterminado.setText(eop == null? "": eop.getValor());
        if (epp.tieneTalle()) {
            cmbTalles.setVisible(true);
            txtValor.setVisible(false);
            
        } else {
            cmbTalles.setVisible(false);
            txtValor.setVisible(true);
        }
        
        
    }//GEN-LAST:event_cmbEppItemStateChanged

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        editarDetalle.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void editarDetalleComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_editarDetalleComponentShown
        if (cmbEpp.getSelectedIndex() != -1) {
            EPP ep = (EPP) cmbEpp.getSelectedItem();
            if (ep.tieneTalle()) {
                cmbTalles.setVisible(true);
                txtValor.setVisible(false);
            } else {
                cmbTalles.setVisible(false);
                txtValor.setVisible(true);
            }
        }
    }//GEN-LAST:event_editarDetalleComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadirDetalle;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelarEntrega;
    private javax.swing.JButton btnEditarDetalle;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarEntrega;
    private javax.swing.JButton btnQuitarDetalle;
    private com.toedter.calendar.JDateChooser chooseFecha;
    private javax.swing.JComboBox cmbEpp;
    private javax.swing.JComboBox cmbOperarios;
    private javax.swing.JComboBox cmbTalles;
    private javax.swing.JDialog editarDetalle;
    private javax.swing.JDialog editarEntrega;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDetalle;
    private javax.swing.JLabel txtMedida;
    private javax.swing.JTextArea txtObservaciones;
    private javax.swing.JLabel txtPredeterminado;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

    @Override
    protected String getTablaName() {
        return "epp_entrega";
    }

    @Override
    protected String getNombreEntidad() {
        return "Entrega de indumentaria";
    }

    @Override
    protected void limpiarEntidad() {
        entrega = new EppEntrega();
        //cmbOperarios.setSelectedIndex(0);
        chooseFecha.setDate(new Date());
        txtObservaciones.setText(null);
        detalleTableModel = new TablaDetalleEntregaIndumentariaModel();
        jTableDetalle.setModel(tableModel);
    }

    

    @Override
    protected EntidadAbstracta getEntidadAbstracta() {
        return entrega;
    }

    @Override
    protected void setEntidadAbstracta(EntidadAbstracta ea) {
        entrega = (EppEntrega) ea;
    }

    @Override
    protected ZilleAbstractTableModel getTableModel() {
        return tableModel;
    }

    @Override
    protected ZilleAbstractTableModel setNewTableModel() {
        tableModel = new TablaEntregaIndumentariaModel();
        return tableModel;
    }

    @Override
    protected void setTableModel(ZilleAbstractTableModel ea) {
        tableModel = (TablaEntregaIndumentariaModel) ea;
    }

    @Override
    protected void setTitulo() {
        setTitle("Entregas de indumentaria");
    }

    @Override
    protected JDialog getAMEntidad() {
        return editarEntrega;
    }

    @Override
    protected JButton getBtnAceptarEntidadEdit() {
        return btnGuardarEntrega;
    }

    @Override
    protected JButton getBtnCancelarEntidadEdit() {
        return btnCancelarEntrega;
    }

    @Override
    protected void CargarEntidadAlEditar(EntidadAbstracta entidad) {
        entrega = (EppEntrega)entidad;
        operarios = (ArrayList<Operario>) AbstractHibernateDAO.getListaEntidades(Operario.class);
        cmbTalles.setModel(new DefaultComboBoxModel(ParametrosSistema.getGrupo("TALLE").toArray()));
        comboOperarioModel = new DefaultComboBoxModel(operarios.toArray());
        cmbOperarios.setModel(comboOperarioModel);
        cmbOperarios.setSelectedItem(
                AbstractHibernateDAO.getEntidad(
                    entrega.getOperarioId(), Operario.class));
        chooseFecha.setDate(entrega.getFecha());
        txtObservaciones.setText(entrega.getObservaciones());
        cargarDetalles();
    }
    
    private void cargarDetalles(){
        ArrayList<EppEntregaItem> itemes = 
                (ArrayList<EppEntregaItem>) AbstractHibernateDAO.getListaEntidadesFiltrada(
                EppEntregaItem.class, "FROM EppEntregaItem eei where eei.eppEntrega.id = " + entrega.getId());
        detalleTableModel = new TablaDetalleEntregaIndumentariaModel();
        for(EppEntregaItem ei: itemes) {
            detalleTableModel.addFila(ei);
        }
        jTableDetalle.setModel(detalleTableModel);
    }

    @Override
    protected boolean GuardarEntidadAlEditar() {
        entrega.setFecha(chooseFecha.getDate());
        entrega.setOperarioId(((Operario)cmbOperarios.getSelectedItem()).getId());
        entrega.setObservaciones(txtObservaciones.getText());
        ArrayList<EppEntregaItem> list = new ArrayList<EppEntregaItem>();
        for (EntidadAbstracta a : detalleTableModel.getData()) {
            list.add((EppEntregaItem)a);
        }
        entrega.setItems(list);
        
        return entrega.validate();
    }

    @Override
    protected Dimension getSizeDialogEdit() {
        return new Dimension(850, 580);
    }

    @Override
    protected IAbstractDAO getDao() {
        return new EppEntregaDAO();
    }
    
     @Override
    protected String[] getConfigColumn() {
        String[] conf = new String[] {"0:100", "1:50"};
        return conf;
    }
     
    private void setDetalle(EppEntregaItem e) {
        cmbEpp.setSelectedItem(e.getEpp());
        txtMedida.setText(e.getEpp().getMedida());
        txtValor.setText(e.getMedida());
        EPPOperario eop = ((EPPOperario) AbstractHibernateDAO.getEntidad(EPPOperario.class, 
                        "FROM EPPOperario eo where eo.operario.id = " + e.getEppEntrega().getOperarioId() +
                        " and eo.epp.id = " + e.getEpp().getId()));
        txtPredeterminado.setText(eop == null? "": eop.getValor());
    } 
    
    private void limpiarDetalle() {
        cmbEpp.setSelectedIndex(0);
        txtMedida.setText(((EPP)cmbEpp.getSelectedItem()).getMedida());
        txtValor.setText(null);
        EPPOperario op = ((EPPOperario) AbstractHibernateDAO.getEntidad(EPPOperario.class, 
                        "FROM EPPOperario eo where eo.operario.id = " + entrega.getOperarioId() +
                        " and eo.epp.id = " + ((EPP)cmbEpp.getSelectedItem()).getId()));
        txtPredeterminado.setText(op == null ? "" : op.getValor());
    }

    boolean isAddDetalle = false;
    
    @Action
    public void showDialogoAñadirDetalle() {
        item = new EppEntregaItem();
        isAddDetalle = true;
        cmbEpp.setModel(new DefaultComboBoxModel(epps.toArray()));
        limpiarDetalle();
        editarDetalle.setLocation(320, 120);
        editarDetalle.setSize(424, 254);
        editarDetalle.setVisible(true);
        
    }
    
    @Action
    public void showDialogoEditarDetalle() {
        if (jTableDetalle.getSelectedRow() > -1) {
            isAddDetalle = false;
            item = (EppEntregaItem) detalleTableModel.getFila(jTableDetalle.getSelectedRow());
            cmbEpp.setModel(new DefaultComboBoxModel(epps.toArray()));
            setDetalle(item);
            editarDetalle.setLocationRelativeTo(null);
        editarDetalle.setSize(424, 254);
        editarDetalle.setVisible(true);
        
        }
    }
    

    @Action
    public void AddEditDetalle() {
        item.setEpp(((EPP)cmbEpp.getSelectedItem()));
        if (((EPP)cmbEpp.getSelectedItem()).tieneTalle()) {
            item.setMedida(cmbTalles.getSelectedItem().toString());
        } else {
            item.setMedida(txtValor.getText());
        }
        
        item.setEppEntrega(entrega);
        
        if (isAddDetalle)
            detalleTableModel.addFila(item);
        else
            detalleTableModel.insertarFila(item, jTableDetalle.getSelectedRow());
        editarDetalle.dispose();
    }

   
    @Action
    public void quitarDetalle() {
        int i = jTableDetalle.getSelectedRow();
        if (i != -1) {
            if (OpcionPanel.showConfirmDialog(this, 
                    "¿Está seguro que desea quitar el registro?\n Esta operación no puede deshacerse.", 
                    "Confirmar",OpcionPanel.YES_NO_OPTION, OpcionPanel.QUESTION_MESSAGE) == OpcionPanel.YES_OPTION) {
                item = (EppEntregaItem) detalleTableModel.getFila(i);
                if (item.getId()!= 0) {
                    if (AbstractHibernateDAO.eliminarEntidad(item)) {
                        Success("Registro eliminado.");
                        detalleTableModel.delFila(i);
                    } else {
                        Error("Error al eliminar. Intente nuevamente");
                    }
                } else {
                    detalleTableModel.delFila(i);
                }
                
            }
             item = new EppEntregaItem();
        } else {
            Info("Seleccione un fila primero.");
        }  
    }

    @Action
    public Task xlsExport() {
        return new XlsExportTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class XlsExportTask extends org.jdesktop.application.Task<Object, Void> {
        XlsExportTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to XlsExportTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            EppEntregaDAO dao = new EppEntregaDAO();
            dao.ReporteXlsResumenEntregaEpp(getTableModel().getData());
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
        }
    }


    
    private EppEntrega entrega = new EppEntrega();
    private EppEntregaItem item = new EppEntregaItem();
    
    private TablaEntregaIndumentariaModel tableModel = new TablaEntregaIndumentariaModel();
    private ArrayList<Operario> operarios = null;
    
    private TablaDetalleEntregaIndumentariaModel detalleTableModel = new TablaDetalleEntregaIndumentariaModel();
    private DefaultComboBoxModel comboOperarioModel = new DefaultComboBoxModel();
    private ArrayList<EPP> epps = new ArrayList<EPP>();
}
