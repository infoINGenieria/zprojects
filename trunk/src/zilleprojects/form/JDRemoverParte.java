/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDRemoverParte.java
 *
 * Created on 24/11/2011, 23:56:50
 */
package zilleprojects.form;

import DAO.EquiposDAO;
import DAO.EstacionServicioDAO;
import DAO.FuncionDAO;
import DAO.ObrasDAO;
import DAO.OperarioDAO;
import DAO.ParteDiarioDAO;
import Modelo.Equipos;
import Modelo.EstacionServicio;
import Modelo.Funcion;
import Modelo.Materiales;
import Modelo.Obras;
import Modelo.Operario;
import Modelo.ParteDiario;
import Modelo.Registro;
import Modelo.RegistroEquipo;
import Utils.Permisos;
import Vista.OpcionPanel;
import Vista.PanelAzul;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import zilleprojects.ZilleProjectsApp;

/**
 *
 * @author matuu
 */
public class JDRemoverParte extends javax.swing.JDialog {

    Image icono = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/zilleprojects/resources/icono.png"));

    /** Creates new form JDRemoverParte */
    public JDRemoverParte(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setIconImage(icono);
        chooserFecha.setDate(new Date());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new PanelAzul();
        jPanel2 = new javax.swing.JPanel();
        checkFecha = new javax.swing.JCheckBox();
        chooserFecha = new com.toedter.calendar.JDateChooser();
        checkObra = new javax.swing.JCheckBox();
        comboObra = new javax.swing.JComboBox();
        checkEmpleado = new javax.swing.JCheckBox();
        comboEmpleados = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        queryNumero = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDePartes = new javax.swing.JList();
        SalirBotonGestionPartes = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        alertasTexto = new javax.swing.JLabel();
        modificarParteBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(JDRemoverParte.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(566, 404));
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel1.setName("jPanel1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);

        checkFecha.setSelected(true);
        checkFecha.setText(resourceMap.getString("checkFecha.text")); // NOI18N
        checkFecha.setName("checkFecha"); // NOI18N
        checkFecha.setOpaque(false);
        checkFecha.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkFechaItemStateChanged(evt);
            }
        });

        chooserFecha.setName("chooserFecha"); // NOI18N

        checkObra.setText(resourceMap.getString("checkObra.text")); // NOI18N
        checkObra.setName("checkObra"); // NOI18N
        checkObra.setOpaque(false);
        checkObra.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkObraItemStateChanged(evt);
            }
        });

        comboObra.setModel(obras
        );
        comboObra.setEnabled(false);
        comboObra.setName("comboObra"); // NOI18N

        checkEmpleado.setText(resourceMap.getString("checkEmpleado.text")); // NOI18N
        checkEmpleado.setName("checkEmpleado"); // NOI18N
        checkEmpleado.setOpaque(false);
        checkEmpleado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkEmpleadoItemStateChanged(evt);
            }
        });

        comboEmpleados.setModel(operarios);
        comboEmpleados.setEnabled(false);
        comboEmpleados.setName("comboEmpleados"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getActionMap(JDRemoverParte.class, this);
        jButton1.setAction(actionMap.get("buscarPartes")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        queryNumero.setText(resourceMap.getString("queryNumero.text")); // NOI18N
        queryNumero.setName("queryNumero"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkEmpleado)
                    .addComponent(checkObra, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboEmpleados, 0, 467, Short.MAX_VALUE)
                    .addComponent(comboObra, 0, 467, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(chooserFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(queryNumero, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(queryNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(chooserFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkEmpleado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboObra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkObra, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listaDePartes.setModel(partesModel);
        listaDePartes.setName("listaDePartes"); // NOI18N
        listaDePartes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaDePartesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaDePartes);

        SalirBotonGestionPartes.setIcon(resourceMap.getIcon("SalirBotonGestionPartes.icon")); // NOI18N
        SalirBotonGestionPartes.setText(resourceMap.getString("SalirBotonGestionPartes.text")); // NOI18N
        SalirBotonGestionPartes.setName("SalirBotonGestionPartes"); // NOI18N
        SalirBotonGestionPartes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBotonGestionPartesActionPerformed(evt);
            }
        });

        Eliminar.setAction(actionMap.get("eliminarParteDiario")); // NOI18N
        Eliminar.setIcon(resourceMap.getIcon("Eliminar.icon")); // NOI18N
        Eliminar.setText(resourceMap.getString("Eliminar.text")); // NOI18N
        Eliminar.setName("Eliminar"); // NOI18N

        alertasTexto.setForeground(resourceMap.getColor("alertasTexto.foreground")); // NOI18N
        alertasTexto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        alertasTexto.setText(resourceMap.getString("alertasTexto.text")); // NOI18N
        alertasTexto.setName("alertasTexto"); // NOI18N

        modificarParteBoton.setAction(actionMap.get("mostrarGestionarParte")); // NOI18N
        modificarParteBoton.setIcon(resourceMap.getIcon("modificarParteBoton.icon")); // NOI18N
        modificarParteBoton.setText(resourceMap.getString("modificarParteBoton.text")); // NOI18N
        modificarParteBoton.setName("modificarParteBoton"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(alertasTexto, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(modificarParteBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Eliminar)
                        .addGap(12, 12, 12)
                        .addComponent(SalirBotonGestionPartes)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Eliminar, SalirBotonGestionPartes, modificarParteBoton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(alertasTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SalirBotonGestionPartes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Eliminar)
                        .addComponent(modificarParteBoton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Eliminar, SalirBotonGestionPartes, modificarParteBoton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void checkFechaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkFechaItemStateChanged
    if (checkFecha.isSelected()) {
        chooserFecha.setEnabled(true);
    } else {
        chooserFecha.setEnabled(false);
    }
}//GEN-LAST:event_checkFechaItemStateChanged

private void checkEmpleadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkEmpleadoItemStateChanged
    if (checkEmpleado.isSelected()) {
        comboEmpleados.setEnabled(true);
    } else {
        comboEmpleados.setEnabled(false);
    }
}//GEN-LAST:event_checkEmpleadoItemStateChanged

private void checkObraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkObraItemStateChanged
    if (checkObra.isSelected()) {
        comboObra.setEnabled(true);
    } else {
        comboObra.setEnabled(false);
    }
}//GEN-LAST:event_checkObraItemStateChanged

private void SalirBotonGestionPartesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBotonGestionPartesActionPerformed
    dispose();
}//GEN-LAST:event_SalirBotonGestionPartesActionPerformed

    private void listaDePartesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaDePartesValueChanged
        ParteDiario pd = (ParteDiario) listaDePartes.getSelectedValue();
        if (pd != null) {
            if (pd.getIdSituacion() == 1) {
                modificarParteBoton.setEnabled(true);
            } else {
                modificarParteBoton.setEnabled(false);
            }
        }
    }//GEN-LAST:event_listaDePartesValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDRemoverParte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDRemoverParte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDRemoverParte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDRemoverParte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDRemoverParte dialog = new JDRemoverParte(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Action
    public Task buscarPartes() {
        alertasTexto.setText("");
        if (!queryNumero.getText().isEmpty()) {
            opcion=10;
        } else {
            opcion = 0;
            if (checkFecha.isSelected()) {
                opcion += 1;
                if (chooserFecha.getDate() == null) {
                    alertasTexto.setText("Seleccione un fecha");
                    return null;
                }
            }
            if (checkEmpleado.isSelected()) {
                opcion += 2;
            }
            if (checkObra.isSelected()) {
                opcion += 4;
            }
        }
        return new BuscarPartesTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class BuscarPartesTask extends org.jdesktop.application.Task<Object, Void> {

        String q1, q2, q3;
        ParteDiario pd = new ParteDiario();
        ArrayList<ParteDiario> partes = new ArrayList<ParteDiario>();

        BuscarPartesTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to EliminarParteDiarioTask fields, here.
            super(app);
            switch (opcion) {
                case 1:
                    q1 = pd.getFecha2DB(chooserFecha.getDate());
                    break;
                case 2:
                    q1 = ((Operario) comboEmpleados.getSelectedItem()).getId() + "";
                    break;
                case 3:
                    q1 = pd.getFecha2DB(chooserFecha.getDate());
                    q2 = ((Operario) comboEmpleados.getSelectedItem()).getId() + "";
                    break;
                case 4:
                    q1 = ((Obras) comboObra.getSelectedItem()).getId() + "";
                    break;
                case 5:
                    q1 = pd.getFecha2DB(chooserFecha.getDate());
                    q2 = ((Obras) comboObra.getSelectedItem()).getId() + "";
                    break;
                case 6:
                    q1 = ((Operario) comboEmpleados.getSelectedItem()).getId() + "";
                    q2 = ((Obras) comboObra.getSelectedItem()).getId() + "";
                    break;
                case 7:
                    q1 = pd.getFecha2DB(chooserFecha.getDate());
                    q3 = ((Operario) comboEmpleados.getSelectedItem()).getId() + "";
                    q2 = ((Obras) comboObra.getSelectedItem()).getId() + "";
                    break;
                case 10:
                    q1 = queryNumero.getText();
            }
        }

        @Override
        protected Object doInBackground() {

            ParteDiarioDAO pdao = new ParteDiarioDAO();
            pdao.conectar();
            if (opcion == 1 | opcion == 2 || opcion == 4) {
                partes = pdao.buscar1(opcion, q1);
            }
            if (opcion == 3 | opcion == 5 || opcion == 6) {
                partes = pdao.buscar2(opcion, q1, q2);
            }
            if (opcion == 7) {
                partes = pdao.buscar3(opcion, q1, q2, q3);
            }
            if(opcion == 10){
                partes = pdao.buscarNumero(q1);
            }
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            partesModel.removeAllElements();
            if (!partes.isEmpty()) {
                listaDePartes.setEnabled(true);
                for (int i = 0; i < partes.size(); i++) {
                    partesModel.addElement((ParteDiario) partes.get(i));
                }
            } else {
                listaDePartes.setEnabled(false);
                partesModel.addElement("Sin resultados");
            }
        }
    }

    @Action
    public Task eliminarParteDiario() {
        if(!Permisos.verificarCredenciales("Administrador")) return null;
        if (OpcionPanel.NO_OPTION == OpcionPanel.showConfirmDialog(this, "¿Realmente desea eliminar este parte diario\n"
                + "y todos los registros relacionados?\n"
                + "(Horarios, Datos de equipo, materiales)", "¿Está seguro/a?", OpcionPanel.YES_NO_OPTION)) {
            return null;
        }
        if (listaDePartes.getSelectedValues().length== 0){
            alertasTexto.setText("Debe seleccionar al menos un parte diario.");
            return null;
        }
        return new EliminarParteDiarioTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class EliminarParteDiarioTask extends org.jdesktop.application.Task<Object, Void> {

        boolean[] array_result; 
        int cantidadSelec = 0;
        //ParteDiario pd;
        ArrayList<ParteDiario> partes= new ArrayList<ParteDiario>();

        EliminarParteDiarioTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to EliminarParteDiarioTask fields, here.
            super(app);
            for(Object p:  listaDePartes.getSelectedValues()){
                partes.add((ParteDiario) p);
            }
            cantidadSelec = listaDePartes.getSelectedValues().length;
            array_result = new boolean[cantidadSelec];
            alertasTexto.setText(null);
        }

        @Override
        protected Object doInBackground() {
            ParteDiarioDAO pdao = new ParteDiarioDAO();
            pdao.conectar();
            int i = 0;
            for(ParteDiario pd: partes){
                array_result[i] = pdao.eliminar(pd);
                i++;
            }
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            int exitos = 0;
            int fracazos = 0;
            for(int i = 0; i < cantidadSelec; i++){
                            
                if(array_result[i]){
                    partesModel.removeElement(partes.get(i));
                    exitos++;
                }else{
                    fracazos++;   
                }
            }
            String msgResultado="Resultados de la eliminación:";
            String titulo = "";
            int tipoMensaje=0;
            if(exitos!=0){
                msgResultado+="\n - "+exitos+" parte diarios eliminados.";
                tipoMensaje = OpcionPanel.INFORMATION_MESSAGE;
                titulo = "RESULTADOS";
            }
            if(fracazos!=0){
                msgResultado+= "\n - "+fracazos+" parte diarios seleccionados NO fueron eliminados.";
                tipoMensaje = OpcionPanel.INFORMATION_MESSAGE;
                titulo = "RESULTADOS";
            }
            if(exitos==0 && fracazos == 0){
                tipoMensaje = OpcionPanel.ERROR;
                msgResultado+= "\n Ocurrió un error. Intente nuevamente.";
            }
            OpcionPanel.showMessageDialog(null, msgResultado, titulo, tipoMensaje);
            
        }
    }

    @Action
    public Task mostrarGestionarParte() {
        if (listaDePartes.getSelectedValue() == null) {
            return null;
        }


        return new mostrarGestionarParteTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    /*
    
     */
    private class mostrarGestionarParteTask extends org.jdesktop.application.Task<Object, Void> {

        ParteDiario pd;
        Operario op = new Operario();
        ArrayList<Funcion> fcs = new ArrayList<Funcion>();
        Obras ob = new Obras();
        Equipos eq = new Equipos();
        RegistroEquipo re = new RegistroEquipo();
        Registro r = new Registro();
        ArrayList<Materiales> mat = new ArrayList<Materiales>();
        ArrayList<EstacionServicio> estServicio = new ArrayList<EstacionServicio>();

        mostrarGestionarParteTask(org.jdesktop.application.Application app) {

            super(app);
            pd = (ParteDiario) listaDePartes.getSelectedValue();
        }

        @Override
        protected Object doInBackground() {
            FuncionDAO fdao = new FuncionDAO();
            OperarioDAO odao = new OperarioDAO();
            ObrasDAO obrasDAO = new ObrasDAO();
            EquiposDAO edao = new EquiposDAO();
            ParteDiarioDAO parteDao = new ParteDiarioDAO();
            EstacionServicioDAO esDAO = new EstacionServicioDAO();
            parteDao.conectar();
            fdao.conectar();
            odao.conectar();
            obrasDAO.conectar();
            edao.conectar();
            esDAO.conectar();
            
            fcs = fdao.cargarTodos();
            estServicio = esDAO.cargarTodos2Combo();
            op = odao.buscar(pd.getIdOperario());
            ob = obrasDAO.findById(pd.getIdObra());

            r = parteDao.traerRegistro(pd.getIdHorario());
            re = parteDao.traerRegistroEquipo(pd.getIdEquipo());
            eq = edao.findById(re.getIdEquipo());
            mat = parteDao.traerArrayMateriales(re.getId());
            return null;
        }

        @Override
        protected void succeeded(Object result) {
            DefaultComboBoxModel aux = new DefaultComboBoxModel();
            if (!fcs.isEmpty()) {
                for (int i = 0; i < fcs.size(); i++) {
                    aux.addElement(fcs.get(i));
                }
            }
             DefaultComboBoxModel estSrv = new DefaultComboBoxModel();
            if(!estServicio.isEmpty()){
                for(EstacionServicio es: estServicio){
                    estSrv.addElement(es);
                }
            }

            JDGestionarParte.CargarTodo(aux, pd, op, fcs, ob, eq, re, r, mat, estSrv);
            JFrame mainFrame = ZilleProjectsApp.getApplication().getMainFrame();
            gestionarParte = new JDGestionarParte(mainFrame, true);
            gestionarParte.setLocationRelativeTo(checkFecha);
            //gestionarParte.setSize(1006, 529);

            ZilleProjectsApp.getApplication().show(gestionarParte);
            partesModel.clear();

        }
    }

    public void restablecerDialog() {
        partesModel.removeAllElements();
        checkFecha.setSelected(true);
        checkEmpleado.setSelected(false);
        checkObra.setSelected(false);
        chooserFecha.setDate(new Date());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton SalirBotonGestionPartes;
    private javax.swing.JLabel alertasTexto;
    private javax.swing.JCheckBox checkEmpleado;
    private javax.swing.JCheckBox checkFecha;
    private javax.swing.JCheckBox checkObra;
    private com.toedter.calendar.JDateChooser chooserFecha;
    private javax.swing.JComboBox comboEmpleados;
    private javax.swing.JComboBox comboObra;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listaDePartes;
    private javax.swing.JButton modificarParteBoton;
    private javax.swing.JTextField queryNumero;
    // End of variables declaration//GEN-END:variables
    public static DefaultComboBoxModel obras = new DefaultComboBoxModel();
    public static DefaultComboBoxModel operarios = new DefaultComboBoxModel();
    public DefaultListModel partesModel = new DefaultListModel();
    private JDialog gestionarParte;
    int opcion = 0;
}