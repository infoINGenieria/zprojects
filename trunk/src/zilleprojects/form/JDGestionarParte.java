/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDGestionarParte.java
 *
 * Created on 06/12/2011, 19:45:46
 */
package zilleprojects.form;

import DAO.EquiposDAO;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import DAO.FuncionDAO;
import DAO.ObrasDAO;
import DAO.OperarioDAO;
import DAO.ParteDiarioDAO;
import Modelo.Equipos;
import Modelo.EstacionServicio;
import Modelo.Funcion;
import Modelo.Materiales;
import Modelo.Obras;
import Modelo.Operario;
import Modelo.ParteDiario;
import Modelo.Perfiles;
import Modelo.Registro;
import Modelo.RegistroEquipo;
import Modelo.TablaDatosTransporte;
import Modelo.TablaHorarioIngresoModel;
import Utils.EditorDeCeldasString;
import Vista.OpcionPanel;
import Vista.PanelAzul;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author matuu
 */
public class JDGestionarParte extends javax.swing.JDialog {

    /** Creates new form JDGestionarParte */
    public JDGestionarParte(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setConfiguracionObra();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datosTransporteDialog = new javax.swing.JDialog();
        panelAzul2 = new PanelAzul();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaTransporte = new javax.swing.JTable();
        cerrarInfoTransporte = new javax.swing.JButton();
        aceptarInfoTransporte = new javax.swing.JButton();
        eliminarMateriales = new javax.swing.JButton();
        buscarEmpleado = new javax.swing.JDialog();
        jPanel8 = new PanelAzul();
        jPanel9 = new javax.swing.JPanel();
        query1 = new javax.swing.JTextField();
        botonQuery = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaEmpleados = new javax.swing.JList();
        jPanel15 = new javax.swing.JPanel();
        selectRow = new javax.swing.JButton();
        exitDialog = new javax.swing.JButton();
        buscarEquipo = new javax.swing.JDialog();
        jPanel10 = new PanelAzul();
        jPanel11 = new javax.swing.JPanel();
        queryEq = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        listaEquipo = new javax.swing.JList();
        botonQueryEq = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        selectEquipo = new javax.swing.JButton();
        exitDialogEq = new javax.swing.JButton();
        selectObraDialog = new javax.swing.JDialog();
        jPanel12 = new PanelAzul();
        jPanel13 = new javax.swing.JPanel();
        selectObraButton = new javax.swing.JButton();
        cerrarBusquedaObra = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listaDeObras = new javax.swing.JList();
        jPanel1 = new PanelAzul();
        generalPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        botonBuscarEmpleadoMostrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        fechaParte = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        numPre = new javax.swing.JTextField();
        numPro = new javax.swing.JTextField();
        multifuncionCheck = new javax.swing.JCheckBox();
        lblOperario = new javax.swing.JLabel();
        lblObra = new javax.swing.JLabel();
        comboFuncion = new javax.swing.JComboBox();
        selectObra = new javax.swing.JButton();
        isDesarraigo = new javax.swing.JCheckBox();
        horarioPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHorario = new javax.swing.JTable();
        cerrarParteBoton = new javax.swing.JButton();
        guardarParteBoton = new javax.swing.JButton();
        equipoPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        inicialHorometroText = new javax.swing.JTextField();
        finalHorometroText = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        inicialOdometroText = new javax.swing.JTextField();
        finalOdometroText = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        estacionesCombo = new javax.swing.JComboBox();
        cantidadLitrosText = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tareaAsignadaText = new javax.swing.JTextArea();
        isTransporte = new javax.swing.JCheckBox();
        cargarDatosTransporte = new javax.swing.JButton();
        botonBuscarEquipoMostrar = new javax.swing.JButton();
        lblEquipo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        observacionesText = new javax.swing.JTextArea();
        outText = new javax.swing.JLabel();

        datosTransporteDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(JDGestionarParte.class);
        datosTransporteDialog.setTitle(resourceMap.getString("datosTransporteDialog.title")); // NOI18N
        datosTransporteDialog.setMinimumSize(new java.awt.Dimension(625, 222));
        datosTransporteDialog.setModal(true);
        datosTransporteDialog.setName("datosTransporteDialog"); // NOI18N
        datosTransporteDialog.setUndecorated(true);

        panelAzul2.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("panelAzul2.border.lineColor"), 1, true)); // NOI18N
        panelAzul2.setName("panelAzul2"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        tablaTransporte.setModel(tdt);
        tablaTransporte.setName("tablaTransporte"); // NOI18N
        jScrollPane4.setViewportView(tablaTransporte);

        cerrarInfoTransporte.setIcon(resourceMap.getIcon("cerrarInfoTransporte.icon")); // NOI18N
        cerrarInfoTransporte.setText(resourceMap.getString("cerrarInfoTransporte.text")); // NOI18N
        cerrarInfoTransporte.setName("cerrarInfoTransporte"); // NOI18N
        cerrarInfoTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarInfoTransporteActionPerformed(evt);
            }
        });

        aceptarInfoTransporte.setIcon(resourceMap.getIcon("aceptarInfoTransporte.icon")); // NOI18N
        aceptarInfoTransporte.setText(resourceMap.getString("aceptarInfoTransporte.text")); // NOI18N
        aceptarInfoTransporte.setName("aceptarInfoTransporte"); // NOI18N
        aceptarInfoTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarInfoTransporteActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getActionMap(JDGestionarParte.class, this);
        eliminarMateriales.setAction(actionMap.get("eliminarMateriales")); // NOI18N
        eliminarMateriales.setIcon(resourceMap.getIcon("eliminarMateriales.icon")); // NOI18N
        eliminarMateriales.setText(resourceMap.getString("eliminarMateriales.text")); // NOI18N
        eliminarMateriales.setName("eliminarMateriales"); // NOI18N

        javax.swing.GroupLayout panelAzul2Layout = new javax.swing.GroupLayout(panelAzul2);
        panelAzul2.setLayout(panelAzul2Layout);
        panelAzul2Layout.setHorizontalGroup(
            panelAzul2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAzul2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAzul2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addGroup(panelAzul2Layout.createSequentialGroup()
                        .addComponent(eliminarMateriales)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aceptarInfoTransporte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cerrarInfoTransporte)))
                .addContainerGap())
        );
        panelAzul2Layout.setVerticalGroup(
            panelAzul2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAzul2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAzul2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAzul2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cerrarInfoTransporte)
                        .addComponent(aceptarInfoTransporte))
                    .addComponent(eliminarMateriales))
                .addContainerGap())
        );

        javax.swing.GroupLayout datosTransporteDialogLayout = new javax.swing.GroupLayout(datosTransporteDialog.getContentPane());
        datosTransporteDialog.getContentPane().setLayout(datosTransporteDialogLayout);
        datosTransporteDialogLayout.setHorizontalGroup(
            datosTransporteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAzul2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        datosTransporteDialogLayout.setVerticalGroup(
            datosTransporteDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAzul2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buscarEmpleado.setTitle(resourceMap.getString("buscarEmpleado.title")); // NOI18N
        buscarEmpleado.setLocationByPlatform(true);
        buscarEmpleado.setMinimumSize(new java.awt.Dimension(500, 300));
        buscarEmpleado.setModal(true);
        buscarEmpleado.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        buscarEmpleado.setName("buscarEmpleado"); // NOI18N
        buscarEmpleado.setResizable(false);
        buscarEmpleado.setUndecorated(true);

        jPanel8.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel8.border.lineColor"), 1, true)); // NOI18N
        jPanel8.setName("jPanel8"); // NOI18N

        jPanel9.setName("jPanel9"); // NOI18N
        jPanel9.setOpaque(false);

        query1.setName("query1"); // NOI18N
        query1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                query1FocusGained(evt);
            }
        });

        botonQuery.setAction(actionMap.get("buscarEmpleado")); // NOI18N
        botonQuery.setIcon(resourceMap.getIcon("botonQuery.icon")); // NOI18N
        botonQuery.setToolTipText(resourceMap.getString("botonQuery.toolTipText")); // NOI18N
        botonQuery.setName("botonQuery"); // NOI18N

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        listaEmpleados.setModel(listEmpl);
        listaEmpleados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaEmpleados.setName("listaEmpleados"); // NOI18N
        listaEmpleados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                listaEmpleadosFocusGained(evt);
            }
        });
        jScrollPane5.setViewportView(listaEmpleados);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(query1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(botonQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botonQuery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(query1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonQuery, query1});

        jPanel15.setName("jPanel15"); // NOI18N
        jPanel15.setLayout(new java.awt.GridLayout(1, 0));

        selectRow.setIcon(resourceMap.getIcon("selectRow.icon")); // NOI18N
        selectRow.setText(resourceMap.getString("selectRow.text")); // NOI18N
        selectRow.setName("selectRow"); // NOI18N
        selectRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectRowActionPerformed(evt);
            }
        });
        jPanel15.add(selectRow);

        exitDialog.setIcon(resourceMap.getIcon("exitDialog.icon")); // NOI18N
        exitDialog.setText(resourceMap.getString("exitDialog.text")); // NOI18N
        exitDialog.setName("exitDialog"); // NOI18N
        exitDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitDialogActionPerformed(evt);
            }
        });
        jPanel15.add(exitDialog);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel15, jPanel9});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout buscarEmpleadoLayout = new javax.swing.GroupLayout(buscarEmpleado.getContentPane());
        buscarEmpleado.getContentPane().setLayout(buscarEmpleadoLayout);
        buscarEmpleadoLayout.setHorizontalGroup(
            buscarEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        buscarEmpleadoLayout.setVerticalGroup(
            buscarEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buscarEquipo.setTitle(resourceMap.getString("buscarEquipo.title")); // NOI18N
        buscarEquipo.setLocationByPlatform(true);
        buscarEquipo.setMinimumSize(new java.awt.Dimension(450, 300));
        buscarEquipo.setModal(true);
        buscarEquipo.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        buscarEquipo.setName("buscarEquipo"); // NOI18N
        buscarEquipo.setResizable(false);
        buscarEquipo.setUndecorated(true);

        jPanel10.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel10.border.lineColor"), 1, true)); // NOI18N
        jPanel10.setName("jPanel10"); // NOI18N

        jPanel11.setName("jPanel11"); // NOI18N
        jPanel11.setOpaque(false);

        queryEq.setName("queryEq"); // NOI18N
        queryEq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                queryEqFocusGained(evt);
            }
        });

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        listaEquipo.setModel(listEq);
        listaEquipo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaEquipo.setName("listaEquipo"); // NOI18N
        listaEquipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                listaEquipoFocusGained(evt);
            }
        });
        jScrollPane6.setViewportView(listaEquipo);

        botonQueryEq.setAction(actionMap.get("buscarEquipos")); // NOI18N
        botonQueryEq.setIcon(resourceMap.getIcon("botonQueryEq.icon")); // NOI18N
        botonQueryEq.setToolTipText(resourceMap.getString("botonQueryEq.toolTipText")); // NOI18N
        botonQueryEq.setName("botonQueryEq"); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(queryEq, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonQueryEq, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonQueryEq, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(queryEq, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonQueryEq, queryEq});

        jPanel14.setName("jPanel14"); // NOI18N
        jPanel14.setLayout(new java.awt.GridLayout(1, 0));

        selectEquipo.setIcon(resourceMap.getIcon("selectEquipo.icon")); // NOI18N
        selectEquipo.setText(resourceMap.getString("selectEquipo.text")); // NOI18N
        selectEquipo.setName("selectEquipo"); // NOI18N
        selectEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectEquipoActionPerformed(evt);
            }
        });
        jPanel14.add(selectEquipo);

        exitDialogEq.setIcon(resourceMap.getIcon("exitDialogEq.icon")); // NOI18N
        exitDialogEq.setText(resourceMap.getString("exitDialogEq.text")); // NOI18N
        exitDialogEq.setName("exitDialogEq"); // NOI18N
        exitDialogEq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitDialogEqActionPerformed(evt);
            }
        });
        jPanel14.add(exitDialogEq);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel11, jPanel14});

        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout buscarEquipoLayout = new javax.swing.GroupLayout(buscarEquipo.getContentPane());
        buscarEquipo.getContentPane().setLayout(buscarEquipoLayout);
        buscarEquipoLayout.setHorizontalGroup(
            buscarEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        buscarEquipoLayout.setVerticalGroup(
            buscarEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        selectObraDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        selectObraDialog.setTitle(resourceMap.getString("selectObraDialog.title")); // NOI18N
        selectObraDialog.setAlwaysOnTop(true);
        selectObraDialog.setMinimumSize(new java.awt.Dimension(350, 290));
        selectObraDialog.setModal(true);
        selectObraDialog.setName("selectObraDialog"); // NOI18N
        selectObraDialog.setResizable(false);
        selectObraDialog.setUndecorated(true);

        jPanel12.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel12.border.lineColor"), 1, true)); // NOI18N
        jPanel12.setMinimumSize(new java.awt.Dimension(350, 290));
        jPanel12.setName("jPanel12"); // NOI18N

        jPanel13.setName("jPanel13"); // NOI18N
        jPanel13.setLayout(new java.awt.GridLayout(1, 0, 10, 10));

        selectObraButton.setAction(actionMap.get("seleccionarObra")); // NOI18N
        selectObraButton.setIcon(resourceMap.getIcon("selectObraButton.icon")); // NOI18N
        selectObraButton.setText(resourceMap.getString("selectObraButton.text")); // NOI18N
        selectObraButton.setName("selectObraButton"); // NOI18N
        jPanel13.add(selectObraButton);

        cerrarBusquedaObra.setIcon(resourceMap.getIcon("cerrarBusquedaObra.icon")); // NOI18N
        cerrarBusquedaObra.setText(resourceMap.getString("cerrarBusquedaObra.text")); // NOI18N
        cerrarBusquedaObra.setName("cerrarBusquedaObra"); // NOI18N
        cerrarBusquedaObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarBusquedaObraActionPerformed(evt);
            }
        });
        jPanel13.add(cerrarBusquedaObra);

        jPanel16.setName("jPanel16"); // NOI18N

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        listaDeObras.setModel(listObras);
        listaDeObras.setName("listaDeObras"); // NOI18N
        jScrollPane7.setViewportView(listaDeObras);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel13, jPanel16});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout selectObraDialogLayout = new javax.swing.GroupLayout(selectObraDialog.getContentPane());
        selectObraDialog.getContentPane().setLayout(selectObraDialogLayout);
        selectObraDialogLayout.setHorizontalGroup(
            selectObraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 348, Short.MAX_VALUE)
        );
        selectObraDialogLayout.setVerticalGroup(
            selectObraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 266, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1024, 600));
        setModal(true);
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setMinimumSize(new java.awt.Dimension(1024, 600));
        jPanel1.setName("jPanel1"); // NOI18N

        generalPanel.setName("generalPanel"); // NOI18N
        generalPanel.setOpaque(false);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        botonBuscarEmpleadoMostrar.setAction(actionMap.get("mostrarBusquedaEmpleado")); // NOI18N
        botonBuscarEmpleadoMostrar.setIcon(resourceMap.getIcon("botonBuscarEmpleadoMostrar.icon")); // NOI18N
        botonBuscarEmpleadoMostrar.setName("botonBuscarEmpleadoMostrar"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        fechaParte.setName("fechaParte"); // NOI18N
        fechaParte.setOpaque(false);
        fechaParte.setDate(new Date(System.currentTimeMillis()));

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jButton2.setAction(actionMap.get("agregarFuncion")); // NOI18N
        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        numPre.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        numPre.setName("numPre"); // NOI18N

        numPro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        numPro.setName("numPro"); // NOI18N

        multifuncionCheck.setText(resourceMap.getString("multifuncionCheck.text")); // NOI18N
        multifuncionCheck.setName("multifuncionCheck"); // NOI18N

        lblOperario.setFont(resourceMap.getFont("lblOperario.font")); // NOI18N
        lblOperario.setText(resourceMap.getString("lblOperario.text")); // NOI18N
        lblOperario.setName("lblOperario"); // NOI18N

        lblObra.setFont(resourceMap.getFont("lblObra.font")); // NOI18N
        lblObra.setText(resourceMap.getString("lblObra.text")); // NOI18N
        lblObra.setMaximumSize(new java.awt.Dimension(300, 29));
        lblObra.setName("lblObra"); // NOI18N

        comboFuncion.setModel(funciones);
        comboFuncion.setName("comboFuncion"); // NOI18N
        comboFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFuncionActionPerformed(evt);
            }
        });

        selectObra.setAction(actionMap.get("SeleccionarNuevaObra")); // NOI18N
        selectObra.setIcon(resourceMap.getIcon("selectObra.icon")); // NOI18N
        selectObra.setText(resourceMap.getString("selectObra.text")); // NOI18N
        selectObra.setName("selectObra"); // NOI18N

        isDesarraigo.setText(resourceMap.getString("isDesarraigo.text")); // NOI18N
        isDesarraigo.setName("isDesarraigo"); // NOI18N

        javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
        generalPanel.setLayout(generalPanelLayout);
        generalPanelLayout.setHorizontalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOperario, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonBuscarEmpleadoMostrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fechaParte, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multifuncionCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6)
                        .addComponent(numPre, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numPro, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboFuncion, 0, 268, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isDesarraigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblObra, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectObra)))
                .addContainerGap())
        );
        generalPanelLayout.setVerticalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generalPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(lblOperario, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscarEmpleadoMostrar)
                    .addComponent(jLabel2)
                    .addComponent(fechaParte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multifuncionCheck)
                    .addComponent(jLabel5)
                    .addComponent(numPre, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numPro, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(comboFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(isDesarraigo)
                    .addComponent(lblObra, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(selectObra)
                    .addComponent(jLabel4))
                .addGap(6, 6, 6))
        );

        horarioPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(-16777216,true), 1, true), resourceMap.getString("horarioPanel.border.title"))); // NOI18N
        horarioPanel.setName("horarioPanel"); // NOI18N
        horarioPanel.setOpaque(false);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaHorario.setModel(tablaModel);
        tablaHorario.setName("tablaHorario"); // NOI18N
        establecerEditorDeString(tablaHorario);
        tablaHorario.setRowHeight(25);
        tablaHorario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tablaHorarioFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tablaHorario);

        javax.swing.GroupLayout horarioPanelLayout = new javax.swing.GroupLayout(horarioPanel);
        horarioPanel.setLayout(horarioPanelLayout);
        horarioPanelLayout.setHorizontalGroup(
            horarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(horarioPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
                .addContainerGap())
        );
        horarioPanelLayout.setVerticalGroup(
            horarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(horarioPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        cerrarParteBoton.setIcon(resourceMap.getIcon("cerrarParteBoton.icon")); // NOI18N
        cerrarParteBoton.setText(resourceMap.getString("cerrarParteBoton.text")); // NOI18N
        cerrarParteBoton.setName("cerrarParteBoton"); // NOI18N
        cerrarParteBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarParteBotonActionPerformed(evt);
            }
        });

        guardarParteBoton.setAction(actionMap.get("guardarParteDiario")); // NOI18N
        guardarParteBoton.setIcon(resourceMap.getIcon("guardarParteBoton.icon")); // NOI18N
        guardarParteBoton.setText(resourceMap.getString("guardarParteBoton.text")); // NOI18N
        guardarParteBoton.setName("guardarParteBoton"); // NOI18N

        equipoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(-16777216,true), 1, true), resourceMap.getString("equipoPanel.border.title"))); // NOI18N
        equipoPanel.setName("equipoPanel"); // NOI18N
        equipoPanel.setOpaque(false);

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel4.border.title"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.GridLayout(2, 2));

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        jPanel4.add(jLabel9);

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        jPanel4.add(jLabel10);

        inicialHorometroText.setName("inicialHorometroText"); // NOI18N
        jPanel4.add(inicialHorometroText);

        finalHorometroText.setName("finalHorometroText"); // NOI18N
        jPanel4.add(finalHorometroText);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel5.border.title"))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setOpaque(false);
        jPanel5.setLayout(new java.awt.GridLayout(2, 2));

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        jPanel5.add(jLabel11);

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        jPanel5.add(jLabel12);

        inicialOdometroText.setName("inicialOdometroText"); // NOI18N
        jPanel5.add(inicialOdometroText);

        finalOdometroText.setName("finalOdometroText"); // NOI18N
        jPanel5.add(finalOdometroText);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel6.border.title"))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setOpaque(false);
        jPanel6.setLayout(new java.awt.GridLayout(2, 2));

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        jPanel6.add(jLabel8);

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        jPanel6.add(jLabel7);

        estacionesCombo.setModel(estaciones);
        estacionesCombo.setMinimumSize(new java.awt.Dimension(100, 31));
        estacionesCombo.setName("estacionesCombo"); // NOI18N
        estacionesCombo.setOpaque(false);
        jPanel6.add(estacionesCombo);

        cantidadLitrosText.setName("cantidadLitrosText"); // NOI18N
        jPanel6.add(cantidadLitrosText);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel7.border.title"))); // NOI18N
        jPanel7.setName("jPanel7"); // NOI18N
        jPanel7.setOpaque(false);
        jPanel7.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        tareaAsignadaText.setColumns(15);
        tareaAsignadaText.setRows(2);
        tareaAsignadaText.setMinimumSize(new java.awt.Dimension(0, 12));
        tareaAsignadaText.setName("tareaAsignadaText"); // NOI18N
        jScrollPane3.setViewportView(tareaAsignadaText);

        jPanel7.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        isTransporte.setText(resourceMap.getString("isTransporte.text")); // NOI18N
        isTransporte.setBorder(null);
        isTransporte.setName("isTransporte"); // NOI18N

        cargarDatosTransporte.setText(resourceMap.getString("cargarDatosTransporte.text")); // NOI18N
        cargarDatosTransporte.setName("cargarDatosTransporte"); // NOI18N
        cargarDatosTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarDatosTransporteActionPerformed(evt);
            }
        });

        botonBuscarEquipoMostrar.setAction(actionMap.get("mostrarBusquedaEquipo")); // NOI18N
        botonBuscarEquipoMostrar.setIcon(resourceMap.getIcon("botonBuscarEquipoMostrar.icon")); // NOI18N
        botonBuscarEquipoMostrar.setToolTipText(resourceMap.getString("botonBuscarEquipoMostrar.toolTipText")); // NOI18N
        botonBuscarEquipoMostrar.setName("botonBuscarEquipoMostrar"); // NOI18N

        lblEquipo.setFont(resourceMap.getFont("lblEquipo.font")); // NOI18N
        lblEquipo.setText(resourceMap.getString("lblEquipo.text")); // NOI18N
        lblEquipo.setName("lblEquipo"); // NOI18N

        javax.swing.GroupLayout equipoPanelLayout = new javax.swing.GroupLayout(equipoPanel);
        equipoPanel.setLayout(equipoPanelLayout);
        equipoPanelLayout.setHorizontalGroup(
            equipoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equipoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(equipoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(equipoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonBuscarEquipoMostrar)
                        .addGap(12, 12, 12)
                        .addComponent(isTransporte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cargarDatosTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(equipoPanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        equipoPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel4, jPanel5});

        equipoPanelLayout.setVerticalGroup(
            equipoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equipoPanelLayout.createSequentialGroup()
                .addGroup(equipoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(lblEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isTransporte)
                    .addComponent(cargarDatosTransporte)
                    .addComponent(botonBuscarEquipoMostrar))
                .addGap(7, 7, 7)
                .addGroup(equipoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        equipoPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel4, jPanel5, jPanel6, jPanel7});

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(-16777216,true), 1, true), resourceMap.getString("jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setOpaque(false);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        observacionesText.setColumns(20);
        observacionesText.setRows(3);
        observacionesText.setName("observacionesText"); // NOI18N
        jScrollPane2.setViewportView(observacionesText);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        outText.setForeground(resourceMap.getColor("outText.foreground")); // NOI18N
        outText.setName("outText"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(outText, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guardarParteBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cerrarParteBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(equipoPanel, javax.swing.GroupLayout.Alignment.LEADING, 0, 968, Short.MAX_VALUE)
                            .addComponent(generalPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(horarioPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(generalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horarioPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equipoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(outText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarParteBoton)
                    .addComponent(cerrarParteBoton))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 988, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaHorarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaHorarioFocusGained

        if (esp) {
            verificarFechaEspecial();
        }
        //System.out.print("Me fije en la fecha :p\n");
    }
	//GEN-LAST:event_tablaHorarioFocusGained
    private void cerrarParteBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarParteBotonActionPerformed
        tablaModel = new TablaHorarioIngresoModel();
        this.dispose();

}//GEN-LAST:event_cerrarParteBotonActionPerformed

    private void cargarDatosTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarDatosTransporteActionPerformed

        if (tdt.getRowCount() != 4) {
            tdt.addRegistro(new Materiales("CALCAREO"));
            tdt.addRegistro(new Materiales("ARENA"));
            tdt.addRegistro(new Materiales("AGUA"));
            tdt.addRegistro(new Materiales("OTROS"));
        }

        tablaTransporte.setModel(tdt);
        datosTransporteDialog.setSize(625, 222);
        datosTransporteDialog.setLocationRelativeTo(this);
        datosTransporteDialog.setVisible(true);

        tablaTransporte.getColumnModel().getColumn(0).setMaxWidth(40);
        tablaTransporte.getColumnModel().getColumn(5).setMinWidth(150);
    }//GEN-LAST:event_cargarDatosTransporteActionPerformed

    private void cerrarInfoTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarInfoTransporteActionPerformed

        datosTransporteDialog.dispose();
    }//GEN-LAST:event_cerrarInfoTransporteActionPerformed

    private void aceptarInfoTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarInfoTransporteActionPerformed
        listMaterialesParteDiario = new ArrayList<Materiales>();
        for (int i = 0; i < tdt.getRowCount(); i++) {
            Materiales m = tdt.getFila(i);
            if (m.isOk()) {
                isTransporte.setSelected(true);
                listMaterialesParteDiario.add(m);
            }
        }

        datosTransporteDialog.dispose();

     }//GEN-LAST:event_aceptarInfoTransporteActionPerformed

    private void query1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_query1FocusGained
        buscarEmpleado.getRootPane().setDefaultButton(botonQuery);
    }//GEN-LAST:event_query1FocusGained

    private void listaEmpleadosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listaEmpleadosFocusGained

        buscarEmpleado.getRootPane().setDefaultButton(selectRow);

}//GEN-LAST:event_listaEmpleadosFocusGained

    private void exitDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitDialogActionPerformed

        buscarEmpleado.dispose();
        query1.setText("");
        listEmpl.removeAllElements();

     }//GEN-LAST:event_exitDialogActionPerformed

    private void selectRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectRowActionPerformed

        if (listEmpl.isEmpty() || listaEmpleados.isSelectionEmpty()) {
            //nothing         
        } else {
            operario = (Operario) listaEmpleados.getSelectedValue();
            lblOperario.setText(operario.toString());
            buscarEmpleado.dispose();
            query1.setText("");
            listEmpl.removeAllElements();
        }

     }//GEN-LAST:event_selectRowActionPerformed

        private void queryEqFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_queryEqFocusGained

            buscarEquipo.getRootPane().setDefaultButton(botonQueryEq);

     }//GEN-LAST:event_queryEqFocusGained

    private void listaEquipoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listaEquipoFocusGained

        buscarEquipo.getRootPane().setDefaultButton(selectEquipo);

     }//GEN-LAST:event_listaEquipoFocusGained

    private void exitDialogEqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitDialogEqActionPerformed

        buscarEquipo.dispose();
        queryEq.setText("");
        listEq.removeAllElements();

     }//GEN-LAST:event_exitDialogEqActionPerformed

    private void selectEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectEquipoActionPerformed

        if (listEq.isEmpty() || listaEquipo.isSelectionEmpty()) {
            //nothing
        } else {
            equipo = (Equipos) listaEquipo.getSelectedValue();
            if(equipo != null){
                lblEquipo.setText(equipo.toString());
            }else{
                lblEquipo.setText("Ninguno");
            }
            buscarEquipo.dispose();
            queryEq.setText("");
            listEq.removeAllElements();
        }


     }//GEN-LAST:event_selectEquipoActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (carga) {
            cargarLosDatos();
        }
    }//GEN-LAST:event_formWindowActivated

    private void comboFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFuncionActionPerformed
        outText.setText("");
        int func = operario.getFuncion();
        if (func != ((Funcion) comboFuncion.getSelectedItem()).getId() && !multifuncionCheck.isSelected()) {
            multifuncionCheck(1);
        }
        if (func == ((Funcion) comboFuncion.getSelectedItem()).getId() && multifuncionCheck.isSelected()) {
            multifuncionCheck(2);
        }
    }//GEN-LAST:event_comboFuncionActionPerformed

    private void cerrarBusquedaObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarBusquedaObraActionPerformed
        selectObraDialog.dispose();
    }//GEN-LAST:event_cerrarBusquedaObraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDGestionarParte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDGestionarParte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDGestionarParte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDGestionarParte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDGestionarParte dialog = new JDGestionarParte(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void setConfiguracionObra(){
        
        for (Component c: horarioPanel.getComponents()){
            c.setEnabled(obra.isTieneRegistro());
        }
        tablaHorario.setEnabled(obra.isTieneRegistro());
        if(obra.isTieneRegistro()) {
            if(tablaModel.getRowCount()== 0){
                tablaModel.addRegistro(new Registro());
            }
            tablaHorario.setModel(tablaModel);
        }
        comboFuncion.setEnabled(obra.isTieneRegistro());
        isDesarraigo.setEnabled(obra.isTieneRegistro());
        multifuncionCheck.setEnabled(obra.isTieneRegistro());
        for (Component c: equipoPanel.getComponents()){
            if(c instanceof javax.swing.JPanel){
                for(Component cc: ((javax.swing.JPanel) c).getComponents()){
                    cc.setEnabled(obra.isTieneEquipo());
                }
            }else{
                c.setEnabled(obra.isTieneEquipo());
            }
        }
        tareaAsignadaText.setEnabled(obra.isTieneEquipo());
        
    }

    private void establecerEditorDeString(JTable t) {
        final EditorDeCeldasString string = new EditorDeCeldasString(10);
        string.setHorizontalAlignment(EditorDeCeldasString.LEFT);
        DefaultCellEditor editorEnteros = new DefaultCellEditor(string) {

            @Override
            public Object getCellEditorValue() {
                return string.getValue();
            }
        };

        t.setDefaultEditor(String.class, editorEnteros);
    }

    private void multifuncionCheck(final int i) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                switch (i) {
                    case 1:
                        OpcionPanel.showMessageDialog(null, "Se activo la"
                                + " MULTIFUNCION para este parte diario.", "Multifunción", OpcionPanel.INFORMATION_MESSAGE);
                        multifuncionCheck.setSelected(true);
                        break;
                    case 2:
                        if (OpcionPanel.YES_OPTION
                                == OpcionPanel.showConfirmDialog(null, "Ha vuelto a seleccionar la función del empleado:\n"
                                + "¿Desactivar el tilde de multifunción?", "Multifunción", OpcionPanel.YES_NO_OPTION)) {
                            multifuncionCheck.setSelected(false);
                        }
                        break;
                }

            }
        });

    }

    @Action
    public Task buscarEmpleado() {
        if (query1.getText().isEmpty()) {
            return null;
        }
        return new BuscarEmpleadoTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private void verificarFechaEspecial() {
        System.out.println("Verificando fechas especiales");
        GregorianCalendar gc = new GregorianCalendar();
        gc.setTime(fechaParte.getDate());
        if (gc.get(Calendar.DAY_OF_WEEK) == Calendar.SATURDAY) {
            Registro r1 = tablaModel.getFila(0);
            r1.setEspecial(true);
            tablaModel.insertarFila(r1, 0);
        } else if (gc.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY) {
            Registro r1 = tablaModel.getFila(0);
            r1.setEspecial(true);
            tablaModel.insertarFila(r1, 0);
        } else {
            Registro r1 = tablaModel.getFila(0);
            r1.setEspecial(false);
            tablaModel.insertarFila(r1, 0);
        }
        esp = false;
    }

    private class BuscarEmpleadoTask extends org.jdesktop.application.Task<Object, Void> {

        ArrayList<Operario> opList = new ArrayList<Operario>();
        String query = query1.getText();

        BuscarEmpleadoTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to BuscarEmpleadoTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            OperarioDAO odao = new OperarioDAO();
            odao.conectar();
            opList = odao.buscar(query);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            listEmpl.removeAllElements();
            if (opList.isEmpty()) {
                listEmpl.addElement("Sin resultados");
                listaEmpleados.setEnabled(false);
            } else {
                for (int i = 0; i < opList.size(); i++) {
                    listEmpl.addElement((Operario) opList.get(i));
                }
                listaEmpleados.setEnabled(true);
            }
        }
    }

    @Action
    public void mostrarBusquedaEmpleado() {

        buscarEmpleado.setLocationRelativeTo(horarioPanel);
        buscarEmpleado.setVisible(true);
    }

    @Action
    public void mostrarBusquedaEquipo() {

        buscarEquipo.setLocationRelativeTo(botonBuscarEquipoMostrar);
        buscarEquipo.setVisible(true);
    }

    @Action
    public Task buscarEquipos() {
        if (queryEq.getText().isEmpty()) {
            return null;
        }
        return new BuscarEquiposTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class BuscarEquiposTask extends org.jdesktop.application.Task<Object, Void> {

        ArrayList<Equipos> eqList = new ArrayList<Equipos>();
        String query = queryEq.getText();

        BuscarEquiposTask(org.jdesktop.application.Application app) {
            
            super(app);
        }

        @Override
        protected Object doInBackground() {
            
            EquiposDAO edao = new EquiposDAO();
            edao.conectar();
            eqList = edao.buscarDIMA(query);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            listEq.removeAllElements();
            if (eqList.isEmpty()) {
                listEq.addElement("Sin resultados");
                listaEquipo.setEnabled(false);
            } else {
                for (int i = 0; i < eqList.size(); i++) {
                    listEq.addElement((Equipos) eqList.get(i));
                }
                listaEquipo.setEnabled(true);
            }
        }
    }

    @Action
    public Task agregarFuncion() {
        newFc = OpcionPanel.showInputDialog(this, "Función: ");
        if (newFc == null || newFc.isEmpty()) {
            return null;
        }
        return new AgregarFuncionTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class AgregarFuncionTask extends org.jdesktop.application.Task<Object, Void> {

        Funcion fun = new Funcion(newFc);
        int r = -1;

        AgregarFuncionTask(org.jdesktop.application.Application app) {
           
            super(app);
        }

        @Override
        protected Object doInBackground() {
           
            FuncionDAO fdao = new FuncionDAO();
            fdao.conectar();
            r = fdao.guardar(fun);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (r >= 0) {
                fun.setId(r);
                funciones.addElement(fun);
            } else {
                OpcionPanel.showMessageDialog(null, "Compruebe que ya no exista una \nfunción con ese nombre.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }

    public boolean horarioCompleto() {
        Registro aux = tablaModel.getFila(0);
        try {
            if (aux.getHs_salida().toString().isEmpty() || aux.getHs_llegada().toString().isEmpty()
                    || aux.getHs_inicio().toString().isEmpty() || aux.getHs_fin().toString().isEmpty()
                    || aux.getHs_ialmuerzo().toString().isEmpty() || aux.getHs_falmuerzo().toString().isEmpty()) {
                return false;
            }
        } catch (NullPointerException ex) {
            return false;
        }
        return true;
    }

    static public void CargarTodo(DefaultComboBoxModel f, ParteDiario pd,
            Operario op, ArrayList<Funcion> fcs, Obras ob, Equipos eq, RegistroEquipo re, Registro r,
            ArrayList<Materiales> mat, DefaultComboBoxModel estaciones) {
            JDGestionarParte.parteDiario = pd;
            JDGestionarParte.operario = op;
            JDGestionarParte.funcionesList = fcs;
            JDGestionarParte.estaciones = estaciones;
            JDGestionarParte.obra = ob;
            JDGestionarParte.funciones = f;
            if(ob.isTieneEquipo()){
                JDGestionarParte.equipo = eq;
                JDGestionarParte.registroEquipo = re;
                JDGestionarParte.listMaterialesParteDiario = mat;
            }
            if(ob.isTieneRegistro()){
                
                JDGestionarParte.registroHorario = r;
            }
    }

    private void cargarLosDatos() {
        lblOperario.setText(operario.toString());
        fechaParte.setDate(parteDiario.getFecha());      
        numPre.setText(parteDiario.getNumeroPre());
        numPro.setText(parteDiario.getNumeroPos());      
        lblObra.setText(obra.toString());
        observacionesText.setText(parteDiario.getObservaciones());
        
        if(obra.isTieneEquipo()){
            lblEquipo.setText(equipo.toString());
            finalHorometroText.setText(registroEquipo.getFinHoro());
            inicialHorometroText.setText(registroEquipo.getIniHoro());
            finalOdometroText.setText(registroEquipo.getFinOdo());
            inicialOdometroText.setText(registroEquipo.getIniOdo());
            cantidadLitrosText.setText(registroEquipo.getCantCombustible());
            estacionesCombo.setSelectedItem(new EstacionServicio(registroEquipo.getEstacionServicioID()));
            tareaAsignadaText.setText(registroEquipo.getTarea());
            isTransporte.setSelected(registroEquipo.isDatosCarga()); 
            tdt = new TablaDatosTransporte();
            for (int i = 0; i < listMaterialesParteDiario.size(); i++) {
                Materiales m = (Materiales) listMaterialesParteDiario.get(i);
                m.setOk(true);
                tdt.addRegistro((m));

            }
            for (int i = 0; i < 4 - listMaterialesParteDiario.size(); i++) {
                tdt.addRegistro(new Materiales());
            }
        }else{
            lblEquipo.setText("Ninguno");
        }
        
        if(obra.isTieneRegistro()){
            
            //tablaModel = new TablaHorarioIngresoModel();
            tablaModel.addRegistro(registroHorario);
            comboFuncion.setSelectedItem(new Funcion(parteDiario.getIdFuncion()));
            multifuncionCheck.setSelected(parteDiario.isMultifuncion());
            isDesarraigo.setSelected(parteDiario.isDesarraigo());
        }
        carga = false;
    }

    @Action
    public Task guardarParteDiario() {
        if (OpcionPanel.YES_OPTION == OpcionPanel.showConfirmDialog(this, "¿Desea guardar?", "Guardando...", OpcionPanel.YES_NO_OPTION)) {
            if (fechaParte.getDate() == null || numPre.getText().isEmpty() || numPro.getText().isEmpty()){
                OpcionPanel.showMessageDialog(this, "Falta completar algunos campos", "Datos imcompletos", OpcionPanel.ERROR_MESSAGE);
                return null;
                
            }
            if(obra.isTieneRegistro() && !horarioCompleto()){
                OpcionPanel.showMessageDialog(this, "Complete los horarios, son requeridos para la obra seleccionada", "Datos imcompletos", OpcionPanel.ERROR_MESSAGE);
                return null;  
            }
        } else {
            return null;
        }
        return new GuardarParteDiarioTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GuardarParteDiarioTask extends org.jdesktop.application.Task<Object, Void> {
        Registro reg = new Registro();
        ArrayList<Materiales> datosTr = new ArrayList<Materiales>();
        int r = -1;

        GuardarParteDiarioTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GuardarParteDiarioTask fields, here.
            super(app);
            perfil.obra = obra;
            parteDiario.setFecha(fechaParte.getDate());
            parteDiario.setIdOperario(operario.getId());
            parteDiario.setIdObra(obra.getId());
            parteDiario.setNumero(numPre.getText(), numPro.getText());
            parteDiario.setObservaciones(observacionesText.getText());
            if(obra.isTieneRegistro()){
                parteDiario.setIdFuncion(((Funcion) comboFuncion.getSelectedItem()).getId());
                parteDiario.setMultifuncion(multifuncionCheck.isSelected());
                parteDiario.setDesarraigo(isDesarraigo.isSelected());
                reg = tablaModel.getFila(0);
                GregorianCalendar gc = new GregorianCalendar();
                gc.setTime(fechaParte.getDate());
                reg.setFecha(reg.getStringWFecha(gc));
            }
            if(obra.isTieneEquipo()){
                registroEquipo.setIdEquipo(equipo.getId());
                registroEquipo.setDatosCarga(isTransporte.isSelected());
                registroEquipo.setIniHoro(inicialHorometroText.getText());
                registroEquipo.setFinHoro(finalHorometroText.getText());
                registroEquipo.setIniOdo(inicialOdometroText.getText());
                registroEquipo.setFinOdo(finalOdometroText.getText());
                registroEquipo.setCantCombustible(cantidadLitrosText.getText());
                registroEquipo.setEstacionServicioID(((EstacionServicio)estacionesCombo.getSelectedItem()).getEstacionServicioID());
                registroEquipo.setTarea(tareaAsignadaText.getText());
                if (registroEquipo.isDatosCarga()) {
                    datosTr = listMaterialesParteDiario;
                }
            }
        }

        @Override
        protected Object doInBackground() {
            ParteDiarioDAO pdao = new ParteDiarioDAO();
            pdao.conectar();
            if (pdao.numeroExistsMof(parteDiario.getId(), parteDiario.getNumero())) {
                r = -10;
                return null;
            }
            boolean desa = (parteDiario.isDesarraigo()| operario.isDesarraigo());
            //evaluo el desarraigo del parte diario y el desarraigo del operario
            reg.calcular(perfil, desa);
            parteDiario.calcularVianda(perfil, reg, desa);
            r = pdao.actualizar(perfil, parteDiario, reg, registroEquipo, datosTr);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (r < 0) {
                OpcionPanel.showMessageDialog(null, "¡No se pudo guardar!\n"
                        + "Posiblemente existe un parte diario\n"
                        + "almacenado con ese número.", "Error", OpcionPanel.ERROR_MESSAGE);
            } else {

                outText.setText("Datos guardados.");

            }
        }
    }

    @Action
    public Task eliminarMateriales() {
        if (tablaTransporte.getSelectedRow() == -1) {
            return null;
        }
        return new EliminarMaterialesTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class EliminarMaterialesTask extends org.jdesktop.application.Task<Object, Void> {

        Materiales m = tdt.getFila(tablaTransporte.getSelectedRow());
        boolean r = false;

        EliminarMaterialesTask(org.jdesktop.application.Application app) {

            super(app);
        }

        @Override
        protected Object doInBackground() {
            ParteDiarioDAO mdao = new ParteDiarioDAO();
            mdao.conectar();
            r = mdao.quitarMateriales(m);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (r) {
                tdt.delRegistro(m);
            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error al quitar el registro de materiales", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    @Action
    public void seleccionarObra() {
        if (listObras.isEmpty() || listaDeObras.isSelectionEmpty()) {
            //nothing
        } else {
            obra = (Obras) listaDeObras.getSelectedValue();
            
            lblObra.setText(obra.toString());
            selectObraDialog.dispose();
            setConfiguracionObra();
        }

    }

    @Action
    public Task SeleccionarNuevaObra() {
        return new SeleccionarNuevaObraTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class SeleccionarNuevaObraTask extends org.jdesktop.application.Task<Object, Void> {

        ArrayList<Obras> obras = new ArrayList<Obras>();

        SeleccionarNuevaObraTask(org.jdesktop.application.Application app) {
            super(app);
        }

        @Override
        protected Object doInBackground() {
            ObrasDAO odao = new ObrasDAO();
            odao.conectar();
            obras = odao.cargarTodos();
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            listObras.clear();
            for (int i = 0; i < obras.size(); i++) {
                listObras.addElement((Obras) obras.get(i));
            }
            selectObraDialog.setLocationRelativeTo(lblObra);
            selectObraDialog.setVisible(true);

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarInfoTransporte;
    private javax.swing.JButton botonBuscarEmpleadoMostrar;
    private javax.swing.JButton botonBuscarEquipoMostrar;
    private javax.swing.JButton botonQuery;
    private javax.swing.JButton botonQueryEq;
    private javax.swing.JDialog buscarEmpleado;
    private javax.swing.JDialog buscarEquipo;
    private javax.swing.JTextField cantidadLitrosText;
    private javax.swing.JButton cargarDatosTransporte;
    private javax.swing.JButton cerrarBusquedaObra;
    private javax.swing.JButton cerrarInfoTransporte;
    private javax.swing.JButton cerrarParteBoton;
    private javax.swing.JComboBox comboFuncion;
    private javax.swing.JDialog datosTransporteDialog;
    private javax.swing.JButton eliminarMateriales;
    private javax.swing.JPanel equipoPanel;
    private javax.swing.JComboBox estacionesCombo;
    private javax.swing.JButton exitDialog;
    private javax.swing.JButton exitDialogEq;
    private com.toedter.calendar.JDateChooser fechaParte;
    private javax.swing.JTextField finalHorometroText;
    private javax.swing.JTextField finalOdometroText;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JButton guardarParteBoton;
    private javax.swing.JPanel horarioPanel;
    private javax.swing.JTextField inicialHorometroText;
    private javax.swing.JTextField inicialOdometroText;
    private javax.swing.JCheckBox isDesarraigo;
    private javax.swing.JCheckBox isTransporte;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblEquipo;
    private javax.swing.JLabel lblObra;
    private javax.swing.JLabel lblOperario;
    private javax.swing.JList listaDeObras;
    private javax.swing.JList listaEmpleados;
    private javax.swing.JList listaEquipo;
    private javax.swing.JCheckBox multifuncionCheck;
    private javax.swing.JTextField numPre;
    private javax.swing.JTextField numPro;
    private javax.swing.JTextArea observacionesText;
    private javax.swing.JLabel outText;
    private javax.swing.JPanel panelAzul2;
    private javax.swing.JTextField query1;
    private javax.swing.JTextField queryEq;
    private javax.swing.JButton selectEquipo;
    private javax.swing.JButton selectObra;
    private javax.swing.JButton selectObraButton;
    private javax.swing.JDialog selectObraDialog;
    private javax.swing.JButton selectRow;
    private javax.swing.JTable tablaHorario;
    private javax.swing.JTable tablaTransporte;
    private javax.swing.JTextArea tareaAsignadaText;
    // End of variables declaration//GEN-END:variables
    public static TablaHorarioIngresoModel tablaModel = new TablaHorarioIngresoModel();
    public static TablaDatosTransporte tdt = new TablaDatosTransporte();
    DefaultListModel listEmpl = new DefaultListModel();
    DefaultListModel listEq = new DefaultListModel();
    DefaultListModel listObras = new DefaultListModel();
    /*Necesario para editar un parte*/
    static public DefaultComboBoxModel funciones = new DefaultComboBoxModel();
    static public DefaultComboBoxModel estaciones = new DefaultComboBoxModel();
    static public ParteDiario parteDiario = new ParteDiario();
    static public Operario operario = new Operario();
    static public ArrayList<Funcion> funcionesList = new ArrayList<Funcion>();
    static public Obras obra = new Obras();
    static public Equipos equipo = new Equipos();
    static public RegistroEquipo registroEquipo = new RegistroEquipo();
    static public Registro registroHorario = new Registro();
    static public ArrayList<Materiales> listMaterialesParteDiario = new ArrayList<Materiales>();
    /*fin*/
    public String newFc = "";
    public List<String[]> materialesList = new ArrayList<String[]>();
    public Perfiles perfil = new Perfiles();
    boolean esp = false;
    boolean carga = true;
}
