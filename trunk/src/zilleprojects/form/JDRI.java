/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDRI.java
 *
 * Created on 16/07/2012, 00:44:11
 */
package zilleprojects.form;

import DAO.AlarmasDAO;
import DAO.ObrasDAO;
import DAO.RIDAO;
import DAO.RIItemDAO;
import DAO.ReportesDAO;
import Modelo.Alarma;
import Modelo.EntidadAbstracta;
import Modelo.Obras;
import Modelo.RI;
import Modelo.RiItem;
import Modelo.tablemodel.TablaRIItemModel;
import Utils.CellTextEditor;
import Utils.EditorDeCeldasString;
import Utils.Permisos;
import Vista.OpcionPanel;
import Vista.PanelAzul;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JTable;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author matuuar
 */
public class JDRI extends javax.swing.JDialog {

    Image icono = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/zilleprojects/resources/icono.png"));
    zilleprojects.ZilleProjectsView appMain;

    /** Creates new form JDRI */
    public JDRI(java.awt.Frame parent, boolean modal, zilleprojects.ZilleProjectsView appMain) {
        super(parent, modal);
        this.appMain = appMain;
        initComponents();
        recargarListaDeRI();
        addRI.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel3 = new PanelAzul();
        seleccionarObra = new javax.swing.JButton();
        Cerrar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListDeObra = new javax.swing.JList();
        ABMRiItemDialog = new javax.swing.JDialog();
        jPanel7 = new PanelAzul();
        jLabel3 = new javax.swing.JLabel();
        cantidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fechaNecesidad = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        unidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        detalle = new javax.swing.JTextField();
        proveedor = new javax.swing.JTextField();
        numeroOC = new javax.swing.JTextField();
        fechaOc = new com.toedter.calendar.JDateChooser();
        fechaEmision = new com.toedter.calendar.JDateChooser();
        fechaEntrega = new com.toedter.calendar.JDateChooser();
        jScrollPane5 = new javax.swing.JScrollPane();
        observaciones = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        guardarRiItem = new javax.swing.JButton();
        valorOC = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel1 = new PanelAzul();
        addRI = new javax.swing.JButton();
        editRI = new javax.swing.JButton();
        remRI = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListaDeRI = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRI_Num = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblNombreObra = new javax.swing.JLabel();
        btnObra = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtSolicitante = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        buscarRI = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaItems = new javax.swing.JTable();
        addItemRI = new javax.swing.JButton();
        remItemRI = new javax.swing.JButton();
        editItemRI = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        riNum = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        dateNuevaAlarma = new com.toedter.calendar.JDateChooser();
        btnCrearAlarma = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setMinimumSize(new java.awt.Dimension(333, 320));
        jDialog1.setModal(true);
        jDialog1.setName("jDialog1"); // NOI18N
        jDialog1.setResizable(false);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(JDRI.class);
        jPanel3.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel3.border.lineColor"), 1, true)); // NOI18N
        jPanel3.setMinimumSize(new java.awt.Dimension(333, 290));
        jPanel3.setName("jPanel3"); // NOI18N

        seleccionarObra.setIcon(resourceMap.getIcon("seleccionarObra.icon")); // NOI18N
        seleccionarObra.setText(resourceMap.getString("seleccionarObra.text")); // NOI18N
        seleccionarObra.setName("seleccionarObra"); // NOI18N
        seleccionarObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarObraActionPerformed(evt);
            }
        });

        Cerrar.setIcon(resourceMap.getIcon("Cerrar.icon")); // NOI18N
        Cerrar.setText(resourceMap.getString("Cerrar.text")); // NOI18N
        Cerrar.setName("Cerrar"); // NOI18N
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        jScrollPane4.setMinimumSize(new java.awt.Dimension(365, 260));
        jScrollPane4.setName("jScrollPane4"); // NOI18N
        jScrollPane4.setPreferredSize(new java.awt.Dimension(35, 240));

        jListDeObra.setModel(listaDeObras);
        jListDeObra.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListDeObra.setName("jListDeObra"); // NOI18N
        jListDeObra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListDeObraMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jListDeObra);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(seleccionarObra, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cerrar, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 331, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 236, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cerrar)
                    .addComponent(seleccionarObra))
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ABMRiItemDialog.setLocationByPlatform(true);
        ABMRiItemDialog.setMinimumSize(new java.awt.Dimension(646, 493));
        ABMRiItemDialog.setModal(true);
        ABMRiItemDialog.setName("ABMRiItemDialog"); // NOI18N
        ABMRiItemDialog.setResizable(false);
        ABMRiItemDialog.setUndecorated(true);

        jPanel7.setMinimumSize(new java.awt.Dimension(646, 493));
        jPanel7.setName("jPanel7"); // NOI18N
        jPanel7.setPreferredSize(new java.awt.Dimension(646, 493));

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        cantidad.setText(resourceMap.getString("cantidad.text")); // NOI18N
        cantidad.setDisabledTextColor(resourceMap.getColor("cantidad.disabledTextColor")); // NOI18N
        cantidad.setMinimumSize(new java.awt.Dimension(150, 20));
        cantidad.setName("cantidad"); // NOI18N
        cantidad.setPreferredSize(new java.awt.Dimension(150, 30));

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        fechaNecesidad.setName("fechaNecesidad"); // NOI18N
        fechaNecesidad.setPreferredSize(new java.awt.Dimension(150, 30));

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        unidad.setText(resourceMap.getString("unidad.text")); // NOI18N
        unidad.setDisabledTextColor(resourceMap.getColor("unidad.disabledTextColor")); // NOI18N
        unidad.setMinimumSize(new java.awt.Dimension(150, 20));
        unidad.setName("unidad"); // NOI18N
        unidad.setPreferredSize(new java.awt.Dimension(150, 30));

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        detalle.setText(resourceMap.getString("detalle.text")); // NOI18N
        detalle.setDisabledTextColor(resourceMap.getColor("detalle.disabledTextColor")); // NOI18N
        detalle.setName("detalle"); // NOI18N
        detalle.setPreferredSize(new java.awt.Dimension(150, 30));

        proveedor.setText(resourceMap.getString("proveedor.text")); // NOI18N
        proveedor.setDisabledTextColor(resourceMap.getColor("proveedor.disabledTextColor")); // NOI18N
        proveedor.setMinimumSize(new java.awt.Dimension(150, 20));
        proveedor.setName("proveedor"); // NOI18N
        proveedor.setPreferredSize(new java.awt.Dimension(150, 30));

        numeroOC.setText(resourceMap.getString("numeroOC.text")); // NOI18N
        numeroOC.setDisabledTextColor(resourceMap.getColor("numeroOC.disabledTextColor")); // NOI18N
        numeroOC.setMinimumSize(new java.awt.Dimension(150, 20));
        numeroOC.setName("numeroOC"); // NOI18N
        numeroOC.setPreferredSize(new java.awt.Dimension(150, 30));

        fechaOc.setName("fechaOc"); // NOI18N

        fechaEmision.setName("fechaEmision"); // NOI18N
        fechaEmision.setPreferredSize(new java.awt.Dimension(150, 30));

        fechaEntrega.setName("fechaEntrega"); // NOI18N

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        observaciones.setColumns(45);
        observaciones.setLineWrap(true);
        observaciones.setRows(6);
        observaciones.setWrapStyleWord(true);
        observaciones.setDisabledTextColor(resourceMap.getColor("observaciones.disabledTextColor")); // NOI18N
        observaciones.setMinimumSize(new java.awt.Dimension(100, 50));
        observaciones.setName("observaciones"); // NOI18N
        observaciones.setOpaque(false);
        jScrollPane5.setViewportView(observaciones);

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        guardarRiItem.setIcon(resourceMap.getIcon("guardarRiItem.icon")); // NOI18N
        guardarRiItem.setText(resourceMap.getString("guardarRiItem.text")); // NOI18N
        guardarRiItem.setName("guardarRiItem"); // NOI18N
        guardarRiItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarRiItemActionPerformed(evt);
            }
        });

        valorOC.setDisabledTextColor(resourceMap.getColor("valorOC.disabledTextColor")); // NOI18N
        valorOC.setMinimumSize(new java.awt.Dimension(150, 20));
        valorOC.setName("valorOC"); // NOI18N
        valorOC.setPreferredSize(new java.awt.Dimension(150, 30));

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detalle, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addComponent(valorOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fechaOc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(numeroOC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fechaEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaNecesidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fechaEmision, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(unidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(guardarRiItem, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cantidad, fechaNecesidad, fechaOc, proveedor, valorOC});

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {guardarRiItem, jButton2});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel3)
                            .addComponent(fechaNecesidad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(unidad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel5)
                                        .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel6)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel7)
                            .addComponent(detalle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel9)
                                        .addComponent(proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(numeroOC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel10)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                            .addComponent(jLabel17)
                                            .addComponent(fechaOc, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                            .addComponent(jLabel13)
                                            .addComponent(valorOC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(fechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel14)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(guardarRiItem)
                                    .addComponent(jButton2)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel15))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(fechaEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {fechaEmision, fechaNecesidad});

        javax.swing.GroupLayout ABMRiItemDialogLayout = new javax.swing.GroupLayout(ABMRiItemDialog.getContentPane());
        ABMRiItemDialog.getContentPane().setLayout(ABMRiItemDialogLayout);
        ABMRiItemDialogLayout.setHorizontalGroup(
            ABMRiItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ABMRiItemDialogLayout.setVerticalGroup(
            ABMRiItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(860, 450));
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel1.setMaximumSize(new java.awt.Dimension(859, 419));
        jPanel1.setMinimumSize(new java.awt.Dimension(859, 419));
        jPanel1.setName("jPanel1"); // NOI18N

        addRI.setIcon(resourceMap.getIcon("addRI.icon")); // NOI18N
        addRI.setText(resourceMap.getString("addRI.text")); // NOI18N
        addRI.setName("addRI"); // NOI18N
        addRI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRIActionPerformed(evt);
            }
        });

        editRI.setIcon(resourceMap.getIcon("editRI.icon")); // NOI18N
        editRI.setText(resourceMap.getString("editRI.text")); // NOI18N
        editRI.setName("editRI"); // NOI18N
        editRI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRIActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getActionMap(JDRI.class, this);
        remRI.setAction(actionMap.get("eliminarRI")); // NOI18N
        remRI.setIcon(resourceMap.getIcon("remRI.icon")); // NOI18N
        remRI.setText(resourceMap.getString("remRI.text")); // NOI18N
        remRI.setName("remRI"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jListaDeRI.setModel(listaDeRI);
        jListaDeRI.setName("jListaDeRI"); // NOI18N
        jListaDeRI.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListaDeRIValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListaDeRI);

        jPanel2.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel2.border.lineColor"), 1, true)); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtRI_Num.setText(resourceMap.getString("txtRI_Num.text")); // NOI18N
        txtRI_Num.setDisabledTextColor(resourceMap.getColor("txtRI_Num.disabledTextColor")); // NOI18N
        txtRI_Num.setEnabled(false);
        txtRI_Num.setMinimumSize(new java.awt.Dimension(100, 29));
        txtRI_Num.setName("txtRI_Num"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        lblNombreObra.setFont(lblNombreObra.getFont().deriveFont(lblNombreObra.getFont().getStyle() | java.awt.Font.BOLD));
        lblNombreObra.setForeground(resourceMap.getColor("lblNombreObra.foreground")); // NOI18N
        lblNombreObra.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNombreObra.setText(resourceMap.getString("lblNombreObra.text")); // NOI18N
        lblNombreObra.setMaximumSize(new java.awt.Dimension(115, 18));
        lblNombreObra.setMinimumSize(new java.awt.Dimension(115, 18));
        lblNombreObra.setName("lblNombreObra"); // NOI18N
        lblNombreObra.setPreferredSize(new java.awt.Dimension(135, 18));

        btnObra.setAction(actionMap.get("openSelectObra")); // NOI18N
        btnObra.setIcon(resourceMap.getIcon("btnObra.icon")); // NOI18N
        btnObra.setText(resourceMap.getString("btnObra.text")); // NOI18N
        btnObra.setName("btnObra"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        txtSolicitante.setText(resourceMap.getString("txtSolicitante.text")); // NOI18N
        txtSolicitante.setDisabledTextColor(resourceMap.getColor("txtSolicitante.disabledTextColor")); // NOI18N
        txtSolicitante.setEnabled(false);
        txtSolicitante.setMinimumSize(new java.awt.Dimension(100, 29));
        txtSolicitante.setName("txtSolicitante"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        txtObservaciones.setColumns(45);
        txtObservaciones.setLineWrap(true);
        txtObservaciones.setRows(3);
        txtObservaciones.setWrapStyleWord(true);
        txtObservaciones.setDisabledTextColor(resourceMap.getColor("txtObservaciones.disabledTextColor")); // NOI18N
        txtObservaciones.setEnabled(false);
        txtObservaciones.setMinimumSize(new java.awt.Dimension(100, 50));
        txtObservaciones.setName("txtObservaciones"); // NOI18N
        jScrollPane3.setViewportView(txtObservaciones);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblNombreObra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnObra)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRI_Num, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSolicitante, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(txtRI_Num, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombreObra, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObra)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(txtSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        buscarRI.setText(resourceMap.getString("buscarRI.text")); // NOI18N
        buscarRI.setToolTipText(resourceMap.getString("buscarRI.toolTipText")); // NOI18N
        buscarRI.setName("buscarRI"); // NOI18N
        buscarRI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buscarRIFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                buscarRIFocusLost(evt);
            }
        });
        buscarRI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarRIKeyReleased(evt);
            }
        });

        jPanel4.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel4.border.lineColor"), 1, true)); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setOpaque(false);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tablaItems.setModel(modelItems);
        tablaItems.setCellEditor(editor);
        tablaItems.setName("tablaItems"); // NOI18N
        tablaItems.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaItemsMouseClicked(evt);
            }
        });
        tablaItems.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaItemsKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablaItems);
        establecerEditorDeString(tablaItems);
        setUpModelItems(modelItems);

        addItemRI.setText(resourceMap.getString("addItemRI.text")); // NOI18N
        addItemRI.setEnabled(false);
        addItemRI.setName("addItemRI"); // NOI18N
        addItemRI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemRIActionPerformed(evt);
            }
        });

        remItemRI.setText(resourceMap.getString("remItemRI.text")); // NOI18N
        remItemRI.setEnabled(false);
        remItemRI.setName("remItemRI"); // NOI18N
        remItemRI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remItemRIActionPerformed(evt);
            }
        });

        editItemRI.setText(resourceMap.getString("editItemRI.text")); // NOI18N
        editItemRI.setEnabled(false);
        editItemRI.setName("editItemRI"); // NOI18N
        editItemRI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemRIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addItemRI)
                    .addComponent(editItemRI)
                    .addComponent(remItemRI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1072, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addItemRI, editItemRI, remItemRI});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(addItemRI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editItemRI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remItemRI)))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addItemRI, editItemRI, remItemRI});

        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setOpaque(false);

        jButton1.setAction(actionMap.get("exportRIexcel")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        btnGuardar.setAction(actionMap.get("guardarRI")); // NOI18N
        btnGuardar.setIcon(resourceMap.getIcon("btnGuardar.icon")); // NOI18N
        btnGuardar.setText(resourceMap.getString("btnGuardar.text")); // NOI18N
        btnGuardar.setName("btnGuardar"); // NOI18N

        btnModificar.setAction(actionMap.get("modificarRI")); // NOI18N
        btnModificar.setIcon(resourceMap.getIcon("btnModificar.icon")); // NOI18N
        btnModificar.setText(resourceMap.getString("btnModificar.text")); // NOI18N
        btnModificar.setName("btnModificar"); // NOI18N

        btnCancelar.setIcon(resourceMap.getIcon("btnCancelar.icon")); // NOI18N
        btnCancelar.setText(resourceMap.getString("btnCancelar.text")); // NOI18N
        btnCancelar.setEnabled(false);
        btnCancelar.setName("btnCancelar"); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        riNum.setFont(resourceMap.getFont("riNum.font")); // NOI18N
        riNum.setForeground(resourceMap.getColor("riNum.foreground")); // NOI18N
        riNum.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        riNum.setText(resourceMap.getString("riNum.text")); // NOI18N
        riNum.setName("riNum"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(riNum, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(riNum))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancelar, btnGuardar, btnModificar, jButton1});

        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setOpaque(false);

        lblStatus.setFont(lblStatus.getFont().deriveFont(lblStatus.getFont().getStyle() | java.awt.Font.BOLD, lblStatus.getFont().getSize()+1));
        lblStatus.setForeground(resourceMap.getColor("lblStatus.foreground")); // NOI18N
        lblStatus.setText(resourceMap.getString("lblStatus.text")); // NOI18N
        lblStatus.setName("lblStatus"); // NOI18N

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        dateNuevaAlarma.setName("dateNuevaAlarma"); // NOI18N

        btnCrearAlarma.setAction(actionMap.get("crearAlarma2RI")); // NOI18N
        btnCrearAlarma.setIcon(resourceMap.getIcon("btnCrearAlarma.icon")); // NOI18N
        btnCrearAlarma.setText(resourceMap.getString("btnCrearAlarma.text")); // NOI18N
        btnCrearAlarma.setName("btnCrearAlarma"); // NOI18N

        jButton4.setIcon(resourceMap.getIcon("jButton4.icon")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addGap(24, 24, 24)
                .addComponent(dateNuevaAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCrearAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel16)
                    .addComponent(dateNuevaAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearAlarma)
                    .addComponent(jButton4)
                    .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addRI, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(editRI, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(remRI, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buscarRI, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(addRI))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(editRI))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(remRI))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buscarRI, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        limpiarCampos();
        isEdit = false;
        if (obtenerDatosDeList()) {
            desbloquearCampos(false);
            desbloquearBoton(3);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void addRIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRIActionPerformed
        isEdit = true;
        limpiarCampos();
        desbloquearCampos(true);
        desbloquearBoton(0);
    }//GEN-LAST:event_addRIActionPerformed

    private void editRIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRIActionPerformed

        if (obtenerDatosDeList()) {
            isEdit = true;
            desbloquearCampos(true);
            desbloquearBoton(1);
        }
    }//GEN-LAST:event_editRIActionPerformed

    private void jListaDeRIValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListaDeRIValueChanged
        isEdit = false;
        if (obtenerDatosDeList()) {
            desbloquearCampos(false);
            desbloquearBoton(3);
        }
    }//GEN-LAST:event_jListaDeRIValueChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void buscarRIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarRIKeyReleased
        if (buscarRI.getText().length() >= 3) {
            query = buscarRI.getText();
            Task t = queryRI();
            t.execute();
        }
        if (buscarRI.getText().length() == 0) {
            recargarListaDeRI();
        }
    }//GEN-LAST:event_buscarRIKeyReleased

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        jDialog1.dispose();
    }//GEN-LAST:event_CerrarActionPerformed

    private void seleccionarObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarObraActionPerformed
        if (!jListDeObra.isSelectionEmpty()) {
            obraSelect = (Obras) jListDeObra.getSelectedValue();
            lblNombreObra.setText(obraSelect.toString());
            jDialog1.dispose();
        }
    }//GEN-LAST:event_seleccionarObraActionPerformed

    private void buscarRIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarRIFocusGained
        if (buscarRI.getText().equals("Buscar por número, obra, proveedor o detalle...")) {
            buscarRI.setText("");
        } else {
        }
    }//GEN-LAST:event_buscarRIFocusGained

    private void buscarRIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarRIFocusLost
        if (buscarRI.getText().equals("")) {
            buscarRI.setText("Buscar por número, obra, proveedor o detalle...");
        } else {
        }
    }//GEN-LAST:event_buscarRIFocusLost

    private void addItemRIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemRIActionPerformed
        selected = new RiItem();
        setRiItemInDialog(selected, true);
        ABMRiItemDialog.setLocationRelativeTo(tablaItems);
        ABMRiItemDialog.setVisible(true);

    }//GEN-LAST:event_addItemRIActionPerformed

    private void remItemRIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remItemRIActionPerformed
        int opcion = tablaItems.getSelectedRow();
        if (opcion != -1) {
            modelItems.delFila(modelItems.getFila(opcion));
        }
    }//GEN-LAST:event_remItemRIActionPerformed

    private void jListDeObraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListDeObraMouseClicked
        if (evt.getClickCount() == 2) // Se mira si es doble click
        {
            if (!jListDeObra.isSelectionEmpty()) {
                obraSelect = (Obras) jListDeObra.getSelectedValue();
                lblNombreObra.setText(obraSelect.toString());
                jDialog1.dispose();
            }
        }
    }//GEN-LAST:event_jListDeObraMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ABMRiItemDialog.dispose();
        selected = new RiItem();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tablaItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaItemsMouseClicked
        if (evt.getClickCount() == 2) // Se mira si es doble click
        {
            setRiItemInDialog(selected, false);
        ABMRiItemDialog.setLocationRelativeTo(tablaItems);
        ABMRiItemDialog.setVisible(true);
        } else {
            int opcion = tablaItems.getSelectedRow();
            if (opcion != -1) {
                selected = (RiItem) modelItems.getFila(opcion);
            }
        }
    }//GEN-LAST:event_tablaItemsMouseClicked

    private void tablaItemsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaItemsKeyPressed
        int opcion = tablaItems.getSelectedRow();
        if (opcion != -1) {
            selected = (RiItem) modelItems.getFila(opcion);
        }
    }//GEN-LAST:event_tablaItemsKeyPressed

    private void guardarRiItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarRiItemActionPerformed
        selected = getRiItemFromDialog(selected);
        if (selected.getId() != 0) {
            //Modifico
            modelItems.insertarFila(selected, tablaItems.getSelectedRow());
        } else {
            //nuevo
            modelItems.addFila(selected);
        }

        ABMRiItemDialog.dispose();
    }//GEN-LAST:event_guardarRiItemActionPerformed

    private void editItemRIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemRIActionPerformed
        int opcion = tablaItems.getSelectedRow();
        if (opcion != -1) {
            setRiItemInDialog(selected, true);
            ABMRiItemDialog.setLocationRelativeTo(tablaItems);
            ABMRiItemDialog.setVisible(true);
        }
    }//GEN-LAST:event_editItemRIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDRI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDRI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDRI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDRI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDRI dialog = new JDRI(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);

            }
        });
    }

    private void setUpModelItems(TablaRIItemModel model) {

        tablaItems.getColumnModel().getColumn(0).setWidth(30);
        tablaItems.getColumnModel().getColumn(1).setWidth(30);

    }

    private void setRiItemInDialog(RiItem it, boolean editar) {

        habilitarCamposABMRiItem(editar);
        valorOC.setText(it.getValor());
        fechaNecesidad.setDate(it.getFecha_necesidad());
        fechaEmision.setDate(it.getFecha_emision());
        fechaOc.setDate(it.getFecha_oc());
        fechaEntrega.setDate(it.getFecha_entrega());
        cantidad.setText(it.getCantidad());
        unidad.setText(it.getUnidad());
        detalle.setText(it.getDetalle());
        observaciones.setText(it.getObservacion());
        proveedor.setText(it.getProveedor());
        numeroOC.setText(it.getOC_num());
    }

    private RiItem getRiItemFromDialog(RiItem it) {
        it.setFecha_necesidad(fechaNecesidad.getDate());
        it.setFecha_emision(fechaEmision.getDate());
        it.setFecha_oc(fechaOc.getDate());
        it.setFecha_entrega(fechaEntrega.getDate());
        it.setCantidad(cantidad.getText());
        it.setUnidad(unidad.getText());
        it.setDetalle(detalle.getText());
        it.setObservacion(observaciones.getText());
        it.setProveedor(proveedor.getText());
        it.setOC_num(numeroOC.getText());
        it.setValor(valorOC.getText());
        return it;
    }
    /*
    public void enabledCampoEstados(){
    String opcion = comboEstado.getSelectedItem().toString();
    if(isEdit){
    //"Creada", "Emitida", "OC Generada", "Cumplida"
    if(opcion .equals("Creada")){
    dateEmision.setEnabled(false);
    dateOC.setEnabled(false);
    dateEntrega.setEnabled(false);
    txtProveedor.setEnabled(false);
    txtOC_Num.setEnabled(false);
    }
    if(opcion .equals("Emitida")){
    dateEmision.setEnabled(true);
    dateOC.setEnabled(false);
    dateEntrega.setEnabled(false);
    txtProveedor.setEnabled(true);
    txtOC_Num.setEnabled(false);
    }
    if(opcion.equals("OC Generada")){
    dateEmision.setEnabled(true);
    dateOC.setEnabled(true);
    dateEntrega.setEnabled(false);
    txtProveedor.setEnabled(true);
    txtOC_Num.setEnabled(true);
    }
    if(opcion.equals("Cumplida")){
    dateEmision.setEnabled(true);
    dateOC.setEnabled(true);
    dateEntrega.setEnabled(true);
    txtProveedor.setEnabled(true);
    txtOC_Num.setEnabled(true);
    }
    }else{
    dateEmision.setEnabled(false);
    dateOC.setEnabled(false);
    dateEntrega.setEnabled(false);
    txtProveedor.setEnabled(false);
    txtOC_Num.setEnabled(false);
    }
    }*/

    public void desbloquearCampos(boolean b) {

        txtRI_Num.setEnabled(b);
        btnObra.setEnabled(b);
        txtSolicitante.setEnabled(b);
        txtObservaciones.setEnabled(b);
        addItemRI.setEnabled(b);
        remItemRI.setEnabled(b);
        editItemRI.setEnabled(b);
        //tablaItems.setEnabled(b);
        /*if((ri.getRI_ID() != 0 && b == true) || !b  ){
        dateNuevaAlarma.setEnabled(b);
        btnCrearAlarma.setEnabled(b);
        }*/
        //enabledCampoEstados();
    }

    public void desbloquearBoton(int opcion) {
        /**
         * 0: Desbloquear boton Crear
         * 1: Desbloquear boton Modificar
         * */
        switch (opcion) {
            case 0:
                btnGuardar.setEnabled(true);
                btnCancelar.setEnabled(true);
                btnModificar.setEnabled(false);
                break;
            case 1:
                btnGuardar.setEnabled(false);
                btnCancelar.setEnabled(true);
                btnModificar.setEnabled(true);
                break;
            default:
                btnGuardar.setEnabled(false);
                btnCancelar.setEnabled(false);
                btnModificar.setEnabled(false);
        }
    }

    public boolean obtenerDatosDeList() {

        if (!listaDeRI.isEmpty()) {
            if (jListaDeRI.isSelectionEmpty()) {
                ri = (RI) listaDeRI.get(0);
            } else {
                ri = (RI) listaDeRI.get(jListaDeRI.getSelectedIndex());
            }
            setDatosDeRI(ri);
            return true;
        }
        return false;
    }

    public void setDatosDeRI(RI req) {
        RIItemDAO riiDao = new RIItemDAO();
        riiDao.conectar();
        ArrayList<RiItem> list = riiDao.cargarTodos(req.getRI_ID());
        modelItems.clean();
        for (RiItem it : list) {
            modelItems.addFila(it);
        }
        txtRI_Num.setText(req.getRI_num());
        lblNombreObra.setText(req.getCodigoObra());
        txtSolicitante.setText(req.getSolicitante());
        txtObservaciones.setText(req.getObservaciones());
        obraSelect.setCodigo(req.getCodigoObra());
        obraSelect.setId(req.getObraID());
        riNum.setText("RI" + req.getRI_ID());
    }

    public void limpiarCampos() {
        txtRI_Num.setText("");
        lblNombreObra.setText("");
        txtSolicitante.setText("");
        txtObservaciones.setText("");
        ri = new RI();
        obraSelect = new Obras();
        dateNuevaAlarma.setDate(null);
        modelItems.clean();
        riNum.setText(null);
    }

    private void setListDeRI(ArrayList<RI> list) {
        listaDeRI.clear();
        for (RI r : list) {
            listaDeRI.addElement(r);
        }
        jListaDeRI.setModel(listaDeRI);
    }

    public void setModelListRI(DefaultListModel list) {
        listaDeRI = list;
    }

    public void setSelectedAlarma(RI r) {
        jListaDeRI.setSelectedValue(r, true);
    }

    public DefaultListModel getModelListAlarmas() {
        return listaDeRI;
    }

    private void recargarListaDeRI() {
        RIDAO riDAO = new RIDAO();
        riDAO.conectar();
        setListDeRI(riDAO.cargarTodos());
    }

    @Action
    public Task guardarRI() {
        if (txtRI_Num.getText().isEmpty()) {
            OpcionPanel.showMessageDialog(null, "El número de Requerimiento Interno es obligatorio.", "Error", OpcionPanel.ERROR_MESSAGE);
            return null;
        }
        if (tablaItems.getModel().getRowCount() == 0) {
            OpcionPanel.showMessageDialog(null, "Debe especificar al menos un ítem en la lista.", "Error", OpcionPanel.ERROR_MESSAGE);
            return null;
        }

        ri = new RI();
        riItemes = new ArrayList<RiItem>();
        ri.setRI_num(txtRI_Num.getText());
        if (!txtSolicitante.getText().isEmpty()) {
            ri.setSolicitante(txtSolicitante.getText());
        }

        ri.setObservaciones(txtObservaciones.getText());
        ri.setObraID(obraSelect.getId());
        ri.setCodigoObra(obraSelect.getCodigo());
        for (int i = 0; i < modelItems.getRowCount(); i++) {

            riItemes.add((RiItem)modelItems.getFila(i));
        }
        return new GuardarRITask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private void habilitarCamposABMRiItem(boolean editar) {
        fechaNecesidad.setEnabled(editar);
        fechaEmision.setEnabled(editar);
        fechaOc.setEnabled(editar);
        fechaEntrega.setEnabled(editar);
        cantidad.setEnabled(editar);
        unidad.setEnabled(editar);
        detalle.setEnabled(editar);
        observaciones.setEnabled(editar);
        proveedor.setEnabled(editar);
        numeroOC.setEnabled(editar);
        valorOC.setEnabled(editar);
        guardarRiItem.setEnabled(editar);
    }

    private class GuardarRITask extends org.jdesktop.application.Task<Object, Void> {

        int r = 0;

        GuardarRITask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GuardarAlarmaTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            RIDAO dao = new RIDAO();
            dao.conectar();
            r = dao.guardar(ri, riItemes);
            ri.setRI_ID(r);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            isEdit = false;
            if (r > 0) {
                OpcionPanel.showMessageDialog(null, "Requerimiento interno creado correctamente.", "Éxito", OpcionPanel.INFORMATION_MESSAGE);

                listaDeRI.addElement(ri);
                //jListDeOT.setModel(listDeOT);
                jListaDeRI.setSelectedValue(ri, true);
            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error al procesar la solicitud.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }

    @Action
    public Task modificarRI() {
        if (txtRI_Num.getText().isEmpty()) {
            return null;
        }

        ri.setRI_num(txtRI_Num.getText());
        if (!txtSolicitante.getText().isEmpty()) {
            ri.setSolicitante(txtSolicitante.getText());
        }
        ri.setObservaciones(txtObservaciones.getText());
        ri.setObraID(obraSelect.getId());
        ri.setCodigoObra(obraSelect.getCodigo());
        riItemes = new ArrayList<RiItem>();
        for (int i = 0; i < modelItems.getRowCount(); i++) {

            riItemes.add((RiItem)modelItems.getFila(i));
        }
        return new ModificarRITask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class ModificarRITask extends org.jdesktop.application.Task<Object, Void> {

        int r = 0;

        ModificarRITask(org.jdesktop.application.Application app) {

            super(app);
        }

        @Override
        protected Object doInBackground() {
            RIDAO dao = new RIDAO();
            dao.conectar();
            r = dao.modificar(ri, riItemes);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            isEdit = false;

            if (r > 0) {
                OpcionPanel.showMessageDialog(null, "Requerimiento interno modificado correctamente.", "Éxito", OpcionPanel.INFORMATION_MESSAGE);
                if (obtenerDatosDeList()) {
                    desbloquearCampos(false);
                    desbloquearBoton(3);
                }
            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error al procesar la solicitud.", "Error", OpcionPanel.ERROR_MESSAGE);
                recargarListaDeRI();
                limpiarCampos();
            }
        }
    }

    @Action
    public Task eliminarRI() {
        if(!Permisos.verificarCredenciales("Administrador")) return null;
        if (ri.getRI_ID() == 0) {
            return null;
        }
        if (OpcionPanel.NO_OPTION == OpcionPanel.showConfirmDialog(null, "¿Realmente desea quitar este requerimiento interno del sistema?\nTambién se eliminarán las alarmas asociadas.", "Confirmar eliminación", OpcionPanel.YES_NO_OPTION)) {
            return null;
        }
        return new EliminarRITask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class EliminarRITask extends org.jdesktop.application.Task<Object, Void> {

        boolean r = false;

        EliminarRITask(org.jdesktop.application.Application app) {

            super(app);
        }

        @Override
        protected Object doInBackground() {
            RIDAO otDao = new RIDAO();
            otDao.conectar();
            r = otDao.borrar(ri);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (r) {
                //int i = jListDeOT.getSelectedIndex();
                listaDeRI.removeElement(ri);
                limpiarCampos();
                try {
                    appMain.verificarAlarmas().execute();
                } catch (Exception ex) {
                }
            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error al procesar la solicitud. \nIntente nuevamente. ", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }

    @Action
    public Task queryRI() {
        return new QueryRITask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class QueryRITask extends org.jdesktop.application.Task<Object, Void> {

        ArrayList<RI> rList = new ArrayList<RI>();

        QueryRITask(org.jdesktop.application.Application app) {

            super(app);
        }

        @Override
        protected Object doInBackground() {
            RIDAO otDao = new RIDAO();
            otDao.conectar();
            rList = otDao.find(query);

            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {

            setListDeRI(rList);

        }
    }

    @Action
    public Task openSelectObra() {

        return new OpenSelectObraTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class OpenSelectObraTask extends org.jdesktop.application.Task<Object, Void> {

        ArrayList<Obras> arrayDeObras = new ArrayList<Obras>();

        OpenSelectObraTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to OpenSelectObraTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            ObrasDAO odao = new ObrasDAO();
            odao.conectar();
            arrayDeObras = odao.cargarTodos();
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            listaDeObras.clear();
            for (Obras o : arrayDeObras) {
                listaDeObras.addElement(o);
            }
            jDialog1.setLocationRelativeTo(btnObra);
            jDialog1.setVisible(true);
        }
    }

    @Action
    public Task crearAlarma2RI() {
        if (ri.getRI_ID() == 0) {
            return null;
        }
        if (dateNuevaAlarma.getDate() == null) {
            return null;
        }
        if (OpcionPanel.NO_OPTION == OpcionPanel.showConfirmDialog(null, "¿Desea crear una alarma para este requerimiento interno?", "Confirmación", OpcionPanel.YES_NO_OPTION)) {
            return null;
        }
        return new CrearAlarma2RITask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class CrearAlarma2RITask extends org.jdesktop.application.Task<Object, Void> {

        Date fecha = dateNuevaAlarma.getDate();
        Alarma alarma = new Alarma();

        CrearAlarma2RITask(org.jdesktop.application.Application app) {

            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to CrearAlarma2RITask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            AlarmasDAO aDao = new AlarmasDAO();
            aDao.conectar();

            alarma.setFecha(fecha);
            alarma.setComentario(ri.getSolicitante() + " \n" + ri.getObservaciones());
            alarma.setRiID(ri.getRI_ID());
            alarma.setNombre("Alarma para el RI " + ri.getRI_num());
            alarma.setAlarmaID(aDao.guardar(alarma));
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (alarma.getAlarmaID() > 0) {
                lblStatus.setText("Alarma creada");
                dateNuevaAlarma.setDate(null);
            } else {
                lblStatus.setText("Error al crear la alarma");
            }
        }
    }

    private void establecerEditorDeString(JTable t) {
        final EditorDeCeldasString string = new EditorDeCeldasString(10);
        string.setHorizontalAlignment(EditorDeCeldasString.RIGHT);
        DefaultCellEditor editotStr = new DefaultCellEditor(string) {

            @Override
            public Object getCellEditorValue() {
                return string.getValue();
            }
        };

        t.setDefaultEditor(String.class, editotStr);
    }

    @Action
    public Task exportRIexcel() {
        if (ri.getRI_ID() == 0) {
            return null;
        }
        return new ExportRIexcelTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class ExportRIexcelTask extends org.jdesktop.application.Task<Object, Void> {

        String url = "";

        ExportRIexcelTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to ExportRIexcelTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            ReportesDAO rdao = new ReportesDAO();
            rdao.conectar();
            url = rdao.reportRIexcel(ri.getRI_ID(), ri.getRI_num());
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            OpcionPanel.showMessageDialog(null, url, "Exportación a Excel.", OpcionPanel.INFORMATION_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ABMRiItemDialog;
    private javax.swing.JButton Cerrar;
    private javax.swing.JButton addItemRI;
    private javax.swing.JButton addRI;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrearAlarma;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnObra;
    private javax.swing.JTextField buscarRI;
    private javax.swing.JTextField cantidad;
    private com.toedter.calendar.JDateChooser dateNuevaAlarma;
    private javax.swing.JTextField detalle;
    private javax.swing.JButton editItemRI;
    private javax.swing.JButton editRI;
    private com.toedter.calendar.JDateChooser fechaEmision;
    private com.toedter.calendar.JDateChooser fechaEntrega;
    private com.toedter.calendar.JDateChooser fechaNecesidad;
    private com.toedter.calendar.JDateChooser fechaOc;
    private javax.swing.JButton guardarRiItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListDeObra;
    private javax.swing.JList jListaDeRI;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblNombreObra;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField numeroOC;
    private javax.swing.JTextArea observaciones;
    private javax.swing.JTextField proveedor;
    private javax.swing.JButton remItemRI;
    private javax.swing.JButton remRI;
    private javax.swing.JLabel riNum;
    private javax.swing.JButton seleccionarObra;
    private javax.swing.JTable tablaItems;
    private javax.swing.JTextArea txtObservaciones;
    private javax.swing.JTextField txtRI_Num;
    private javax.swing.JTextField txtSolicitante;
    private javax.swing.JTextField unidad;
    private javax.swing.JTextField valorOC;
    // End of variables declaration//GEN-END:variables
    private DefaultListModel listaDeRI = new DefaultListModel();
    private RI ri = new RI();
    private RiItem selected = new RiItem();
    private ArrayList<RiItem> riItemes = new ArrayList<RiItem>();
    private DefaultListModel listaDeObras = new DefaultListModel();
    private Obras obraSelect = new Obras();
    private String query = "";
    private boolean isEdit = false;
    private TablaRIItemModel modelItems = new TablaRIItemModel();
    private CellTextEditor editor = new CellTextEditor(true);
}
