/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDAlarmas.java
 *
 * Created on 12/06/2012, 00:22:49
 */
package zilleprojects.form;

import DAO.AlarmasDAO;
import Modelo.Alarma;
import Utils.FechaUtil;
import Vista.OpcionPanel;
import Vista.PanelAzul;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author matuuar
 */
public class JDAlarmas extends javax.swing.JDialog {
    Image icono = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/zilleprojects/resources/icono.png"));

    /** Creates new form JDAlarmas */
    public JDAlarmas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setIconImage(icono);
        recargarListaDeAlarmas();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new PanelAzul();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListAlarmas = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pinDiasAntes = new javax.swing.JSpinner();
        txtFecha = new com.toedter.calendar.JDateChooser();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtComentario = new javax.swing.JTextArea();
        btnNuevaAlarma = new javax.swing.JButton();
        btnModificarAlarma = new javax.swing.JButton();
        btnQuitarAlarma = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtBuscarAlarmas = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(775, 400));
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);

        jPanel1.setMinimumSize(new java.awt.Dimension(775, 400));
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jListAlarmas.setModel(listaDeAlarmas);
        jListAlarmas.setName("jListAlarmas"); // NOI18N
        jListAlarmas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListAlarmasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListAlarmas);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(JDAlarmas.class);
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jPanel2.border.lineColor"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        pinDiasAntes.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        pinDiasAntes.setEnabled(false);
        pinDiasAntes.setName("pinDiasAntes"); // NOI18N

        txtFecha.setEnabled(false);
        txtFecha.setName("txtFecha"); // NOI18N

        txtNombre.setText(resourceMap.getString("txtNombre.text")); // NOI18N
        txtNombre.setEnabled(false);
        txtNombre.setName("txtNombre"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        txtComentario.setColumns(20);
        txtComentario.setFont(txtComentario.getFont());
        txtComentario.setLineWrap(true);
        txtComentario.setRows(3);
        txtComentario.setWrapStyleWord(true);
        txtComentario.setEnabled(false);
        txtComentario.setMinimumSize(new java.awt.Dimension(10, 10));
        txtComentario.setName("txtComentario"); // NOI18N
        jScrollPane2.setViewportView(txtComentario);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(pinDiasAntes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(pinDiasAntes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnNuevaAlarma.setIcon(resourceMap.getIcon("btnNuevaAlarma.icon")); // NOI18N
        btnNuevaAlarma.setText(resourceMap.getString("btnNuevaAlarma.text")); // NOI18N
        btnNuevaAlarma.setName("btnNuevaAlarma"); // NOI18N
        btnNuevaAlarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaAlarmaActionPerformed(evt);
            }
        });

        btnModificarAlarma.setIcon(resourceMap.getIcon("btnModificarAlarma.icon")); // NOI18N
        btnModificarAlarma.setText(resourceMap.getString("btnModificarAlarma.text")); // NOI18N
        btnModificarAlarma.setName("btnModificarAlarma"); // NOI18N
        btnModificarAlarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarAlarmaActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getActionMap(JDAlarmas.class, this);
        btnQuitarAlarma.setAction(actionMap.get("eliminarAlarma")); // NOI18N
        btnQuitarAlarma.setIcon(resourceMap.getIcon("btnQuitarAlarma.icon")); // NOI18N
        btnQuitarAlarma.setText(resourceMap.getString("btnQuitarAlarma.text")); // NOI18N
        btnQuitarAlarma.setName("btnQuitarAlarma"); // NOI18N

        btnCancelar.setText(resourceMap.getString("btnCancelar.text")); // NOI18N
        btnCancelar.setEnabled(false);
        btnCancelar.setName("btnCancelar"); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setAction(actionMap.get("guardarAlarma")); // NOI18N
        btnGuardar.setText(resourceMap.getString("btnGuardar.text")); // NOI18N
        btnGuardar.setName("btnGuardar"); // NOI18N

        btnModificar.setAction(actionMap.get("modificarAlarma")); // NOI18N
        btnModificar.setText(resourceMap.getString("btnModificar.text")); // NOI18N
        btnModificar.setName("btnModificar"); // NOI18N

        jButton1.setAction(actionMap.get("cerrarDialog")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        txtBuscarAlarmas.setText(resourceMap.getString("txtBuscarAlarmas.text")); // NOI18N
        txtBuscarAlarmas.setName("txtBuscarAlarmas"); // NOI18N
        txtBuscarAlarmas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscarAlarmasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarAlarmasFocusLost(evt);
            }
        });
        txtBuscarAlarmas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarAlarmasKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevaAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarAlarma, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuitarAlarma, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtBuscarAlarmas, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnModificarAlarma, btnNuevaAlarma, btnQuitarAlarma});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelar, btnGuardar, btnModificar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnNuevaAlarma)
                        .addComponent(btnModificarAlarma)
                        .addComponent(btnQuitarAlarma))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancelar)
                        .addComponent(btnModificar)
                        .addComponent(btnGuardar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtBuscarAlarmas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jListAlarmasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListAlarmasValueChanged
    if (obtenerDatosDeList()){
            desbloquearCampos(false);
            desbloquearBoton(3);
        }
}//GEN-LAST:event_jListAlarmasValueChanged

private void btnModificarAlarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarAlarmaActionPerformed
    if (obtenerDatosDeList()){
            desbloquearCampos(true);
            desbloquearBoton(1);
        }
}//GEN-LAST:event_btnModificarAlarmaActionPerformed

private void btnNuevaAlarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaAlarmaActionPerformed
        limpiarCampos();
        desbloquearCampos(true);
        desbloquearBoton(0);
}//GEN-LAST:event_btnNuevaAlarmaActionPerformed

private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiarCampos();
        if (obtenerDatosDeList()){
            desbloquearCampos(false);
            desbloquearBoton(3);
        }
}//GEN-LAST:event_btnCancelarActionPerformed

    private void txtBuscarAlarmasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarAlarmasKeyReleased
        if(txtBuscarAlarmas.getText().length()>= 3){
            query = txtBuscarAlarmas.getText();
            Task t = queryAlarmas();
            t.execute();
        }
        if(txtBuscarAlarmas.getText().length()== 0){
            recargarListaDeAlarmas();
        }
    }//GEN-LAST:event_txtBuscarAlarmasKeyReleased

    private void txtBuscarAlarmasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarAlarmasFocusGained
        if(txtBuscarAlarmas.getText().equals("Buscar...")){
            txtBuscarAlarmas.setText("");
        }
    }//GEN-LAST:event_txtBuscarAlarmasFocusGained

    private void txtBuscarAlarmasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarAlarmasFocusLost
        if(txtBuscarAlarmas.getText().isEmpty()){
            txtBuscarAlarmas.setText("Buscar...");
        }
    }//GEN-LAST:event_txtBuscarAlarmasFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDAlarmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDAlarmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDAlarmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDAlarmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDAlarmas dialog = new JDAlarmas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public void desbloquearCampos(boolean b) {
        txtNombre.setEnabled(b);
        txtFecha.setEnabled(b);
        txtComentario.setEnabled(b);
        pinDiasAntes.setEnabled(b);
        
    }
    
    public void desbloquearBoton(int opcion) {
        /**
         * 0: Desbloquear boton Crear
         * 1: Desbloquear boton Modificar
         * */
        switch (opcion) {
            case 0:
                btnGuardar.setEnabled(true);
                btnCancelar.setEnabled(true);
                btnModificar.setEnabled(false);
                break;
            case 1:
                btnGuardar.setEnabled(false);
                btnCancelar.setEnabled(true);
                btnModificar.setEnabled(true);
                break;
            default:
                btnGuardar.setEnabled(false);
                btnCancelar.setEnabled(false);
                btnModificar.setEnabled(false);
        }
    }
    
    public boolean obtenerDatosDeList() {
        if (!listaDeAlarmas.isEmpty()) {
            if(jListAlarmas.isSelectionEmpty()){
                alActual = (Alarma) listaDeAlarmas.get(0);
            }else{
                alActual = (Alarma) listaDeAlarmas.get(jListAlarmas.getSelectedIndex());
            }
            setDatosDeAlarma(alActual);
            return true;
        }
        return false;
    }
    
    public void setDatosDeAlarma(Alarma al) {
        txtFecha.setDate(al.getFecha());
        txtNombre.setText(al.getNombre());
        txtComentario.setText(al.getComentario());
        if(al.getFecha_previa()!=null) pinDiasAntes.setValue(FechaUtil.diferenciasDeFechas(al.getFecha_previa(), al.getFecha()));
        else pinDiasAntes.setValue(new Integer(0));
    }
    public void limpiarCampos() {
        txtFecha.setDate(new Date());
        txtNombre.setText("");
        txtComentario.setText("");
        pinDiasAntes.setValue(new Integer(0));
        alActual= new Alarma();
    }
    private void setListDeAlarma(ArrayList<Alarma> list) {
        listaDeAlarmas.clear();
        for (Alarma ot : list) {
            listaDeAlarmas.addElement(ot);
        }
        jListAlarmas.setModel(listaDeAlarmas);
    }
    
    public void setModelListAlarma(DefaultListModel list) {
        listaDeAlarmas = list;
    }
    
    public  void setSelectedAlarma(Alarma al){
        jListAlarmas.setSelectedValue(al, true);
    }

    public DefaultListModel getModelListAlarmas() {
        return listaDeAlarmas;
    }
    
    private void recargarListaDeAlarmas() {
        AlarmasDAO otDao = new AlarmasDAO();
        otDao.conectar();
        setListDeAlarma(otDao.cargarTodos());
    }

    @Action
    public void cerrarDialog() {
        dispose();
    }

    @Action
    public Task guardarAlarma() {
        if(txtNombre.getText().isEmpty() || txtFecha.getDate()==null){
            return null;
        }
        alActual = new Alarma();
        alActual.setNombre(txtNombre.getText());
        alActual.setFecha(txtFecha.getDate());
        alActual.setComentario(txtComentario.getText());
        int previos = (Integer.valueOf(pinDiasAntes.getValue().toString()));
        if( previos> 0){
            alActual.setFecha_previa(FechaUtil.restarFechasDias(alActual.getFecha(), previos));
        }else{
            alActual.setFecha_previa(null);
        }
        alActual.setRiID(0);
        return new GuardarAlarmaTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class GuardarAlarmaTask extends org.jdesktop.application.Task<Object, Void> {
        int r = 0;
        GuardarAlarmaTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to GuardarAlarmaTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            AlarmasDAO dao = new AlarmasDAO();
            dao.conectar();
            r = dao.guardar(alActual);
            alActual.setAlarmaID(r);
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            if (r > 0) {
                OpcionPanel.showMessageDialog(null, "Alarma creada correctamente.", "Éxito", OpcionPanel.INFORMATION_MESSAGE);
                
                listaDeAlarmas.addElement(alActual);
                //jListDeOT.setModel(listDeOT);
                jListAlarmas.setSelectedValue(alActual, true);
            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error al procesar la solicitud.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }

    @Action
    public Task modificarAlarma() {
        if(txtNombre.getText().isEmpty() || txtFecha.getDate()==null || alActual.getAlarmaID()== 0){
            return null;
        }
        
        alActual.setNombre(txtNombre.getText());
        alActual.setFecha(txtFecha.getDate());
        alActual.setComentario(txtComentario.getText());
        int previos = (Integer.valueOf(pinDiasAntes.getValue().toString()));
        if( previos> 0){
            alActual.setFecha_previa(FechaUtil.restarFechasDias(alActual.getFecha(), previos));
        }else{
            alActual.setFecha_previa(null);
        }
        
        return new ModificarAlarmaTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class ModificarAlarmaTask extends org.jdesktop.application.Task<Object, Void> {
        int r = 0;
        ModificarAlarmaTask(org.jdesktop.application.Application app) {
            
            super(app);
        }
        @Override protected Object doInBackground() {
            AlarmasDAO dao = new AlarmasDAO();
            dao.conectar();
            r = dao.modificar(alActual);
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            if (r > 0) {
                OpcionPanel.showMessageDialog(null, "Alarma modificada correctamente.", "Éxito", OpcionPanel.INFORMATION_MESSAGE);
                if (obtenerDatosDeList()) {
                   desbloquearCampos(false);
                   desbloquearBoton(3);
               }
            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error al procesar la solicitud.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }

    @Action
    public Task eliminarAlarma() {
        if(alActual.getAlarmaID() == 0) return  null;
        if(OpcionPanel.NO_OPTION == OpcionPanel.showConfirmDialog(null, "¿Realmente desea quitar esta alarma del sistema?", "Confirmar eliminación", OpcionPanel.YES_NO_OPTION)){
            return null;
        }
        return new EliminarAlarmaTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class EliminarAlarmaTask extends org.jdesktop.application.Task<Object, Void> {
        boolean r = false;
        EliminarAlarmaTask(org.jdesktop.application.Application app) {
            
            super(app);
        }
        @Override protected Object doInBackground() {
            AlarmasDAO otDao = new AlarmasDAO();
            otDao.conectar();
            r = otDao.borrar(alActual);
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            if(r) {
                //int i = jListDeOT.getSelectedIndex();
                listaDeAlarmas.removeElement(alActual);
                limpiarCampos();
                
            }else{
                OpcionPanel.showMessageDialog(null, "Ocurrió un error al procesar la solicitud. \nIntente nuevamente. ", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }
    
    @Action
    public Task queryAlarmas() {
        return new queryAlarmasTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class queryAlarmasTask extends org.jdesktop.application.Task<Object, Void> {
        ArrayList<Alarma> aList = new ArrayList<Alarma>();
        queryAlarmasTask(org.jdesktop.application.Application app) {
            
            super(app);
        }
        @Override protected Object doInBackground() {
            AlarmasDAO otDao = new AlarmasDAO();
            otDao.conectar();
            aList = otDao.find(query);
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {

            setListDeAlarma(aList);

        }
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnModificarAlarma;
    private javax.swing.JButton btnNuevaAlarma;
    private javax.swing.JButton btnQuitarAlarma;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jListAlarmas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner pinDiasAntes;
    private javax.swing.JTextField txtBuscarAlarmas;
    private javax.swing.JTextArea txtComentario;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
    private DefaultListModel listaDeAlarmas = new DefaultListModel();
    private ArrayList<Alarma> alarmas = new ArrayList<Alarma>();
    private Alarma alActual = new Alarma();
    private String query ="";
}
