/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDEmpleadoGestion.java
 *
 * Created on 02/11/2011, 16:22:40
 */
package zilleprojects.form;

import DAO.FuncionDAO;
import DAO.OperarioDAO;
import Modelo.Funcion;
import Modelo.Operario;
import Vista.OpcionPanel;
import Vista.PanelAzul;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author matuu
 */
public class JDEmpleadoGestion extends javax.swing.JDialog {

    /** Creates new form JDEmpleadoGestion */
    public JDEmpleadoGestion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        modificar = new javax.swing.JDialog();
        jPanel3 = new Vista.PanelAzul();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        modificarPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        nlegajo1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cuil1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        nombre1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        observaciones1 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        comboFuncModif = new javax.swing.JComboBox();
        desaChechMod = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        vto_carnet = new com.toedter.calendar.JDateChooser();
        idText = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        agregarFuncion2 = new javax.swing.JButton();
        panelAzul = new PanelAzul();
        jPanel1 = new javax.swing.JPanel();
        buscarEmpleado = new javax.swing.JTextField();
        buscarBoton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaEmpleados = new javax.swing.JList();
        alertas = new javax.swing.JLabel();
        nuevoOperario = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nlegajo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cuil = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        observaciones = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        comboFuncion = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        desaCheck = new javax.swing.JCheckBox();
        vto_carnet_nuevo = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        botonAgrgar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        botonRecargar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();

        modificar.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getResourceMap(JDEmpleadoGestion.class);
        modificar.setTitle(resourceMap.getString("modificar.title")); // NOI18N
        modificar.setMinimumSize(new java.awt.Dimension(478, 322));
        modificar.setModal(true);
        modificar.setName("modificar"); // NOI18N
        modificar.setResizable(false);

        jPanel3.setMinimumSize(new java.awt.Dimension(479, 300));
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(479, 300));

        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class).getContext().getActionMap(JDEmpleadoGestion.class, this);
        jButton2.setAction(actionMap.get("modificarOperario")); // NOI18N
        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        modificarPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        modificarPanel.setToolTipText(resourceMap.getString("modificarPanel.toolTipText")); // NOI18N
        modificarPanel.setName("modificarPanel"); // NOI18N
        modificarPanel.setOpaque(false);
        modificarPanel.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        modificarPanel.add(jLabel6, gridBagConstraints);

        nlegajo1.setName("nlegajo1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 103;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        modificarPanel.add(nlegajo1, gridBagConstraints);

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        modificarPanel.add(jLabel7, gridBagConstraints);

        cuil1.setName("cuil1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 99;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 17);
        modificarPanel.add(cuil1, gridBagConstraints);

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        modificarPanel.add(jLabel8, gridBagConstraints);

        nombre1.setName("nombre1"); // NOI18N
        nombre1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombre1FocusLost(evt);
            }
        });
        nombre1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombre1KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 285;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 17);
        modificarPanel.add(nombre1, gridBagConstraints);

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        modificarPanel.add(jLabel9, gridBagConstraints);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        observaciones1.setColumns(20);
        observaciones1.setRows(3);
        observaciones1.setTabSize(4);
        observaciones1.setName("observaciones1"); // NOI18N
        jScrollPane3.setViewportView(observaciones1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 223;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 17);
        modificarPanel.add(jScrollPane3, gridBagConstraints);

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        modificarPanel.add(jLabel11, gridBagConstraints);

        comboFuncModif.setModel(funCombo);
        comboFuncModif.setName("comboFuncModif"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 17);
        modificarPanel.add(comboFuncModif, gridBagConstraints);

        desaChechMod.setText(resourceMap.getString("desaChechMod.text")); // NOI18N
        desaChechMod.setName("desaChechMod"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 10, 0, 17);
        modificarPanel.add(desaChechMod, gridBagConstraints);

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        modificarPanel.add(jLabel13, gridBagConstraints);

        vto_carnet.setName("vto_carnet"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        modificarPanel.add(vto_carnet, gridBagConstraints);

        idText.setText(resourceMap.getString("idText.text")); // NOI18N
        idText.setName("idText"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        agregarFuncion2.setAction(actionMap.get("agregarFuncion")); // NOI18N
        agregarFuncion2.setIcon(resourceMap.getIcon("agregarFuncion2.icon")); // NOI18N
        agregarFuncion2.setText(resourceMap.getString("agregarFuncion2.text")); // NOI18N
        agregarFuncion2.setName("agregarFuncion2"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modificarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(10, 10, 10)
                        .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(agregarFuncion2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modificarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(idText)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(agregarFuncion2))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        javax.swing.GroupLayout modificarLayout = new javax.swing.GroupLayout(modificar.getContentPane());
        modificar.getContentPane().setLayout(modificarLayout);
        modificarLayout.setHorizontalGroup(
            modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        modificarLayout.setVerticalGroup(
            modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 281, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setLocationByPlatform(true);
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);

        panelAzul.setName("panelAzul"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        buscarEmpleado.setText(resourceMap.getString("buscarEmpleado.text")); // NOI18N
        buscarEmpleado.setToolTipText(resourceMap.getString("buscarEmpleado.toolTipText")); // NOI18N
        buscarEmpleado.setMinimumSize(new java.awt.Dimension(10, 30));
        buscarEmpleado.setName("buscarEmpleado"); // NOI18N
        buscarEmpleado.setPreferredSize(new java.awt.Dimension(10, 30));
        buscarEmpleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buscarEmpleadoFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(buscarEmpleado, gridBagConstraints);

        buscarBoton.setAction(actionMap.get("buscar")); // NOI18N
        buscarBoton.setIcon(resourceMap.getIcon("buscarBoton.icon")); // NOI18N
        buscarBoton.setText(resourceMap.getString("buscarBoton.text")); // NOI18N
        buscarBoton.setName("buscarBoton"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        jPanel1.add(buscarBoton, gridBagConstraints);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listaEmpleados.setModel(empList);
        listaEmpleados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaEmpleados.setName("listaEmpleados"); // NOI18N
        listaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaEmpleados);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 248;
        gridBagConstraints.ipady = 140;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 12, 6);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        alertas.setForeground(resourceMap.getColor("alertas.foreground")); // NOI18N
        alertas.setText(resourceMap.getString("alertas.text")); // NOI18N
        alertas.setName("alertas"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(alertas, gridBagConstraints);

        nuevoOperario.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(resourceMap.getColor("nuevoOperario.border.border.lineColor"), 1, true), resourceMap.getString("nuevoOperario.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, resourceMap.getColor("nuevoOperario.border.titleColor"))); // NOI18N
        nuevoOperario.setToolTipText(resourceMap.getString("nuevoOperario.toolTipText")); // NOI18N
        nuevoOperario.setName("nuevoOperario"); // NOI18N
        nuevoOperario.setOpaque(false);
        nuevoOperario.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        nuevoOperario.add(jLabel2, gridBagConstraints);

        nlegajo.setText(resourceMap.getString("nlegajo.text")); // NOI18N
        nlegajo.setName("nlegajo"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 103;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        nuevoOperario.add(nlegajo, gridBagConstraints);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        nuevoOperario.add(jLabel3, gridBagConstraints);

        cuil.setText(resourceMap.getString("cuil.text")); // NOI18N
        cuil.setName("cuil"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 99;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        nuevoOperario.add(cuil, gridBagConstraints);

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(12, 10, 0, 0);
        nuevoOperario.add(jLabel4, gridBagConstraints);

        nombre.setText(resourceMap.getString("nombre.text")); // NOI18N
        nombre.setName("nombre"); // NOI18N
        nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombreFocusLost(evt);
            }
        });
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 285;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        nuevoOperario.add(nombre, gridBagConstraints);

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(12, 10, 0, 0);
        nuevoOperario.add(jLabel5, gridBagConstraints);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        observaciones.setColumns(20);
        observaciones.setRows(3);
        observaciones.setTabSize(4);
        observaciones.setName("observaciones"); // NOI18N
        jScrollPane2.setViewportView(observaciones);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 223;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        nuevoOperario.add(jScrollPane2, gridBagConstraints);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(12, 10, 0, 0);
        nuevoOperario.add(jLabel1, gridBagConstraints);

        comboFuncion.setModel(funCombo);
        comboFuncion.setName("comboFuncion"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 0);
        nuevoOperario.add(comboFuncion, gridBagConstraints);

        jButton3.setAction(actionMap.get("agregarFuncion")); // NOI18N
        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        nuevoOperario.add(jButton3, gridBagConstraints);

        desaCheck.setText(resourceMap.getString("desaCheck.text")); // NOI18N
        desaCheck.setName("desaCheck"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        nuevoOperario.add(desaCheck, gridBagConstraints);

        vto_carnet_nuevo.setName("vto_carnet_nuevo"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        nuevoOperario.add(vto_carnet_nuevo, gridBagConstraints);

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        nuevoOperario.add(jLabel12, gridBagConstraints);

        botonAgrgar.setAction(actionMap.get("agregarOperarios")); // NOI18N
        botonAgrgar.setIcon(resourceMap.getIcon("botonAgrgar.icon")); // NOI18N
        botonAgrgar.setText(resourceMap.getString("botonAgrgar.text")); // NOI18N
        botonAgrgar.setName("botonAgrgar"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        nuevoOperario.add(botonAgrgar, gridBagConstraints);

        botonLimpiar.setAction(actionMap.get("limpiar")); // NOI18N
        botonLimpiar.setIcon(resourceMap.getIcon("botonLimpiar.icon")); // NOI18N
        botonLimpiar.setText(resourceMap.getString("botonLimpiar.text")); // NOI18N
        botonLimpiar.setName("botonLimpiar"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        nuevoOperario.add(botonLimpiar, gridBagConstraints);

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);

        botonRecargar.setAction(actionMap.get("verTodos")); // NOI18N
        botonRecargar.setIcon(resourceMap.getIcon("botonRecargar.icon")); // NOI18N
        botonRecargar.setText(resourceMap.getString("botonRecargar.text")); // NOI18N
        botonRecargar.setName("botonRecargar"); // NOI18N

        botonEliminar.setAction(actionMap.get("eliminarEmpleado")); // NOI18N
        botonEliminar.setIcon(resourceMap.getIcon("botonEliminar.icon")); // NOI18N
        botonEliminar.setText(resourceMap.getString("botonEliminar.text")); // NOI18N
        botonEliminar.setName("botonEliminar"); // NOI18N

        botonModificar.setIcon(resourceMap.getIcon("botonModificar.icon")); // NOI18N
        botonModificar.setText(resourceMap.getString("botonModificar.text")); // NOI18N
        botonModificar.setName("botonModificar"); // NOI18N
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonSalir.setIcon(resourceMap.getIcon("botonSalir.icon")); // NOI18N
        botonSalir.setText(resourceMap.getString("botonSalir.text")); // NOI18N
        botonSalir.setName("botonSalir"); // NOI18N
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonRecargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonSalir)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botonEliminar, botonModificar, botonRecargar, botonSalir});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRecargar)
                    .addComponent(botonEliminar)
                    .addComponent(botonModificar)
                    .addComponent(botonSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonEliminar, botonModificar, botonSalir});

        javax.swing.GroupLayout panelAzulLayout = new javax.swing.GroupLayout(panelAzul);
        panelAzul.setLayout(panelAzulLayout);
        panelAzulLayout.setHorizontalGroup(
            panelAzulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAzulLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAzulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nuevoOperario, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelAzulLayout.setVerticalGroup(
            panelAzulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAzulLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAzulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAzulLayout.createSequentialGroup()
                        .addComponent(nuevoOperario, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void buscarEmpleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarEmpleadoFocusGained
        this.getRootPane().setDefaultButton(buscarBoton);
    }//GEN-LAST:event_buscarEmpleadoFocusGained

    private void nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyTyped
        if (!nombre.getText().isEmpty()) {
            nombre.setText(nombre.getText().toUpperCase());
        }
    }//GEN-LAST:event_nombreKeyTyped

    private void nombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreFocusLost
        if (!nombre.getText().isEmpty()) {
            nombre.setText(nombre.getText().toUpperCase());
        }

    }//GEN-LAST:event_nombreFocusLost

    private void nombre1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombre1FocusLost
        if (!nombre1.getText().isEmpty()) {
            nombre1.setText(nombre1.getText().toUpperCase());
        }
    }//GEN-LAST:event_nombre1FocusLost

    private void nombre1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombre1KeyTyped
        if (!nombre1.getText().isEmpty()) {
            nombre1.setText(nombre1.getText().toUpperCase());
        }
    }//GEN-LAST:event_nombre1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        modificar.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        mostrarEdicionEmpleado();

    }//GEN-LAST:event_botonModificarActionPerformed

private void listaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaEmpleadosMouseClicked
    if (evt.getClickCount() == 2) // Se mira si es doble click
    {
        mostrarEdicionEmpleado();
        //int posicion = listaEmpleados.locationToIndex(evt.getPoint());
        //System.out.println("La posicion es " + posicion);
    }
}//GEN-LAST:event_listaEmpleadosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDEmpleadoGestion dialog = new JDEmpleadoGestion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void mostrarEdicionEmpleado() {
        if (listaEmpleados.getSelectedValue() != null) {
            Operario op = (Operario) listaEmpleados.getSelectedValue();
            nlegajo1.setText(op.getN_legajo());
            cuil1.setText(op.getCuil());
            nombre1.setText(op.getNombre());
            observaciones1.setText(op.getObservaciones());
            comboFuncModif.setSelectedItem(new Funcion(op.getFuncion()));
            desaChechMod.setSelected(op.isDesarraigo());
            if(op.getVto_carnet()!=null){
                vto_carnet.setDate(op.getVto_carnet());
            }
            else{
                vto_carnet.setDate(null);
            }
            idText.setText(op.getId() + "");
            modificar.setSize(478, 252);
            modificar.setLocationRelativeTo(this);
            modificar.setVisible(true);
            
        }
    }

    @Action
    public Task buscar() {
        if (buscarEmpleado.getText().isEmpty()) {
            return null;
        }
        return new BuscarTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class BuscarTask extends org.jdesktop.application.Task<Object, Void> {

        String q = buscarEmpleado.getText();

        BuscarTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to BuscarTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            OperarioDAO odao = new OperarioDAO();
            odao.conectar();
            empleados = odao.buscar(q);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (empleados.isEmpty()) {
                alertas.setText("No hay datos coincidentes.");

            } else {
                empList.removeAllElements();
                for (int i = 0; i < empleados.size(); i++) {
                    empList.addElement((Operario) empleados.get(i));
                }
                listaEmpleados.setModel(empList);
            }
        }
    }

    @Action
    public Task verTodos() {
        return new VerTodosTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class VerTodosTask extends org.jdesktop.application.Task<Object, Void> {

        VerTodosTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to VerTodosTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            OperarioDAO odao = new OperarioDAO();
            odao.conectar();
            empleados = odao.cargarTodos();
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (empleados.isEmpty()) {
                alertas.setText("No hay datos coincidentes.");

            } else {
                empList.removeAllElements();
                for (int i = 0; i < empleados.size(); i++) {
                    empList.addElement((Operario) empleados.get(i));
                }
                listaEmpleados.setModel(empList);
                alertas.setText("");
            }
        }
    }

    @Action
    public Task eliminarEmpleado() {
        String nombreEmp = ((Operario) listaEmpleados.getSelectedValue()).getNombre();
        if (OpcionPanel.NO_OPTION == OpcionPanel.showConfirmDialog(rootPane, "Se eliminará la información de: \n"
                + nombreEmp, "¿Está seguro/a que desea continuar?", OpcionPanel.YES_NO_OPTION)) {
            return null;
        }
        return new EliminarEmpleadoTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class EliminarEmpleadoTask extends org.jdesktop.application.Task<Object, Void> {

        Operario op = (Operario) listaEmpleados.getSelectedValue();

        EliminarEmpleadoTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to EliminarEmpleadoTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            OperarioDAO odao = new OperarioDAO();
            odao.conectar();
            return odao.borrar(op);  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            Boolean r = (Boolean) result;
            if (r) {
                empList.removeElement(op);
                alertas.setText("Eliminación realizada");
            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error. \nIntente nuevamente.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }

    @Action
    public void limpiar() {
        nlegajo.setText("");
        cuil.setText("");
        nombre.setText("");
        observaciones.setText("");
        alertas.setText(null);
    }

    @Action
    public Task agregarOperarios() {
        if (nombre.getText().isEmpty()) {
            alertas.setText("El campo NOMBRE es obligatorio.");
            return null;
        }
        return new AgregarOperariosTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class AgregarOperariosTask extends org.jdesktop.application.Task<Object, Void> {

        Operario op = new Operario(nombre.getText());
        int r = -1;

        AgregarOperariosTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to AgregarOperariosTask fields, here.
            super(app);
            op.setCuil(cuil.getText());
            op.setN_legajo(nlegajo.getText());
            op.setObservaciones(observaciones.getText());
            op.setFuncion(((Funcion)comboFuncion.getSelectedItem()).getId());
            op.setDesarraigo(desaCheck.isSelected());
            if(vto_carnet_nuevo.getDate()!=null) op.setVto_carnet(vto_carnet_nuevo.getDate());
            else op.setVto_carnet(null);
        }

        @Override
        protected Object doInBackground() {
            OperarioDAO odao = new OperarioDAO();
            odao.conectar();
            r = odao.guardar(op);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (r > 0) {
                op.setId(r);
                empList.addElement(op);
                alertas.setText("Operación realizada con éxito.");
                limpiar();
            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error. \nIntente nuevamente.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }

    @Action
    public Task modificarOperario() {
        if (nombre1.getText().isEmpty()) {
            alertas.setText("El campo NOMBRE es obligatorio.");
            return null;
        }
        return new ModificarOperarioTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class ModificarOperarioTask extends org.jdesktop.application.Task<Object, Void> {

        Operario op = (Operario) listaEmpleados.getSelectedValue();
        int r = -1;

        ModificarOperarioTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to ModificarOperarioTask fields, here.
            super(app);
            op.setNombre(nombre1.getText());
            op.setN_legajo(nlegajo1.getText());
            op.setObservaciones(observaciones1.getText());
            op.setCuil(cuil1.getText());
            op.setFuncion(((Funcion)comboFuncion.getSelectedItem()).getId());
            op.setDesarraigo(desaChechMod.isSelected());
            op.setVto_carnet(vto_carnet.getDate());
        }

        @Override
        protected Object doInBackground() {
            OperarioDAO odao = new OperarioDAO();
            odao.conectar();
            r = odao.modificar(op);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (r == 0) {
                modificar.dispose();
                alertas.setText("Datos guardados.");

            } else {
                OpcionPanel.showMessageDialog(null, "Ocurrió un error. \nIntente nuevamente.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }
    
    @Action
    public Task agregarFuncion() {
        newFc = OpcionPanel.showInputDialog(this, "Función: ");
        if (newFc == null || newFc.isEmpty()) {
            return null;
        }
        return new AgregarFuncionTask(org.jdesktop.application.Application.getInstance(zilleprojects.ZilleProjectsApp.class));
    }

    private class AgregarFuncionTask extends org.jdesktop.application.Task<Object, Void> {

        Funcion fun = new Funcion(newFc);
        int r = -1;

        AgregarFuncionTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to AgregarFuncionTask fields, here.
            super(app);
        }

        @Override
        protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            FuncionDAO fdao = new FuncionDAO();
            fdao.conectar();
            r = fdao.guardar(fun);
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result) {
            if (r >= 0) {
                fun.setId(r);
                funCombo.addElement(fun);
            } else {
                OpcionPanel.showMessageDialog(null, "Compruebe que ya no exista una \nfunción con ese nombre.", "Error", OpcionPanel.ERROR_MESSAGE);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarFuncion2;
    private javax.swing.JLabel alertas;
    private javax.swing.JButton botonAgrgar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonRecargar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton buscarBoton;
    private javax.swing.JTextField buscarEmpleado;
    private javax.swing.JComboBox comboFuncModif;
    private javax.swing.JComboBox comboFuncion;
    private javax.swing.JTextField cuil;
    private javax.swing.JTextField cuil1;
    private javax.swing.JCheckBox desaChechMod;
    private javax.swing.JCheckBox desaCheck;
    private javax.swing.JLabel idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listaEmpleados;
    private javax.swing.JDialog modificar;
    private javax.swing.JPanel modificarPanel;
    private javax.swing.JTextField nlegajo;
    private javax.swing.JTextField nlegajo1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField nombre1;
    private javax.swing.JPanel nuevoOperario;
    private javax.swing.JTextArea observaciones;
    private javax.swing.JTextArea observaciones1;
    private javax.swing.JPanel panelAzul;
    private com.toedter.calendar.JDateChooser vto_carnet;
    private com.toedter.calendar.JDateChooser vto_carnet_nuevo;
    // End of variables declaration//GEN-END:variables
    ArrayList<Operario> empleados = new ArrayList<Operario>();
    //static ArrayList<Funcion> funciones = new ArrayList<Funcion>();
    public static DefaultComboBoxModel funCombo = new DefaultComboBoxModel();
    static DefaultListModel empList = new DefaultListModel();
    String newFc="";
}
